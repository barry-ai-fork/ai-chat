{"version":3,"file":"4473.136e42b17d19583a277e.js","mappings":"wNAiCA,MA6FA,GAAeA,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUC,aACT,MAAMC,GAAOC,EAAAA,EAAAA,IAAWH,EAAQC,GAC1BG,GAAYC,EAAAA,EAAAA,IAAoBL,EAAQC,GACxCK,GAAoBC,EAAAA,EAAAA,IAAeP,GAAQQ,YAAcR,EAAOS,WAAWH,uBAAoBI,EACrG,MAAO,CACLN,YACAO,UAAWX,EAAOY,MAAMC,KACxBC,UAAWd,EAAOe,MAAMF,KACxBP,kBAAmBN,EAAOS,WAAWH,kBACrCU,UAAaZ,EACRA,EAAUa,kBAAoB,GAAKb,EAAUc,SADxBhB,GAAQA,EAAKiB,gBAAkBjB,EAAKkB,eAExDd,IAAsBF,GAAWiB,GACvCC,eAAgBtB,EAAOuB,SAASC,MAAMF,eACvC,GAdevB,EA7FgC0B,EAClDxB,SACAe,WACAU,YACAtB,YACAuB,kBACAhB,YACAG,YACAQ,qBAEA,MAAM,8BACJM,EAA6B,4BAC7BC,IACEC,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPC,GAAsBC,EAAAA,EAAAA,KAAY,KACtCN,EAA8B,CAC5B3B,UACA,GACD,CAAC2B,EAA+B3B,IAE7BkC,EAAe/B,GAAW+B,aAE1BC,GAAsBC,EAAAA,EAAAA,KAAQ,IAC9BF,EACKG,OAAOC,OAAOJ,GAAcK,QAAO,CAACC,EAAGC,IAAMA,EAAI,IAAGC,KAAI,EAAGtB,KAAIuB,aACpE,GAAIA,EAAQ,CACV,IAAKjC,EAAUU,GACb,OAEF,MAAO,CAAEwB,KAAMlC,EAAUU,GAC3B,CACE,GAAKP,EAAUO,GAGf,MAAO,CAAEnB,KAAMY,EAAUO,GAC3B,IACCmB,OAAOM,SACE,IACb,CAAChC,EAAWqB,EAAcxB,IAmB7B,IAjBAoC,EAAAA,EAAAA,KAAU,KACR,GAAK3C,GAAWiB,KACXL,IAAYZ,EAAUc,UAO3B,OALAW,EAA4B,CAC1BR,GAAIjB,EAAUiB,GACd2B,YAAY,IAGP,KACLnB,EAA4B,CAC1BR,GAAIjB,EAAUiB,GACd2B,YAAY,GACZ,CACH,GACA,CAAC5C,GAAWiB,GAAIjB,GAAWc,SAAUF,EAAUa,IAE7CzB,EAEL,OACE6C,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GACT,mBACAvB,GAAmB,qBAClBX,GAAY,YACbU,GAEFyB,QAASlB,GAETgB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,QACbuB,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,SAASK,EAAK,uBAC9BkB,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,gBAAgBK,EAAK,eAAgB3B,EAAUa,mBAAqB,EAAG,OAEzFgC,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,WACZU,EAAoBO,KAAKS,IACxB,GAAKA,EACL,OAAIA,EAAEP,KACGI,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CAACC,IAAKF,EAAEP,KAAKxB,GAAIwB,KAAMO,EAAEP,KAAMvB,eAAgBA,IAEtD2B,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CAACC,IAAKF,EAAElD,KAAKmB,GAAInB,KAAMkD,EAAElD,KAAMoB,eAAgBA,GAC/D,KAGJ2B,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACC,OAAK,EAAC9B,UAAU,QACrBK,EAAK,iBAEJ,I,oHCzHV,MCgEA,EA/CsC0B,EACpCC,WAEA,MAAM3B,GAAOC,EAAAA,EAAAA,KAEP2B,GAAWC,EAAAA,EAAAA,GAAYF,GACvBG,GAAcC,EAAAA,EAAAA,KAEdC,GAAiBC,EAAAA,EAAAA,KAAO,GAExBC,GAAgBC,EAAAA,EAAAA,MAAY3C,SAASC,MAAMF,iBAAmB6C,EAAAA,IAE9DC,GAAc/B,EAAAA,EAAAA,KAAQ,KAC1B,IAAK4B,EAAe,OAAOP,EAE3B,MAAMW,EAAW,GACjB,IAAK,IAAI3B,EAAI,EAAGA,EAAIgB,EAAKY,OAAQ5B,IAC3BiB,GAAYD,EAAKhB,KAAOiB,EAASjB,GACnC2B,EAASE,KACPtB,EAAAA,GAAAA,cAAA,OAAKvB,UDpCiG,wBCqCpGuB,EAAAA,GAAAA,cAAA,OAAKvB,UDrCkI,wBCqCpGgC,EAAKhB,IACxCO,EAAAA,GAAAA,cAAA,OAAKvB,UDtC+M,wBCsC9KiC,EAASjB,IAC/CO,EAAAA,GAAAA,cAAA,OAAKvB,UDvCqX,wBCuCpVgC,EAAKhB,MAI/C2B,EAASE,KAAKtB,EAAAA,GAAAA,cAAA,YAAOS,EAAKhB,KAM9B,OAFAqB,EAAeS,SAAU,EAElBH,CAAQ,GACd,CAACV,EAAUM,EAAeP,IAO7B,OALAe,EAAAA,EAAAA,IAAW,KACTV,EAAeS,SAAU,EACzBX,GAAa,GACZE,EAAeS,QAxCG,SAwCwB9D,GAG3CuC,EAAAA,GAAAA,cAAA,QAAMvB,UD1Da,uBC0DWgD,IAAK3C,EAAK4C,MAAQ,WAAQjE,GACrD0D,EACI,C,gUCnBX,SAAetE,EAAAA,EAAAA,KA1Bf,SAAiC8E,GAC/B,MAAM,QACJC,EAAO,OAAEC,EAAM,aAAEC,EAAY,aAAEC,KAAiBC,GAC9CL,EAEEM,EAAeL,GAASM,WAAWC,QACnCC,EAAiBR,GAAY,UAASA,EAAQxD,KAC9CiE,GAAiBC,EAAAA,EAAAA,GACrBV,GAAUW,EAAAA,EAAAA,IAAsBX,EAAQxD,SAAMX,EAC9CoE,IAAWC,EACXU,EAAAA,GAAAA,QACAT,GAEIU,GAASH,EAAAA,EAAAA,GAASF,EAAgBP,OAAQpE,EAAWsE,GAE3D,OACE/B,EAAAA,GAAAA,cAAC0C,EAAAA,EAAuBC,EAAA,CACtBF,OAAQA,EACRG,WAAYP,EACZJ,aAAcA,GAEVD,GAGV,G,yGCvCA,QAAwD,uB,oOCgBxD,MAAMa,EAAoB,IAAIC,IAyC9B,GAAejG,EAAAA,EAAAA,KAvCf,SAAiC8E,GAC/B,MAAM,WACJiB,EAAU,aAAEX,EAAY,UAAExD,KAAcuD,GACtCL,GAEGoB,EAAiBC,IAAqBC,EAAAA,EAAAA,GAAQpD,QAAQoC,IAAiBY,EAAkBK,IAAIN,IAC9FO,GAAuBC,EAAAA,EAAAA,GAAmBL,IACzCM,EAAkBC,IAAsBL,EAAAA,EAAAA,IAAQ,GAEjDM,GAAoBtE,EAAAA,EAAAA,KAAY,KACpC+D,IACAH,EAAkBW,IAAIZ,EAAW,GAChC,CAACI,EAAmBJ,KAEjB,KAAEa,GAAS9B,EAEjB,OACE3B,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GAAexB,EDpCT,uBCoCiC0E,GAClDO,OAAOC,EAAAA,EAAAA,QAAoBlG,IAATgG,GAAuB,UAASA,gBAAmBA,SAEpExB,IAAiBoB,GAEhBrD,EAAAA,GAAAA,cAAA,OAAK4D,IAAK3B,EAAcxD,UAAWoF,IAEpCjB,IAAeS,GAEdrD,EAAAA,GAAAA,cAAA,OACE4D,IAAKhB,EACLnE,UAAWoF,EACXC,OAAQP,IAIZvD,EAAAA,GAAAA,cAAC+D,EAAAA,EAAYpB,EAAA,GAAKX,EAAU,CAAE8B,OAAQR,EAAoBU,cAAY,KAG5E,G,wQCaO,MAAMC,EAAwBC,OAAOC,WAAW,sBAC1CC,EAAoCF,OAAOC,WAAW,sBAwgBnE,SAASE,EACPC,EACAC,EACAC,GAEA,OACExE,EAAAA,GAAAA,cAAA,OACEvB,UAAU,wBACVgG,IAAKD,GAEJD,EAAe7E,KAAI,EAAGgF,QAAOC,SAC5B3E,EAAAA,GAAAA,cAAA,OACEvB,UAAU,6BACViF,MAAQ,SAAgB,IAARgB,cAAwB,IAAY,IAANC,SAGlD3E,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,0BACduB,EAAAA,GAAAA,cAAA,KACE0D,MAAQ,yBAAuC,IAAfY,SAGpCtE,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,kBACduB,EAAAA,GAAAA,cAAA,KACE0D,MAAQ,yBAAuC,IAAfY,SAK1C,CAEA,SAAezH,EAAAA,EAAAA,KA/hBa+H,EAC1BC,QACAC,UACAC,cACAC,iBACAC,SACAC,OACAnD,eACAoD,YACA1G,YACA2G,eACAC,aACAC,gBACAC,iBACAC,wBACAC,gBACAC,uBACAC,cACAC,gBACAC,sBACAC,SACAC,cACAC,iBACAC,kBAEA,MAAM,2BAAEC,EAA0B,qBAAEC,EAAoB,gBAAEC,IAAoBvH,EAAAA,EAAAA,OAEtEwH,SAAS,MAAEC,EAAK,MAAEC,EAAK,MAAEC,GAAO,cAAEC,GAAkB3B,EACtD4B,GAAU7G,QAAQ0G,GAASC,GAC3BG,IAAY5F,EAAAA,EAAAA,KAAgB,GAE5ByD,IAAYzD,EAAAA,EAAAA,IAAuB,MACnCjC,IAAOC,EAAAA,EAAAA,MACP,MAAE2C,IAAU5C,IAEZ,SAAE8H,KAAaC,EAAAA,EAAAA,OACdC,GAAaC,KAAkBC,EAAAA,EAAAA,KAAS,GACzCC,GAAyClF,EACzCmF,IAAYC,EAAAA,EAAAA,IAAoBrC,EAAS,aACzCsC,IAAe9E,EAAAA,EAAAA,GAAS4E,IAAW,EAAO1E,EAAAA,GAAAA,SAE1C6E,IAAY/E,EAAAA,EAAAA,IAChB6E,EAAAA,EAAAA,IAAoBrC,EAAS,WAC5BmC,IACDK,EAAAA,EAAAA,IAAsBxC,EAAS,YAGzByC,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCN,EAAAA,EAAAA,IAAoBrC,EAAS,aAC5BQ,GACDgC,EAAAA,EAAAA,IAAsBxC,EAAS,aAG3B4C,IAAkBzI,EAAAA,EAAAA,KAAY,KAClC8H,IAAe,GACfjB,EAAOhB,EAAQ1G,GAAI0G,EAAQ9H,OAAO,GACjC,CAAC8H,EAASgB,IAEP6B,IAAoB1I,EAAAA,EAAAA,KAAY,KACpC8H,IAAe,EAAM,GACpB,KAEG,WACJa,GAAU,eAAErD,GAAc,kBAAEsD,GAAiB,eAAEC,KAC7CC,EAAAA,EAAAA,MAEE,UACJC,GAAS,aAAE1D,GAAY,UAAE2D,GAAS,eAAEC,GAAc,SAAEC,KAClDC,EAAAA,EAAAA,IACFC,EAAAA,EAAAA,IAAYvD,IACZwD,EAAAA,EAAAA,IAAiBxD,GACjB4B,GAAU,QAAU,QACpBW,GACAQ,QACApK,EACAqK,GACAhB,GACAY,GACAC,IACAY,EAAAA,EAAAA,IAAezD,IAGX0D,IAAQC,EAAAA,EAAAA,IAAa3D,GACrB4D,GAwXR,SACE7D,EACA0B,EACAjC,EAAe,EACfkE,GAAQ,EACRG,GAAa,EACb/B,GAAW,GAGX,MAAMgC,GAAY7H,EAAAA,EAAAA,IAA0B,OAEpC8H,KAAMC,EAAM,KAAEC,IAAS3J,EAAAA,EAAAA,KAAQ,KACrC,IAAKmH,EACH,OAGF,MAAM,SAAEyC,EAAQ,SAAEb,GAAa5B,EAC/B,IAAKyC,EACH,MAAO,CACLH,KAAM,IAAII,MAAMC,KAAKC,IAAIhB,ECriBQ,KDqiB8BiB,KAAK,GACpEL,KAAM,GAIV,MAAM,WAAEM,EAAU,WAAEC,GAhJxB,SAAiC1C,EAAoB+B,GACnD,MAAO,CACLU,WAAYzC,EAAY3C,EAAsBsF,QAAU,GAAK,GAAM,GACnED,WAAY1C,EACP3C,EAAsBsF,QACrB,GACCZ,GAAcvE,EAAkCmF,QAAU,GAAK,GAClE,GAER,CAuIuCC,CAAwB5C,EAAU+B,GAC/Dc,EAAiBP,KAAKC,IAAIhB,EA1eT,GA0ewC,GACzDuB,EAAcR,KAAK3I,MAAM8I,GAAcC,EAAaD,GAAcI,GAGxE,OEnhBG,SAA0BZ,EAAgBc,GAC/C,IAAIZ,EAAO,EACX,MAAMa,EAAU,IAAIX,MAAMU,GACpBE,EAAehB,EAAKxH,OAASsI,EAC7BG,EAAajB,EAAK,GAClBkB,EAAclB,EAAKA,EAAKxH,OAAS,GACvC,IAAK,IAAI5B,EAAI,EAAGA,EAAIkK,EAAUlK,IAAK,KAAAuK,EAAAC,EAAAC,EACjC,MAAMC,EAAMjB,KAAKkB,MAAM3K,EAAIoK,GACrBQ,IAAqB,QAAdL,EAACnB,EAAKsB,EAAM,UAAE,IAAAH,EAAAA,EAAIF,IAAwB,QAAdG,EAAKpB,EAAKsB,UAAI,IAAAF,EAAAA,EAAIH,IAA4B,QAAjBI,EAAIrB,EAAKsB,EAAM,UAAE,IAAAD,EAAAA,EAAIH,IAAgB,EAC3GH,EAAQnK,GAAK4K,EACTtB,EAAOsB,IACTtB,EAAOsB,EAEX,CACA,MAAO,CAAExB,KAAMe,EAASb,OAC1B,CFogBWuB,CEljBJ,SAAwBC,GAC7B,MAAMC,EAAiC,EAArBD,EAAYlJ,OACxBoJ,EAAcvB,KAAKkB,MAAMI,EAAY,GAC3C,IAAKC,EACH,MAAO,GAWT,MAAMC,EAASzB,MAAMwB,GACfE,EAAWJ,EACjB,IAAK,IAAI9K,EAAI,EAAGmL,EAAIH,EAAc,EAAGhL,IAAMmL,IAAKnL,EAAG,CACjD,MAAMoL,EAAY3B,KAAKkB,MAAW,EAAJ3K,EAAS,GACjCqL,EAAW5B,KAAKkB,MAAW,EAAJ3K,EAAS,GAChCsL,EAAQJ,EAASE,IAAcF,EAASE,EAAY,IAAM,GAChEH,EAAOjL,GAAOsL,GAASD,EAAY,EACrC,CACA,MAAME,EAAgB9B,KAAKkB,MAA2B,GAAnBK,EAAc,GAAU,GACrDQ,EAAe/B,KAAKkB,MAA2B,GAAnBK,EAAc,GAAU,GACpDS,EAAYP,EAASK,IAAkBL,EAASK,EAAgB,IAAM,GAG5E,OAFAN,EAAOD,EAAc,GAAMS,GAAaD,EAAgB,GAEjDP,CACT,CFmhB4BS,CAAe,IAAIC,WAAWpC,IAEbU,EAAY,GACpD,CAAC9C,EAAUL,EAAOoC,KAAgB,CAAC,EAqBtC,OAnBA0C,EAAAA,EAAAA,KAAgB,KACd,MAAMC,EAAS1C,EAAUrH,QAEpB+J,GAAWxC,QAAmBrL,IAATsL,GC/iBvB,SACLuC,EACAxC,EACAyC,GACA,KACExC,EAAI,UAAEyC,EAAS,kBAAEC,IAGnB,MAAMC,EAZW,EAYH5C,EAAOzH,OAGrBiK,EAAOI,MAAgB,EAARA,EACfJ,EAAOK,OAASA,GAChBL,EAAO5H,MAAMgI,MAAS,GAAEA,MACxBJ,EAAO5H,MAAMiI,OAAU,OAEvB,MAAMC,EAAMN,EAAOO,WAAW,MAC9BD,EAAIE,MAAM,EAAG,GAEbhD,EAAOiD,SAAQ,CAACC,EAAMvM,KACpBmM,EAAIK,YAAexM,EAAIqJ,EAAOzH,QAAUkK,EAAY,GAAM,EAC1DK,EAAIJ,UAAYD,EAAW9L,EAAIqJ,EAAOzH,OAASoK,EAAoBD,EACnE,MAAMU,EAAchD,KAAKiD,IAAI,EAAaH,EAAO9C,KAAKiD,IAAI,EAAGpD,GAxBlD,KA8Bf,SACE6C,EAA+BQ,EAAWC,EAAWX,EAAeC,EAAgBW,GAlClE,EAoCN,EAAIA,IACdA,EAASZ,GAEPC,EAAS,EAAIW,IACfA,EAASX,EAAS,GAGpBC,EAAIW,YACJX,EAAIY,OAAOJ,EAAIE,EAAQD,GACvBT,EAAIa,MAAML,EA7CQ,EA6CGC,EAAGD,EA7CN,EA6CiBC,EAAIV,EAAQW,GAC/CV,EAAIa,MAAML,EA9CQ,EA8CGC,EAAIV,EAAQS,EAAGC,EAAIV,EAAQW,GAChDV,EAAIa,MAAML,EAAGC,EAAIV,EAAQS,EAAGC,EAAGC,GAC/BV,EAAIa,MAAML,EAAGC,EAAGD,EAhDE,EAgDSC,EAAGC,GAC9BV,EAAIc,WACN,CAtBIC,CAAiBf,EA3BF,EA2BOnM,GAzBX,GAyBqCyM,GAAe,EA5B/C,EA4B+DA,EA1B9D,GA2BjBN,EAAIxC,MAAM,GAEd,CD8hBIwD,CAAetB,EAAQxC,EAAQxE,EAAc,CAC3CyE,OACAyC,UAAWhD,EANkB,SAAV3D,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,UAQ/C4G,kBAAmBjD,EALkB,SAAV3D,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,WAOvD,GACD,CAAC2D,EAAOO,EAAMzE,EAAcwE,EAAQjE,IAEhC+D,CACT,CA5a4BiE,CACxBhI,EAAO0B,EAAQE,IAAkB+B,GAAS,EAAIlE,GAAckE,IAAQrD,EAAWyB,IAG3EkG,GAAe9E,IAAc1D,GAAe,GAAKA,GAAe,GAEtExE,EAAAA,EAAAA,KAAU,KACRiH,GAAeiB,GAAU,GACxB,CAACA,KAEJ,MAAM+E,GAAsBjG,KAAgBc,IAEtC,YACJoF,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACFrI,EACAE,GAAkBwC,GAClBuF,IAAuBzH,IAIvB8H,aAAcC,GACdlK,qBAAsBmK,KACpBC,EAAAA,EAAAA,GAAkBN,IAEhBO,GAAoBH,KAAwBN,IAAuBC,IAEnES,IAAoBxO,EAAAA,EAAAA,KAAY,KAChC+N,GACFhH,OAIGgC,IACHlC,EAAOhB,EAAQ1G,GAAI0G,EAAQ9H,SAG7B6B,EAAAA,EAAAA,MAAa6O,qBAAqB,CAAEzI,WACpC8B,IAAgBD,IAChBmB,KAAW,GACV,CAAC+E,GAAahF,GAAWlB,GAAamB,GAAWjC,EAAgBF,EAAQhB,EAAQ1G,GAAI0G,EAAQ9H,OAAQiI,KAExGnF,EAAAA,EAAAA,KAAU,KACJiG,GAAeU,IAAkBuB,IAAa1C,IAChDS,GACF,GACC,CAACiC,GAAWvB,EAAeV,EAAaT,IAE3C,MAAMqI,IAAsB1O,EAAAA,EAAAA,KAAY,KAClCqG,EACFY,EAA2B,CAAEpB,YAE7BqB,EAAqB,CAAErB,WACzB,GACC,CAACoB,EAA4BC,EAAsBb,EAAeR,IAE/D8I,IAAa3O,EAAAA,EAAAA,KAAa4O,IAC9B,GAAIlH,GAAUpF,SAAWiD,GAAUjD,QAAS,CAC1C,MAAM,MAAEmK,EAAK,KAAEoC,GAAStJ,GAAUjD,QAAQwM,wBACpCC,EAAUH,aAAaI,WAAaJ,EAAEG,QAAUH,EAAEK,cAAc,GAAGF,QACzEH,EAAEM,kBAEFjG,GAAegB,KAAKiD,IAAIjD,KAAKC,IAAIhB,KAAa6F,EAAUF,GAAQpC,GAAQvD,GAAW,IAAM,MAC3F,IACC,CAACA,GAAUD,KAERkG,IAAkBnP,EAAAA,EAAAA,KAAa4O,IAC/BA,aAAaI,YAA2B,IAAbJ,EAAEQ,SACjC1H,GAAUpF,SAAU,EACpBqM,GAAWC,GAAE,GACZ,CAACD,KAEEU,IAAiBrP,EAAAA,EAAAA,KAAY,KACjC0H,GAAUpF,SAAU,CAAK,GACxB,IAEGgN,IAAkBtP,EAAAA,EAAAA,KAAY,KAClCgH,EAAanB,EAAQ1G,GAAI0G,EAAQ9H,OAAO,GACvC,CAACiJ,EAAanB,EAAQ1G,GAAI0G,EAAQ9H,SAE/BwR,IAAmBvP,EAAAA,EAAAA,KAAY,KACnCmH,EAAgB,CAAEpJ,OAAQ8H,EAAQ9H,OAAQyR,UAAW3J,EAAQ1G,IAAK,GACjE,CAAC0G,EAAQ9H,OAAQ8H,EAAQ1G,GAAIgI,KAEhCtG,EAAAA,EAAAA,KAAU,KACR,GAAK0E,GAAUjD,SAAYuL,GAC3B,OAAO4B,EAAAA,EAAAA,IAAclK,GAAUjD,QAAS,CACtCoN,UAAWP,GACXQ,UAAWN,GACXpO,QAASoO,GACTO,OAAQjB,IACR,GACD,CAACd,GAAcsB,GAAiBR,GAAYU,KAE/C,MAAMQ,IAAoB1P,EAAAA,EAAAA,KAAQ,IAChCY,EAAAA,GAAAA,cAAA,OAAK+O,wBAAyB,CAAEC,OApLb,4SAqLlB,IAEH,SAASC,KACP,GAAIvI,GACF,OAAO3B,GAAe,QAGxB,MAAM,MAAEmK,EAAK,SAAEC,GAAa7I,EAE5B,OAAO4I,GAASC,CAClB,CAwBA,MAAMC,IAAgBnP,EAAAA,EAAAA,GACpB,QACAxB,EACA+J,IAASvD,IAAWoK,EAAAA,GAAAA,QAAsB,OACzCpK,IAAWoK,EAAAA,GAAAA,QAAsBpK,IAAWoK,EAAAA,GAAAA,cAA4B,SACzEhK,GAAc,qBAGViK,GAAmB,CAAC,eACtB9B,GACF8B,GAAiBhO,KAAK,WAEtBgO,GAAiBhO,KAAK0G,GAAY,QAAU,QAG9C,MAAMuH,IAAmBtP,EAAAA,EAAAA,GAAe,UAAW6M,IAAgB,iBAEnE,SAAS0C,KACP,OACExP,EAAAA,GAAAA,cAAA,OAAKvB,UAAW8Q,IACdvP,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,eACbuB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,QAAQgD,IAAI,OAAOyN,MAAOD,OAAoBQ,EAAAA,EAAAA,GAAWR,OAEtEjP,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,gBACZoB,QAAQqF,IACPlF,EAAAA,GAAAA,cAAC0P,EAAAA,EAAI,CACHjR,UAAU,OACVyB,QAASqO,KAERoB,EAAAA,EAAAA,IAAoB7Q,GAAa,IAAPoG,MAMlC4H,IACC9M,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,qBAAqBgD,IAAKC,GAAQ,WAAQjE,GACvDuC,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,yBAAyBgD,IAAI,QAC1C6C,GAAe,GAAM,IAAEsL,EAAAA,EAAAA,IAAoBzH,GAAW7D,GAAc6D,OAEtE9D,EAAeC,GAAcC,GAAgBC,MAGhDsI,IAjER,WACE,GAAIpG,GACF,OACE1G,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,OAAOgD,IAAKC,GAAQ,WAAQjE,IACxCmS,EAAAA,EAAAA,KAAqBrJ,GAASC,GAAQ2B,WAK7C,MAAM,UAAE0H,GAAcvJ,EAEtB,OACEtG,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,OAAOgD,IAAKC,GAAQ,WAAQjE,IACxCmS,EAAAA,EAAAA,IAAoBzH,IACrBnI,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,UAAS,KACxBoR,GAAa7P,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,YAAYyQ,MAAOW,IAAYJ,EAAAA,EAAAA,GAAWI,IACvEA,GAAa9K,GAAe/E,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,UAAS,KACrDsG,GAAe/E,EAAAA,GAAAA,cAAA,QAAMkP,MAAOnK,IAAc0K,EAAAA,EAAAA,GAAW1K,IAG5D,CA6CwB+K,GAGxB,CAEA,OACE9P,EAAAA,GAAAA,cAAA,OAAKvB,UAAW2Q,GAAe3N,IAAK3C,GAAK4C,MAAQ,MAAQ,OACtD0D,GACCpF,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,0BACZ4G,GAAcrF,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,iBAGhCuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLwP,QAASnJ,GACTnD,KAAK,UACLuM,MAAO5I,GAAe,oBAAsB,UAC5C3I,UAAW6Q,GAAiBW,KAAK,KACjCC,UAAWlI,GAAY,cAAgB,aACvC9H,QAASuN,GACT/L,MAAO5C,GAAK4C,MACZyO,gBAAiB/I,IAEjBpH,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,cACbuB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,gBAEd4O,IACCrN,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,gBAAiBqN,GAAmBE,IAAqB,gBACtFxN,EAAAA,GAAAA,cAACoQ,EAAAA,EAAe,CACd7E,SAAU2B,GACVmD,aAAW,EACX5M,KAAK,IACLvD,QAASsN,GAAoBC,QAAoBhQ,EACjD6S,SAAU9C,MAIflH,GAASX,IAAgBqH,IACxBhN,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLkD,KAAK,OACLhF,UAAU,kBACVyR,UAAW5K,EAAgB,kBAAoB,WAC/CpF,QAASyN,IAET3N,EAAAA,GAAAA,cAAA,KAAGvB,UAAW6G,EAAgB,aAAe,qBAGhDL,IAAWoK,EAAAA,GAAAA,QAAsBG,KACjCvK,IAAWoK,EAAAA,GAAAA,QAAsB/I,GA6CxC,SACExH,EACAwH,EACA6B,EACAH,EACA1D,EACAC,EACAC,EACA+L,EACArL,EACAqG,EACAgD,GAEA,MAAM,MACJW,EAAK,UAAEW,EAAS,SAAEV,GAChB7I,EACEkK,EAAexI,GAAc1D,EAAe,GAAKA,EAAe,GAChE,MAAE5C,GAAU5C,EAElB,OACEkB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,WACbuB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,QAAQgD,IAAI,OAAOyN,MAAOA,IAAQO,EAAAA,EAAAA,GAAWP,GAASC,IAClEqB,GACCxQ,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,OAAOgD,IAAKC,EAAQ,WAAQjE,GACzCuC,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,yBAAyBgD,IAAI,SAC1CmO,EAAAA,EAAAA,IAAoBzH,EAAW7D,EAAc6D,IAE/C9D,EAAeC,EAAcC,EAAgBC,KAGhDgM,GAAgBD,GAChBvQ,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,OAAOgD,IAAKC,EAAQ,WAAQjE,GACxC8N,EAAY,IAAEkF,EAAAA,EAAAA,IAAkBnK,EAAO7C,KAAO8H,aAAiB9N,GAAWgT,EAAAA,EAAAA,IAAkBnK,EAAO7C,QAGtG+M,IAAiBD,GACjBvQ,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,OAAOgD,IAAKC,EAAQ,WAAQjE,GACzCuC,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,WAAWgD,IAAI,SAAQmO,EAAAA,EAAAA,IAAoBzH,IAC1D0H,GACC7P,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,UAAS,KACzBuB,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,YAAYgD,IAAI,OAAOyN,MAAOW,IAAYJ,EAAAA,EAAAA,GAAWI,KAGxEhQ,QAAQqF,IACPlF,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,UAAS,KACzBuB,EAAAA,GAAAA,cAAC0P,EAAAA,EAAI,CAACjR,UAAU,OAAOyB,QAASqO,IAC7BmC,EAAAA,EAAAA,IAAoB5R,EAAa,IAAPoG,GAAa,MAQxD,CArGiDyL,CACzC7R,GACAwH,EACA6B,GACAH,GACA1D,GACAC,GACAC,GACCc,GAAiB0H,GAClB9H,EACAgI,GACAjH,EAAcsI,QAAkB9Q,GAEjCwH,IAAWoK,EAAAA,GAAAA,cAA4B9I,GAASC,IAAUgJ,KAC1DvK,IAAWoK,EAAAA,GAAAA,QAAsB9I,GAyFxC,SACEA,EACA/B,EACAkE,EACApE,EACAmC,EACAlB,EACAC,EACAC,EACAC,EACAkL,EACAC,EACAhL,GAEA,OACE7F,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,WACbuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,oBACbuB,EAAAA,GAAAA,cAAA,OACEvB,UAAU,WACVqS,WAAW,EACXrM,IAAKD,GAELxE,EAAAA,GAAAA,cAAA,UAAQyE,IAAKiE,KAEdmI,GAEC7Q,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAACJ,QAASA,MACVuF,GAAiBC,IAAyBG,EAC7CA,GAAqBL,GACXD,GACVsL,GACF,GAGA7Q,EAAAA,GAAAA,cAAA,KAAGvB,WAAWwB,EAAAA,EAAAA,GACZ,kBACCwF,GAAiBC,EAAwB,YAAc,mBACvDD,GAAiBC,KAA0BF,GAAyB,sBAGtED,GAAkBqL,IAIzB5Q,EAAAA,GAAAA,cAAA,KAAGvB,WAAWwB,EAAAA,EAAAA,GAAe,iBAAkBwG,GAAiB,UAAWhF,IAAI,QAC3D,IAAjB6C,GAAqBsL,EAAAA,EAAAA,IAAoBrJ,EAAM4B,WAAYyH,EAAAA,EAAAA,IAAoBrJ,EAAM4B,SAAW7D,IAIzG,CAzIQyM,CACExK,EACA/B,GACAkE,GACApE,GACAmC,EACAlB,EACAC,EACAC,EACAC,EACAoJ,GACAlJ,EAAgB4I,QAAmB/Q,EACnCoI,GAGA,G,mLGxWV,MAAMmL,GAAeC,EAAAA,EAAAA,KAAUC,GAAOA,KAAM,KAAK,GAuMjD,GAAerU,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUoU,mBACT,MAAM,aAAEpP,EAAcqP,aAAeC,WAAYC,IAAoBvU,EAE/DE,EAAOkU,GAAejU,EAAAA,EAAAA,IAAWH,EAAQoU,QAAgB1T,EACzDmC,GAAO2R,EAAAA,EAAAA,IAASJ,IAAgBK,EAAAA,EAAAA,IAAWzU,EAAQoU,QAAgB1T,EACnEgU,EAAUxU,GAAMwU,QAChBC,EAAUzU,IAAQ0U,EAAAA,EAAAA,IAAkB1U,GAAM2U,EAAAA,EAAAA,IAAqB7U,IAAS8U,EAAAA,EAAAA,IAAuB9U,KAC/F,SAAE+U,IAAaC,EAAAA,EAAAA,IAAyBhV,IAAW,CAAC,EACpDiV,EAAUP,EAAUK,OAAWrU,EAOrC,MAAO,CACLsE,eACAuP,gBACArU,OACA2C,OACAqS,eAVqBhV,IAAS2C,MAC5BsS,EAAAA,EAAAA,IAAcjV,MAAUkV,EAAAA,EAAAA,IAAkBlV,EAAM,iBAC/CmV,EAAAA,EAAAA,IAAiBnV,EAAM,gBAS1ByU,UACAM,UACD,GAxBelV,EArMyBuV,EAC3CtQ,eACAnC,OACA3C,OACAqV,gBACAL,iBACAP,UACAJ,gBACAU,cAEA,MAAM,aACJO,EAAY,iBACZC,EAAgB,qBAChBC,EAAoB,sBACpBC,IACE7T,EAAAA,EAAAA,OAGFT,GAAIuU,EAAM,SACVC,EAAQ,UACRC,EAAS,YACTC,EAAW,OACXC,GACEnT,GAAQ,CAAC,GACLxB,GAAIpB,EAAQ6V,UAAWG,GAAkB/V,GAAQ,CAAC,EACpD6B,GAAOC,EAAAA,EAAAA,MAENkU,EAAyBC,IAA8BlM,EAAAA,EAAAA,KAAU0K,IAExE5R,EAAAA,EAAAA,KAAU,KACJiC,GAAgB4Q,GAClBJ,EAAa,CAAEI,UACjB,GACC,CAACJ,EAAcI,EAAQ5Q,IAE1B,MAAMoR,EAActT,QAAQmS,GAAWA,IAAYoB,EAAAA,IAE7CC,GAAkBjU,EAAAA,EAAAA,KAAQ,KAC9B,MAAMsL,EAASmI,GAAWtT,QAAQ+T,GAAMA,EAAEvV,WAE1C,OAAO2M,GAAQrJ,OAASqJ,OAASjN,CAAS,GACzC,CAACoV,IAEEU,GAAsBnU,EAAAA,EAAAA,KAAQ,KAClC,MAAMsL,EAAU9K,OAAkDnC,EAA3CuV,GAAezT,QAAQ+T,GAAMA,EAAEvV,WAEtD,OAAO2M,GAAQrJ,OAASqJ,OAASjN,CAAS,GACzC,CAACuV,EAAepT,IAEb4T,GAAOpU,EAAAA,EAAAA,KAAQ,KACnB,GAAKnC,EAIL,OAAOkW,GACHM,EAAAA,EAAAA,IAAaxW,EAAKmB,GAAImV,IAAsB,GAAGG,SAAU1B,IACzD2B,EAAAA,EAAAA,IAAY1W,EAAK,GACpB,CAACA,EAAMkW,EAAaI,EAAqBvB,IAsB5C,IApBiC/S,EAAAA,EAAAA,KAAY,KAC3CiU,GAA4B3R,IAC1B,MAAMqS,GAA8BrS,EAcpC,OAZAyP,GAAa,KACPmC,EACFT,EAAsB,CACpB1V,OAAQA,EACRgV,QAASA,EACTN,SAAUkC,IAGZnB,EAAqB,CAAEzV,OAAQA,EAAS0U,SAAUkC,GACpD,IAGKA,CAA0B,GACjC,GACD,CAAC5W,EAAQmW,EAAanB,EAASS,EAAsBC,KAEnDzV,GAAQA,EAAK4W,cAAiBd,IAAWT,EAC5C,OAGF,SAASwB,EAAKrT,EAAcsT,IAC1BC,EAAAA,EAAAA,IAAoBvT,GACpB+R,EAAiB,CAAE1N,QAAU,GAAEiP,gBACjC,CAEA,MAAME,EAAkBnB,IAAeoB,EAAAA,EAAAA,IAA0B5C,EAAewB,GAC1EqB,EAAevB,GAAUwB,MAAQC,EAAAA,EAAAA,IAAmBpX,GAE1D,SAASqX,EAAgBC,EAA6BC,GACpD,MAAOC,KAAiBC,GAAkBH,EAEpCI,EAAgBD,EAAerT,OAChCvC,EAAK,eAAgB,eACrB8V,MAAM,KACNlV,KAAKmV,GACU,cAANA,EACN7U,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACG0U,EAAehV,KAAI,EAAGgU,SAAUoB,GAAQ3K,KACvC,MAAM4K,EAAaP,EAAU,GAAEQ,EAAAA,MAAkBF,IAAU,IAAGA,IAC9D,OACE9U,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACGmK,EAAM,EAAI,KAAO,GAClBnK,EAAAA,GAAAA,cAAA,KACEK,IAAKyU,EACLG,KAAO,GAAED,EAAAA,MAAkBF,IAC3B5U,QAAU2N,KACRqH,EAAAA,EAAAA,GAAUrH,GACViG,EAAKiB,EAAYjW,EAAK0V,EAAS,OAAS,YAAY,EAEtD/V,UAAU,kCAER,IAAGqW,KAEN,KAIPD,SAENpX,EAEEiW,EAAWc,EAAU,QAAOC,EAAaf,WAAae,EAAaf,SACnEqB,EAAaP,EAAU,GAAEQ,EAAAA,MAAkBP,EAAaf,WAAc,IAAGe,EAAaf,WAE5F,OACE1T,EAAAA,GAAAA,cAACmV,EAAAA,EAAQ,CACPC,KAAMZ,EAAS,OAAS,UACxBa,WAAS,EACTC,QAAM,EACNvF,QAAM,EAEN7P,QAASA,IAAM4T,EAAKiB,EAAYjW,EAAK0V,EAAS,OAAS,cAEvDxU,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,QAAQgD,IAAI,QAAQiS,GACpC1T,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,YACbkW,GAAiB3U,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,mBAAmBkW,GACpD7V,EAAK0V,EAAS,OAAS,aAIhC,CAEA,OACExU,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,aACZwV,GAAmBpU,QAAQoU,EAAgB5S,SAE1CrB,EAAAA,GAAAA,cAACmV,EAAAA,EAAQ,CAACC,KAAK,QAAQC,WAAS,EAACC,QAAM,EAACvF,QAAM,EAAC7P,QAASA,IAAM4T,EAAKG,EAAiBnV,EAAK,WACvFkB,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,QAAQgD,IAAI,QAAQwS,GACpCjU,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,YAAYK,EAAK,WAGpCuU,GAAmBiB,EAAgBjB,GACnCc,GAAetU,QAAQsU,EAAY9S,SAClCrB,EAAAA,GAAAA,cAACmV,EAAAA,EAAQ,CACPC,KAAK,OACLC,WAAS,EACTC,QAAM,EACNC,UAAQ,GAERvV,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,mBAAmBgD,IAAI,SACpCgO,EAAAA,EAAAA,GAAW0E,EAAa,CAAC,KAAM,QAAS,WAE3CnU,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,YAAYK,EAAK6T,EAAS,UAAY,UAGzDY,IAAwBJ,GAAemB,EAAgBf,GAAqB,KACzEA,GAAuBtB,GAAmBkB,IAAgBK,GAC5DxT,EAAAA,GAAAA,cAACmV,EAAAA,EAAQ,CACPC,KAAK,OACLC,WAAS,EACTC,QAAM,EACNvF,QAAM,EAEN7P,QAASA,IAAM4T,EAAKN,EAAM1U,EAAK,uBAE/BkB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,SAAS+U,GACxBxT,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,YAAYK,EAAK,uBAcjC,I,wICxMV,MAiLA,GAAejC,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUE,WACT,MAAMuY,GAAgBjE,EAAAA,EAAAA,IAAStU,EAAKmB,IAC9BqX,GAAiBC,EAAAA,EAAAA,IAAqB3Y,EAAQE,EAAKmB,IACnDwB,EAAO4V,IAAiBhE,EAAAA,EAAAA,IAAWzU,GAAQ4Y,EAAAA,EAAAA,IAAqB1Y,IAChE2Y,EAAQhW,IAAQiW,EAAAA,EAAAA,IAAUjW,KAAU3C,EAAK6Y,UACzCC,EAAmBP,IAAkBC,IAAmBG,EACxDI,EAAcR,GAChBS,EAAAA,EAAAA,KAAuBzE,EAAAA,EAAAA,IAAWzU,GAAQ4Y,EAAAA,EAAAA,IAAqB1Y,UAC/DQ,EAEJ,MAAO,CACL+X,gBACAC,iBACAG,QACAM,WAAWhE,EAAAA,EAAAA,IAAcjV,GACzBkZ,cAAcC,EAAAA,EAAAA,IAAiBnZ,GAC/BoZ,cAAcC,EAAAA,EAAAA,IAAiBrZ,GAC/BsZ,cAAexZ,EAAOwZ,cACtBR,kBACAC,cACA3X,eAAgBtB,EAAOuB,SAASC,MAAMF,eACvC,GAtBevB,EAjL+B0Z,EACjDC,SACAxZ,OACAiZ,YACAV,gBACAC,iBACAG,QACAO,eACAE,eACAE,gBACAR,kBACAC,cACA3X,iBACAqY,UACAC,0BAEA,MAAM,aACJC,EAAY,cACZC,EAAa,cACbC,EAAa,eACbC,EAAc,aACdC,IACEnY,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KACPkY,GAAYC,EAAAA,EAAAA,GAAapY,EAAM7B,GAE/Bka,GAAqBlY,EAAAA,EAAAA,KAAY,KACrC4X,EAAc,CAAE7Z,OAAQC,EAAKmB,GAAIgZ,oBAAoB,IAErDV,GAAS,GACR,CAACG,EAAe5Z,EAAKmB,GAAIsY,IAEtBW,GAAsBpY,EAAAA,EAAAA,KAAY,KACtC4X,EAAc,CAAE7Z,OAAQC,EAAKmB,GAAIgZ,oBAAoB,IACrDJ,EAAa,CAAEM,UAAWra,EAAKmB,GAAImZ,WAAYta,EAAKsa,aAEpDb,GAAS,GACR,CAACG,EAAe5Z,EAAKmB,GAAInB,EAAKsa,WAAYP,EAAcN,IAErDc,GAAmBvY,EAAAA,EAAAA,KAAY,KAC/BuW,EACFqB,EAAc,CAAE7Z,OAAQC,EAAKmB,GAAIgZ,oBAAoB,IAC5CjB,GACTY,EAAe,CAAE/Z,OAAQC,EAAKmB,GAAIuU,OAAQ4D,IAC1CM,EAAc,CAAE7Z,OAAQC,EAAKmB,GAAIgZ,oBAAoB,MAC3ClB,IAAaG,GAAkBpZ,EAAKwa,WAEpCvB,GAAaG,IAAiBpZ,EAAKwa,WAC7CX,EAAc,CAAE9Z,OAAQC,EAAKmB,KAF7BwY,EAAa,CAAE5Z,OAAQC,EAAKmB,KAI9BsY,GAAS,GACR,CACDlB,EACAW,EACAD,EACAG,EACAE,EACAtZ,EAAKwa,UACLxa,EAAKmB,GACLsY,EACAG,EACAE,EACAH,EACAE,IAGIY,GAAkBzY,EAAAA,EAAAA,KAAY,KAC9BiX,GAAaG,GACfO,EAAa,CAAE5Z,OAAQC,EAAKmB,KAC5BsY,KAEAc,GACF,GACC,CAACva,EAAKmB,GAAIoZ,EAAkBtB,EAAWG,EAAcO,EAAcF,IAgEtE,OACE1W,EAAAA,GAAAA,cAAC2X,EAAAA,EAAK,CACJlB,OAAQA,EACRhY,UAAU,kBACVmZ,OAhEA5X,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,eAAegD,IAAK3C,EAAK4C,MAAQ,WAAQjE,GACtDuC,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACLqD,KAAK,OACLxG,KAAMA,EACN4a,gBAAiBpC,EACjBpX,eAAgBA,EAChByZ,WAAS,IAEX9X,EAAAA,GAAAA,cAAA,MAAIvB,UAAU,eAAeK,EAM7BoX,IAAcjZ,EAAKwa,UACd,eAGLvB,GAAajZ,EAAKwa,UACb,gBAGLtB,GAAgBE,EACX,mBAGF,oBAuCLK,QAASA,EACTC,oBAAqBA,GApCnBT,GAAajZ,EAAKwa,UAElBzX,EAAAA,GAAAA,cAAA,UACGyP,EAAAA,EAAAA,GAAW3Q,EAAK,2CAA4CmY,GAAY,CAAC,kBAAmB,WAK9Ff,IAAcjZ,EAAKwa,WAActB,GAAgBE,EAC7CrW,EAAAA,GAAAA,cAAA,UAAIyP,EAAAA,EAAAA,GAAW3Q,EAAK,4BAA6BmY,GAAY,CAAC,kBAAmB,WAGnFjX,EAAAA,GAAAA,cAAA,UAAIyP,EAAAA,EAAAA,GAAW3Q,EAAK,kCAAmCkX,GAAc,CAAC,kBAAmB,WA2B9FhW,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,yBACZmX,GACC5V,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAAC0P,MAAM,SAASvR,UAAU,wBAAwBsZ,QAAM,EAAC7X,QAASmX,GACtEvY,EAAK,kBAGTiX,GACC/V,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAAC0P,MAAM,SAASvR,UAAU,wBAAwBsZ,QAAM,EAAC7X,QAASiX,GACtEnB,GAAcvG,EAAAA,EAAAA,GAAW3Q,EAAK,6BAA8BkX,IAAgBlX,EAAK,kBAGpF0W,GAAiBvY,EAAKwa,WACtBzX,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAAC0P,MAAM,SAASvR,UAAU,wBAAwBsZ,QAAM,EAAC7X,QAASsX,GACtE1Y,EAAK,iBAGVkB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL0P,MAAM,SACNvR,UAAU,wBACVsZ,QAAM,EACN7X,QAASsV,EAAgBgC,EAAmBE,GAE3C5Y,EA7CHoX,IAAcjZ,EAAKwa,UACd,eAELvB,GAAajZ,EAAKwa,UACb,oBAGLtB,GAAgBE,EACX,mBAGFN,EAAkB,gCAAkC,WAoCvD/V,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAAC7B,UAAU,wBAAwBsZ,QAAM,EAAC7X,QAASwW,GAAU5X,EAAK,YAErE,I,mJC7KZ,MAsHA,GAAejC,EAAAA,EAAAA,KApHgBmb,EAC7BlT,UACAmT,sBACAC,UACAC,cACAC,wBACApT,iBACAqT,WACAC,WACA7Z,YACA8Z,SACAlT,aACAD,eACAY,iBACAwS,eACAvS,cACAX,oBAEA,MAAMmT,GAAW5Z,EAAAA,EAAAA,MAGX4F,GAAM1D,EAAAA,EAAAA,IAAuB,MAE7B2X,EAAW5T,EAAQuB,QAAQqS,UAC3B,SAAEvJ,EAAQ,KAAE1L,EAAI,UAAEkV,GAAcD,EAChCE,GAAYC,EAAAA,EAAAA,IAAqBH,IAAa,GAE9CI,GAAiBC,EAAAA,EAAAA,IAAkBtU,EAAKwT,IACvCe,EAAgBC,IAAmBhW,EAAAA,EAAAA,MAC1CnD,EAAAA,EAAAA,KAAU,KACJgZ,GACFG,GACF,GACC,CAACH,EAAgBG,IAGpB,MAAOC,EAAeC,IAAoBnS,EAAAA,EAAAA,IACxCmR,KAAiBC,GAAyB3U,GAvCzB,QAuCiC2U,IAG9CgB,EAAiBvZ,QAAQyF,GAAkB4T,GAAiBF,GAE5DK,GAAelS,EAAAA,EAAAA,IAAoBrC,EAAS,aAC1CyC,aAAcC,EAAgB,UAAEH,IAAcI,EAAAA,EAAAA,GACpD4R,GAAeD,GAAgB9R,EAAAA,EAAAA,IAAsBxC,EAAS,iBAAarH,OAAWA,GAAW,GAE7FQ,EAAW4B,QAAQwH,IAEnB,YACJ2F,EAAW,eAAEC,EAAc,iBAAEC,IAC3BC,EAAAA,EAAAA,IAAsBrI,EAASE,GAAkBwC,EAAkB4R,IAAmBnb,GAEpFqb,GAAaC,EAAAA,EAAAA,IAAsBb,GACnCzW,EAAeqX,GAAaE,EAAAA,EAAAA,IAA4B1U,QAAWrH,EACnEgc,EAAeH,EAAaZ,EAASrW,oBAAiB5E,EACtDic,GAAcpX,EAAAA,EAAAA,IAAS6E,EAAAA,EAAAA,IAAoBrC,EAAS,cAAegU,GAEnEa,EAAkBnB,GAAgB3Y,QAAQ6Y,EAASkB,aACvDC,EAAAA,IAAAA,IAAkCnB,EAASoB,WAAaC,EAAAA,IAAAA,IAAkCrB,EAASoB,WAG/FE,GAAc/a,EAAAA,EAAAA,KAAY,KAC1B+N,EACEhH,GACFA,IAKAV,EACFmT,EAASvS,2BAA2B,CAAEpB,YAIpCmI,EACFkM,GAAiB,GAIfQ,EACFnB,IAEAC,EAAStS,qBAAqB,CAAErB,WAClC,GACC,CACDkI,EAAa1H,EAAe2H,EAAgB0M,EAAiB3T,EAAgByS,EAAU3T,EAAS0T,IAG5FjK,GAAkBtP,EAAAA,EAAAA,KAAY,KAClCgH,EAAanB,EAAQ1G,GAAI0G,EAAQ9H,OAAO,GACvC,CAACiJ,EAAanB,EAAQ1G,GAAI0G,EAAQ9H,SAErC,OACEgD,EAAAA,GAAAA,cAACia,EAAAA,EAAI,CACHxV,IAAKA,EACLyV,KAAM/K,EACNyJ,UAAWA,EACXnV,KAAMA,EACNkV,UAAWN,EAAWC,GAAYK,OAAYlb,EAC9C0c,iBAAkBlY,EAClByX,YAAaD,GAAgBC,EAC7BxB,QAASA,EACTjL,eAAgBA,EAChBD,YAAaA,EACbE,iBAAkBA,EAClBzO,UAAWA,EACX8Z,OAAQA,EACRnT,aAAcA,EACdC,WAAYA,EACZ+U,WAAYT,GAAmBU,EAAAA,EAAAA,IAAuBvV,GAAW,YAAc,WAAc,gBAC7F5E,QAAS8Z,EACT/T,YAAaA,EAAcsI,OAAkB9Q,GAC7C,G,mFCjJN,MAUA,EAVmC6c,EAAGjU,UAAS5H,gBAC7C,MAAMK,GAAOC,EAAAA,EAAAA,KACb,OACEiB,EAAAA,GAAAA,cAAA,QAAMvB,WAAWwB,EAAAA,EAAAA,GAAe,eAAgBxB,GAAYgD,IAAK3C,EAAK4C,MAAQ,MAAQ,SACnF+N,EAAAA,EAAAA,GAAWpJ,GACZrG,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,aACX,C,6DCTX,MAYA,GAAe5B,EAAAA,EAAAA,KAZgB0d,EAC7BC,eAEA,MAAM1b,GAAOC,EAAAA,EAAAA,KAEb,OACEiB,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,YACbK,EAAkB,SAAb0b,EAAsB,cAAgB,eACvC,G,8LCqBX,MA2HA,GAAe3d,EAAAA,EAAAA,KA3HYod,EACzBxV,MACAyV,OACAzW,OACAmV,YAAY,GACZD,YACAJ,SACA4B,mBACAT,cACAjb,YACAyZ,UACAjL,iBACAD,cACA5H,eACAC,aACA6H,mBACAkN,aACAla,UACA+F,kBAEA,MAAMnH,GAAOC,EAAAA,EAAAA,KAEb,IAAI0b,GAAa1Z,EAAAA,EAAAA,IAAuB,MACpC0D,IACFgW,EAAahW,GAGf,MAAM,SAAEmC,IAAaC,EAAAA,EAAAA,OACd6T,IAAa1T,EAAAA,EAAAA,KAAU0S,GACxBiB,EAAU9a,QAAQ6Z,GAClBkB,GAAWC,EAAAA,EAAAA,GAAcV,EAAkBQ,EAAS/T,IAAakU,EAAAA,IACjEC,GAAkB3X,EAAAA,EAAAA,IAAoBuX,IAG1CvN,aAAc4N,EACd7X,qBAAsBmK,IACpBC,EAAAA,EAAAA,GAAkBN,OAAgBxP,GAAW,GAE3CuS,GAAQiL,EAAAA,EAAAA,IAAsBrC,GAC9BsC,GAAazK,EAAAA,EAAAA,IAAkBhN,IAE/B,MAAEiI,EAAK,OAAEC,IAAWwP,EAAAA,EAAAA,IAA+BjD,GAEnD9I,GAAgBnP,EAAAA,EAAAA,GACpB,OACAxB,EACAyZ,GAAW,UACXhY,IAAY8M,GAAe,cAC3B3H,GAAc,oBAGhB,OACErF,EAAAA,GAAAA,cAAA,OAAKyE,IAAKgW,EAAYhc,UAAW2Q,EAAe3N,IAAK3C,EAAK4C,MAAQ,WAAQjE,GACvE2H,GACCpF,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,0BACZ4G,GAAcrF,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,iBAGhCuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,sBAAsByB,QAAS8M,OAAcvP,EAAYyC,GACrEia,GAAoBT,EACnB1Z,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,4BACbuB,EAAAA,GAAAA,cAAA,OACE4D,IAAK8V,EACLjb,UAAU,aACViN,MAAOA,EACPC,OAAQA,EACRyP,IAAI,KAELV,GACC1a,EAAAA,GAAAA,cAAA,UACEyE,IAAKmW,EACLnc,WAAWwB,EAAAA,EAAAA,GAAe,YAAa8a,MAK7C/a,EAAAA,GAAAA,cAAA,OAAKvB,UAAY,aAAYuR,KAC1B4I,EAAUvX,QAAU,GACnBrB,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,WAAWgD,IAAI,QAAQmX,IAI5CoC,GACChb,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,gBAAiB+P,EAAO1C,IACrDtN,EAAAA,GAAAA,cAACoQ,EAAAA,EAAe,CACd7E,SAAU2B,EACVzJ,KAAMyU,EAAU,IAAM,IACtBhY,QAAS8M,EAAc9M,OAAUzC,KAItCyC,GACCF,EAAAA,GAAAA,cAAA,KACEvB,WAAWwB,EAAAA,EAAAA,GACT,cACAma,GAAc,gBACdY,GAAuB,aAK/Bhb,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,aACbuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,aAAagD,IAAI,OAAOyN,MAAOgL,IAAOzK,EAAAA,EAAAA,GAAWyK,IAChEla,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,gBAAgBgD,IAAI,QACjCzB,EAAAA,GAAAA,cAAA,YACGiN,GAAkBC,EAAoB,GAAEhE,KAAK3I,MAAyB,IAAnB2M,MAA6BgO,GAElF3C,GAAUvY,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,gBAAegR,EAAAA,EAAAA,GAAW8I,KACnDA,GAAU1Y,QAAQ8Y,IAClB3Y,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,WAChBuB,EAAAA,GAAAA,cAAC0P,EAAAA,EAAI,CAACxP,QAAS+F,IAAcyK,EAAAA,EAAAA,IAAoB5R,EAAkB,IAAZ6Z,GAAkB,OAKhFJ,GAAU1Y,QAAQ8Y,IACjB3Y,EAAAA,GAAAA,cAAC0P,EAAAA,EAAI,CAACxP,QAAS+F,IAAc0J,EAAAA,EAAAA,IAAoB7Q,EAAkB,IAAZ6Z,IAErD,G,wGC3JV,MAAM0C,EAAgB,CAAErM,OAAQ,g5BAShC,EAPyBsM,IAGrBtb,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,eAAesQ,wBAAyBsM,I,oCCV5D,QAAuB,uBC6EvB,GAAexe,EAAAA,EAAAA,KA7CqB0e,EAClC9c,YACA+c,OACAC,aACAC,SACAC,kBACAC,kBACA/D,kBACAgE,cACAC,qBACA7D,0BAEA,MAAMnZ,GAAOC,EAAAA,EAAAA,KACPY,GAAS4R,EAAAA,EAAAA,IAASiK,EAAKpd,IACvB8Q,EAAQvP,GAASoc,EAAAA,EAAAA,IAAgBP,IAAmBtE,EAAAA,EAAAA,GAAapY,EAAM0c,GACvEQ,EAAcrc,GAAW6b,EAAiBQ,YAC1CC,EAAYtc,GAAW6b,EAAiBS,UAE9C,OAAIpE,EAEA7X,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,QAAS4D,EAAapF,IACnDuB,EAAAA,GAAAA,cAAA,UAAKlB,EAAK,mBAMdkB,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,QAAS4D,EAAapF,IACnDuB,EAAAA,GAAAA,cAAA,MAAIyB,IAAI,OAAOhD,UAAU,aAAYgR,EAAAA,EAAAA,GAAWP,GAAS,MACvDuM,GAAcD,EAAKU,YAAclc,EAAAA,GAAAA,cAACsb,EAAY,OAC9CI,GAAUF,EAAKhB,UAAYxa,EAAAA,GAAAA,cAACua,EAAAA,EAAQ,CAACC,SAAUgB,EAAKhB,WACrDmB,GAAmBK,GAClBhc,EAAAA,GAAAA,cAACmc,EAAAA,EAAW,CACVC,WAAYJ,EAAYI,WACxB3Y,KAAMmY,EACNS,UAAYR,OAAwCpe,EAA1B6e,EAAAA,IAC1BC,8BAA+BtE,EAC/B/X,QAAS4b,IAGZH,IAAoBK,GAAeC,GAAajc,EAAAA,GAAAA,cAACwc,EAAAA,EAAW,MACzD,G,+LCxCV,MAAMC,EAAkB,IAAMC,EAAAA,GA6L9B,GAAe7f,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUC,SAAQ8U,eACjB,MAAM,aAAE/P,GAAiBhF,EACnBE,GAAOC,EAAAA,EAAAA,IAAWH,EAAQC,GAC1B2f,EAAa7K,GAAW8K,EAAAA,EAAAA,IAAiB7f,EAAQC,EAAQ8U,QAAYrU,EACrEof,EAAc5f,GAAO6f,EAAAA,EAAAA,IAAsB/f,EAAQE,QAAQQ,EAC3Dsf,EAAoBld,SAAQmd,EAAAA,EAAAA,IAAmBjgB,EAAQC,IACvDigB,EAAQnL,EAAW7U,GAAMigB,SAASpL,QAAYrU,EAC9C0f,EAAgBF,IAASG,EAAAA,EAAAA,IAA0BrgB,EAAQC,EAAQ8U,GAEzE,MAAO,CACL/P,eACA9E,OACA0f,aACAE,cACAI,QACAF,oBACA1e,eAAgBtB,EAAOuB,SAASC,MAAMF,eACtC8e,gBACD,GAnBergB,EA5J6BugB,EAC/CC,eACA7e,YACA8e,aAAa,SACbC,WACAC,SACAC,WACA/D,kBACAgE,eACAC,eACAC,qBACAC,eACAC,kBACApB,aACAqB,QACA/gB,OACA4f,cACAE,oBACA1e,iBACA0D,eACAkb,QACAE,gBACAjd,cAEA,MAAM,aACJ+d,EAAY,gBACZC,EAAe,kBACfC,IACEtf,EAAAA,EAAAA,MAEEwX,EAAepZ,IAAQqZ,EAAAA,EAAAA,IAAiBrZ,GACxCmhB,EAAUve,QAAQ5C,GAAMwU,SAAWkL,GAAcM,IAC/C7e,GAAIpB,EAAM,MAAEqhB,EAAK,aAAExK,GAAiB5W,GAAQ,CAAC,GAErD6C,EAAAA,EAAAA,KAAU,KACJ9C,IAAWqhB,GAAStc,IAClB6b,GAAcK,EAAa,CAAEjhB,WAC7B2c,GAAiBwE,EAAkB,CAAEG,UAAWthB,IACtD,GACC,CAACA,EAAQqhB,EAAOtc,EAAc6b,EAAcK,EAAcE,EAAmB9H,EAAcsD,IAE9F,MAAM4E,GAAyBtf,EAAAA,EAAAA,KAAY,CAAC4O,EAAgD2Q,KACtFvhB,GAAQuhB,IACV3Q,EAAEM,kBACF+P,EAAgB,CACdO,cAAexhB,EAAKmB,GACpBsgB,QAAS,EACTzZ,OAAuB,UAAfsY,EAAyBoB,EAAAA,GAAAA,cAAkCA,EAAAA,GAAAA,qBAEvE,GACC,CAAC1hB,EAAMsgB,EAAYW,IAEhBpf,GAAOC,EAAAA,EAAAA,KACP0V,GAAerV,EAAAA,EAAAA,KAAQ,IAAMnC,GAAQ0gB,IAAgBiB,EAAAA,EAAAA,IAAgB3hB,IAAO,CAACA,EAAM0gB,IAEzF,GAAK1gB,EAqDL,OACE+C,EAAAA,GAAAA,cAAA,OACEvB,WACEwB,EAAAA,EAAAA,GAAe,WAAYxB,GAE7BgD,KAAMuc,GAASlf,EAAK4C,MAAQ,WAAQjE,EACpCyC,QAASA,IAEPsd,IAAaY,GACbpe,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACLC,IAAKpD,EAAKmB,GACVqF,KAAM8Z,EACNtgB,KAAMA,EACNiD,QAASyZ,EAAkB4E,OAAyB9gB,EACpDqa,UAAWiG,EACX1f,eAAgBA,IAGnB+f,GACCpe,EAAAA,GAAAA,cAAC6e,EAAAA,EAAS,CAAC5B,MAAOA,EAAQxe,UAAU,oBAAoBgF,KAAMgZ,IAEhEzc,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,QACZwe,EACGjd,EAAAA,GAAAA,cAAA,MAAIyB,IAAI,OAAOhD,UAAU,aAAYgR,EAAAA,EAAAA,GAAWwN,EAAM/N,QACtDlP,EAAAA,GAAAA,cAACub,EAAAA,EAAa,CAACC,KAAMve,IAzE/B,WACE,GAAIwgB,EACF,OAAOC,EACL1d,EAAAA,GAAAA,cAACsa,EAAAA,EAAY,CAAC7b,UAAU,SAAS4H,QAASoX,IAE1Czd,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,SAASgD,IAAI,QAAQgc,GAIzC,GAAII,IAAuBd,IAAsBlJ,EAC/C,OACE7T,EAAAA,GAAAA,cAACsa,EAAAA,EAAY,CAAC7b,UAAU,SAAS4H,QAASvH,EAAK,cAInD,IAAK7B,EACH,OAGF,GAAIqgB,EACF,OAAOtd,EAAAA,GAAAA,cAAC8e,EAAAA,EAAY,CAACxB,aAAcA,IAGrC,GAAIc,EACF,OACEpe,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,SAASgD,IAAI,QAC1B0b,EAAgBre,EAAK,WAAYqe,EAAe,MAAO1N,EAAAA,EAAAA,GAAWxS,EAAKiS,QAK9E,GAAI4O,EACF,OACE9d,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,SAASgD,IAAI,QAAQ3C,GAAKigB,EAAAA,EAAAA,IAAkB9hB,KAIhE,MAAM+hB,EA2CV,SAAwBlgB,EAAc7B,GACpC,MAAMgiB,EAAiBngB,GAAKigB,EAAAA,EAAAA,IAAkB9hB,KACxC,aAAEiiB,GAAiBjiB,EAEzB,OAAIA,EAAK4W,aACmB,YAAnBoL,EAA+B,0BAA4B,wBAG/DC,EAKDpgB,EADsB,YAAnBmgB,EACE,cACA,UADeC,EAAc,KAJ7BD,CAMX,CA1DwBE,CAAergB,EAAM7B,GACnCmiB,EAAevC,EAAe,KAAI/d,EAAK,cAAe+d,EAAa,YAASpf,EAElF,OACEuC,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,UACbgW,GAAgBzU,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,UAAUgW,GAC3CzU,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,gBAAgBugB,GAC/BI,GAAgBpf,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,iBAAiB2gB,GAGxD,CA2BOC,IAEC,I,gFCzLV,MAYA,GAAexiB,EAAAA,EAAAA,KAZuByiB,EAAGxa,UAASya,qBAChD,MAAMzgB,GAAOC,EAAAA,EAAAA,KACb,OACEiB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,mBACZ8gB,GACCvf,EAAAA,GAAAA,cAACwf,EAAAA,EAAqB,CAAC/B,OAAQ8B,IAEjCvf,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,SAAQkR,EAAAA,EAAAA,IAAoB7Q,EAAqB,IAAfgG,EAAQI,OACtD,G,gJCSV,MA6DA,GAAerI,EAAAA,EAAAA,KA7Da4iB,EAC1B3a,UACA4a,WAAW,eACXC,cACA1H,sBACA/X,cAGA,MAAMuE,GAAM1D,EAAAA,EAAAA,IAAuB,MAE7B+X,GAAiBC,EAAAA,EAAAA,IAAkBtU,EAAKwT,GACxChW,GAAeuX,EAAAA,EAAAA,IAA4B1U,GAC3C8a,GAAetd,EAAAA,EAAAA,IAAS6E,EAAAA,EAAAA,IAAoBrC,EAAS,cAAegU,GACpE3V,GAAuBC,EAAAA,EAAAA,GAAmBwc,GAE1CpZ,GAAQqZ,EAAAA,EAAAA,IAAgB/a,GAExBgb,GAAaC,EAAAA,EAAAA,IAAoBjb,IAChCkb,EAAe,CAAGC,IAAehd,EAAAA,EAAAA,GAAQ6c,GAE1C9F,GAAc/a,EAAAA,EAAAA,KAAY,KAC9BghB,IACA/f,EAAS4E,EAAQ1G,GAAI0G,EAAQ9H,OAAO,GACnC,CAACijB,EAAanb,EAAS5E,IAE1B,OACEF,EAAAA,GAAAA,cAAA,OACEyE,IAAKA,EACLrG,GAAK,GAAEshB,KAAWQ,EAAAA,EAAAA,IAAiBpb,EAAQ1G,MAC3CK,UAAU,oBACVyB,QAASA,EAAU8Z,OAAcvc,GAEjCuC,EAAAA,GAAAA,cAAA,OACE4D,IAAK3B,EACLxD,UAAU,kBACV2c,IAAI,GACJtK,WAAY6O,EACZQ,SAAS,QACTC,cAAeT,EAAczK,EAAAA,OAAYzX,IAE3CuC,EAAAA,GAAAA,cAAA,OACE4D,IAAKgc,EACLnhB,WAAWwB,EAAAA,EAAAA,GAAe,aAAc,kBAAmBkD,GAC3DiY,IAAI,GACJtK,WAAY6O,EACZQ,SAAS,QACTC,cAAeT,EAAczK,EAAAA,OAAYzX,IAE1CqiB,GACC9f,EAAAA,GAAAA,cAACqgB,EAAAA,EAAY,CACXpe,aAAc2d,GAAgB3d,EAC9Bqe,UAAWN,EACXvhB,UAAU,kBAGb+H,GAASxG,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,kBAAkB+H,EAAM+Z,MAAQ,OAAQ3Q,EAAAA,EAAAA,IAAoBpJ,EAAM2B,WAC3FwX,GAAe3f,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,cAC5B,G,mFC1FV,MC+DA,GAAe5B,EAAAA,EAAAA,KA1CoBwjB,EACjCC,YACAE,gBACAve,eACAxD,YACAiN,QACAC,aAGA,MAAMlH,GAAM1D,EAAAA,EAAAA,IAAuB,OAE7B,aAAEqM,EAAY,qBAAEjK,IAAyBoK,EAAAA,EAAAA,GAC7C+S,OAAW7iB,GAAW,GAAM+iB,QAAwB/iB,OAAWA,EAdxC,KAgBnBmL,GAAYiS,EAAAA,EAAAA,GAAc5Y,GAAemL,OAAc3P,EAjB3C,GAiBmEiO,EAAOC,GAEtFqO,GAAc/a,EAAAA,EAAAA,KAAa4O,IAC/B,IAAKpJ,EAAIlD,QAAS,OAClB,MAAMkf,EAAO5S,EAAE6S,cAAc3S,wBACvB3B,EAAIyB,EAAEG,QAAUyS,EAAK3S,KACrBzB,EAAIwB,EAAE8S,QAAUF,EAAKG,IACrBC,EAASzU,EAAKqU,EAAK/U,MAAQ,EAC3BoV,EAASzU,EAAKoU,EAAK9U,OAAS,EAClClH,EAAIlD,QAAQwf,aAAa,QAAU,oBAAmBF,yBAA8BC,MAAW,GAC9F,IAEH,GAAK1T,EAIL,OACEpN,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GDrDM,uBCqDsBkD,EAAsB1E,EAAW+hB,GDrDwB,wBCsDhG/b,IAAKA,EACLvE,QAASsgB,EAAgBxG,OAAcvc,GAEvCuC,EAAAA,GAAAA,cAAA,UAAQyE,IAAKmE,EAAWnK,UDzD6M,uBCyDnLiN,MAAOA,EAAOC,OAAQA,IACxE3L,EAAAA,GAAAA,cAAA,OAAKvB,UD1DgM,yBC2DjM,G,sCC/CLuiB,E,sBAAI,SAAJA,GAAAA,EAAAA,EAAI,mBAAJA,EAAAA,EAAI,qBAAJA,EAAAA,EAAI,yBAAJA,EAAAA,EAAI,gBAAJA,IAAAA,EAAI,KAIT,MAcA,GAAenkB,EAAAA,EAAAA,KAd6B2iB,EAAG/B,YAE3Czd,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,yBACbuB,EAAAA,GAAAA,cAACihB,EAAAA,EAAU,CAAC/G,KAAK,SAASgH,UAAWF,EAAKvD,IAC5B,WAAXA,EACCzd,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,iCACbuB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,yBAEbuB,EAAAA,GAAAA,cAAA,KAAGvB,UAAY,gBAAegf,S,8FCV1C,MAcA,GAAe5gB,EAAAA,EAAAA,KAZoBskB,EAAG1gB,OAFjB,iBAEsC0T,kBACzD,MAAMrV,GAAOC,EAAAA,EAAAA,MACP,qBAAEoE,IAAyBoK,EAAAA,EAAAA,IAAkB,GAEnD,OACEvN,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,eAAgBkD,EAAsBgR,GAAe,qBACjF1T,EACA0T,GAAenU,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,gBAAegR,EAAAA,EAAAA,GAAW3Q,EAAKqV,GAAc,CAAC,QACvE,G,uICSV,MAqIA,GAAetX,EAAAA,EAAAA,KArIoBukB,EACjCC,aAAY,EACZC,oBACAC,QACAC,OACAC,cAAc,WACdC,cAAc,OACdvN,cACAwN,mBACAC,mBACAC,gCAA+B,EAC/BC,YAAW,EACXC,aACAC,6BACAC,gBACAC,eAGA,MAAMC,GAAWphB,EAAAA,EAAAA,IAAyB,MACpCjC,GAAOC,EAAAA,EAAAA,MAEP,SAAE6H,IAAaC,EAAAA,EAAAA,OACdub,EAAUC,IAAerb,EAAAA,EAAAA,IAASsb,EAAAA,MAClCC,EAAWC,IAAgBxb,EAAAA,EAAAA,KAAS,GACrCyb,EAAsB7b,EAAW,IAAM,IA+D7C,OA7DA9G,EAAAA,EAAAA,KAAU,KACJ8hB,GACFS,EAAY,GACd,GACC,CAACT,KAEJpgB,EAAAA,EAAAA,IAAW,KACJkhB,EAAAA,IACHP,EAAS5gB,QAASohB,OACpB,GACCF,IAEH3iB,EAAAA,EAAAA,KAAU,KACJyhB,GACFqB,uBAAsB,KACpBT,EAAS5gB,QAASohB,QAClBR,EAAS5gB,QAASshB,QAAQ,GAE9B,GACC,CAACtB,IA2CFvhB,EAAAA,GAAAA,cAAA,QAAM8iB,OAAO,GAAGZ,SAAUA,EAxB5B,SAAsBa,GACpBA,EAAMC,iBACF3B,GAIAkB,GACFL,EAAUE,EAEd,EAesDlN,EAAAA,EAAW+N,aAAa,OAC1EjjB,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GAAe,6BAA8BmiB,GAAY,UAAWb,GAAS,SACxF9f,IAAK3C,EAAK4C,MAAQ,WAAQjE,GAEzBokB,GAhBH7hB,EAAAA,GAAAA,cAAA,SACEkjB,KAAK,WACL9kB,GAAG,mBACH6kB,aAAa,MACbxkB,UAAU,kBACV0kB,UAAW,IAYXnjB,EAAAA,GAAAA,cAAA,SACEojB,UAAYvV,IACV,GAAa,SAAVA,EAAEwV,OAAoBnB,EAGvB,OAFArU,EAAEmV,iBACFnV,EAAEM,mBACK,CACT,EAEF1J,IAAK0d,EACL1jB,UAAU,eACVykB,KAAM5B,EAAoB,OAAS,WACnCljB,GAAG,mBACH2M,MAAOqX,GAAY,GACnBa,aAAcpB,EAA+B,gBAAkB,mBAC/DyB,SA7DR,SAA0BzV,GACpB0T,GACFQ,IAGF,MAAM,OAAEwB,GAAW1V,EACnBwU,EAAYkB,EAAOxY,OACnByX,EAAae,EAAOxY,MAAM1J,QAAUmiB,EAAAA,KAChCvB,GACFA,EAAcsB,EAAOxY,MAEzB,EAmDQ0Y,UAAW,IACXhiB,IAAI,SAENzB,EAAAA,GAAAA,cAAA,aAAQuhB,GAASC,GAAQC,GACzBzhB,EAAAA,GAAAA,cAAA,OACEvB,UAAU,kBACVyB,QAvDR,WACE8hB,GAA4BV,EAC9B,EAsDQoC,KAAK,SACLP,SAAU,EACVjU,MAAM,8BAENlP,EAAAA,GAAAA,cAAA,KAAGvB,UAAW6iB,EAAoB,WAAa,sBAGlDnN,GAAenU,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,eAAe0V,GAC3C+N,IAAaK,GAAaZ,IACzB3hB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAAC4iB,KAAK,SAASnT,QAAS+R,EAAUT,UAAWA,EAAWsC,UAAWpB,GACvEb,GAGA,G,0KC/HX,MAwGA,GAAe7kB,EAAAA,EAAAA,KAnGc+mB,EAC3BC,UACAC,cACAC,cACAC,oBACAC,eACAC,gBACA7C,YACA8C,kBACAC,sBACAC,iBACAC,iBAGA,MAAMnC,GAAWphB,EAAAA,EAAAA,IAAyB,MACpCwjB,EAAiBT,EAAYziB,OAlBd,IAoBrBvB,EAAAA,EAAAA,KAAU,KACR0kB,YAAW,KACT5B,uBAAsB,KACpBT,EAAS5gB,QAASohB,OAAO,GACzB,GA1Be,IA2BD,GACjB,IAEH,MAAM8B,GAAkBxlB,EAAAA,EAAAA,KAAab,IACnC,MAAMsmB,EAAiB,IAAIZ,GACvBY,EAAeC,SAASvmB,GAC1BsmB,EAAeE,OAAOF,EAAeG,QAAQzmB,GAAK,GAElDsmB,EAAepjB,KAAKlD,GAEtBgmB,EAAoBM,GACpBL,EAAe,GAAG,GACjB,CAACP,EAAaM,EAAqBC,IAEhCS,GAAqB7lB,EAAAA,EAAAA,KAAa4O,IACtC,MAAM,MAAE9C,GAAU8C,EAAE6S,cACpB2D,EAAetZ,EAAM,GACpB,CAACsZ,KAEGU,EAAaC,IAAWC,EAAAA,EAAAA,GAAkBX,EAAYT,EAAShkB,QAAQkkB,IAExEjlB,GAAOC,EAAAA,EAAAA,KAEb,OACEiB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,UACbuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,8BAA8BgD,IAAK3C,EAAK4C,MAAQ,WAAQjE,GACpEqmB,EAAYpkB,KAAI,CAACtB,EAAIqB,IACpBO,EAAAA,GAAAA,cAACklB,EAAAA,EAAkB,CACjB/T,aAAc/S,EACd+mB,YAAaZ,GAAkB9kB,EAAIqkB,EAAYziB,OArD3B,EAsDpB+jB,UAAQ,EACRllB,QAASukB,EACTY,SAAUjnB,MAGd4B,EAAAA,GAAAA,cAACslB,EAAAA,EAAS,CACRlnB,GAAI8lB,EACJzf,IAAK0d,EACLpX,MAAOgZ,EACPT,SAAUwB,EACVrD,YAAauC,GAAqBllB,EAAK,iBAI1CimB,GAAa1jB,OACZrB,EAAAA,GAAAA,cAACulB,EAAAA,EAAc,CACb9mB,UAAU,4BACV+mB,MAAOT,EACPT,WAAYU,EACZb,gBAAiBA,GAEhBY,EAAYrlB,KAAKtB,GAChB4B,EAAAA,GAAAA,cAACmV,EAAAA,EAAQ,CACP9U,IAAKjC,EACLK,UAAU,uCAEVyB,QAASA,IAAMukB,EAAgBrmB,GAC/B2R,QAAM,GAEN/P,EAAAA,GAAAA,cAACylB,EAAAA,EAAQ,CAACC,MAAM,GAAGC,QAAS7B,EAAYa,SAASvmB,MAChDmT,EAAAA,EAAAA,IAASnT,GACR4B,EAAAA,GAAAA,cAAC4lB,EAAAA,EAAe,CAACjT,OAAQvU,IAEzB4B,EAAAA,GAAAA,cAACqd,EAAAA,EAAa,CAACrgB,OAAQoB,QAK5BijB,IAAa0D,GAAgBA,EAAY1jB,OAG5CrB,EAAAA,GAAAA,cAAC6lB,EAAAA,EAAO,MAFR7lB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,cAAcwlB,GAAgB,yBAIzC,G,+HCxGV,MAuEA,GAAepnB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUoU,kBACJA,EAOE,CACLlU,KAJWkU,GAAejU,EAAAA,EAAAA,IAAWH,EAAQoU,QAAgB1T,EAK7DmC,MAJW2R,EAAAA,EAAAA,IAASJ,IAAgBK,EAAAA,EAAAA,IAAWzU,EAAQoU,QAAgB1T,GAJhE,CAAC,GAHMX,EAvEkCooB,EACpD9P,OACAlG,QACAiW,cACAC,WACAllB,UACAmlB,WACApoB,OACA2C,OACAnB,gBAEA,MAAMK,GAAOC,EAAAA,EAAAA,KAEb,IAAI+mB,EACAC,EAEJ,GAAI3Q,GAAQlG,EACV4W,EACE9lB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,aACbuB,EAAAA,GAAAA,cAAA,KAAGvB,UAAY,QAAO2W,OAI1B2Q,EAAY7W,OACP,GAAIjS,GAAQ2C,EAAM,CACvBkmB,EACE9lB,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACLnD,KAAMA,EACN2C,KAAMA,EACN6D,KAAK,QACLoU,gBAAiBjY,GAAMmT,SAI3B,MAAMmH,GAAQjd,GAAS2C,IAASA,EAAKmT,QACjCkD,EAAAA,EAAAA,IAAuBrW,IACvBsX,EAAAA,EAAAA,GAAapY,EAAM7B,EAAM2C,GAE7BmmB,EAAY7L,GAAOzK,EAAAA,EAAAA,GAAWyK,QAAQzc,CACxC,CAEA,MAAM2R,GAAgBnP,EAAAA,EAAAA,GACpB,qBACAxB,EACAxB,GAAMwU,SAAW,eACjB0T,GAAe,YACfC,GAAY,aAGd,OACEplB,EAAAA,GAAAA,cAAA,OACEvB,UAAW2Q,EACXlP,QAASA,IAAMA,EAAQmlB,GACvBnW,MAAOiW,EAAcY,OAAYtoB,EACjCgE,IAAK3C,EAAK4C,MAAQ,WAAQjE,GAEzBqoB,GACCX,GACAnlB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,YAAYgD,IAAI,QAC5BskB,GAGJX,GACCplB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,eACbuB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,gBAGb,I,uECzFV,MAAMunB,EAAe,CAAEhX,OAAQ,uuCACzBiX,EAAiC,CAAC,EAuCxC,GAAeppB,EAAAA,EAAAA,KA9BmB2f,EAChC0J,eACAC,MACA1nB,YACAyB,cAEA,MAAMkmB,GAAOhnB,EAAAA,EAAAA,KAAQ,IACZ8mB,EAeX,WACE,MAAM9nB,GAAKioB,EAAAA,EAAAA,GAAcJ,GACzB,MAAO,CAELjX,OAAS,4HAA2H5Q,40CAA60CA,cAEr9C,CArB0BkoB,GAA2BN,GAChD,CAACE,IAEJ,OACElmB,EAAAA,GAAAA,cAAA,KACEE,QAASA,EACTzB,WAAWwB,EAAAA,EAAAA,GACT,cAAexB,EAAWynB,GAAgB,WAAYhmB,GAAW,YAAaimB,GAAO,OAEvFpX,wBAAyBqX,EACzBlX,MAAM,WACN,G,yKCeN,MAqIA,GAAerS,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAU4V,SAAQL,oBACjB,MAAM,aAAEvQ,GAAiBhF,EACnB6C,GAAO4R,EAAAA,EAAAA,IAAWzU,EAAQ4V,GAKhC,MAAO,CACL5Q,eACAnC,OACA2mB,YAPiBC,EAAAA,EAAAA,IAAiBzpB,EAAQ4V,GAQ1CkF,iBAPuBvF,GAAiB1S,GAAQA,EAAKmT,OAQrDgK,kBAPwBld,SAAQmd,EAAAA,EAAAA,IAAmBjgB,EAAQ4V,IAQ3DtU,eAAgBtB,EAAOuB,SAASC,MAAMF,eACvC,GAfevB,EArI+B8oB,EACjDtI,eACAC,aAAa,SACbE,SACAC,WACA/D,kBACAgE,eACAC,eACAC,qBACAE,kBACAnC,kBACA6K,mBACAzI,QACApe,OACA2mB,aACA1O,kBACAkF,oBACA1e,iBACA0D,eACA2kB,kBAEA,MAAM,aACJnU,EAAY,gBACZ2L,EAAe,kBACfC,IACEtf,EAAAA,EAAAA,OAEIT,GAAIuU,GAAW/S,GAAQ,CAAC,GAEhCE,EAAAA,EAAAA,KAAU,KACJ6S,GAAU5Q,IACR6b,GAAcrL,EAAa,CAAEI,WAC7BgH,GAAiBwE,EAAkB,CAAEG,UAAW3L,IACtD,GACC,CAACA,EAAQJ,EAAc4L,EAAmBpc,EAAc6b,EAAcjE,IAEzE,MAAM4E,GAAyBtf,EAAAA,EAAAA,KAAY,CAAC4O,EAAiD2Q,KACvF5e,GAAQ4e,IACV3Q,EAAEM,kBACF+P,EAAgB,CACdO,cAAe7e,EAAKxB,GACpBsgB,QAAS,EACTzZ,OAAuB,UAAfsY,EAAyBoB,EAAAA,GAAAA,cAAkCA,EAAAA,GAAAA,qBAEvE,GACC,CAAC/e,EAAM2d,EAAYW,IAEhBpf,GAAOC,EAAAA,EAAAA,KACP0V,GAAerV,EAAAA,EAAAA,KAAQ,IAAMQ,GAAQ+d,IAAgBiB,EAAAA,EAAAA,IAAgBhf,IAAO,CAACA,EAAM+d,IAEzF,IAAK/d,EACH,OAkCF,MAAM+mB,EAAcD,EAChBA,EAAYC,aAAe7nB,EAAK4nB,EAAYE,QAAU,uBAAyB,6BAC/EnpB,EA2BJ,OACEuC,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,WAAWgD,KAAMuc,GAASlf,EAAK4C,MAAQ,WAAQjE,GAC5DuC,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACLC,IAAKT,EAAKxB,GACVqF,KAAM8Z,EACN3d,KAAMA,EACNiY,gBAAiBA,EACjB3X,QAASyZ,EAAkB4E,OAAyB9gB,EACpDqa,UAAWiG,EACX1f,eAAgBA,IAElB2B,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,QAnCbkoB,EAEA3mB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,mBACbuB,EAAAA,GAAAA,cAACub,EAAAA,EAAa,CACZC,KAAM5b,EACN+b,iBAAe,EACfC,gBAAiBA,EACjB/D,gBAAiBA,IAElB8O,GAAe3mB,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,gBAAgBkoB,IAMpD3mB,EAAAA,GAAAA,cAACub,EAAAA,EAAa,CACZC,KAAM5b,EACN+b,iBAAe,EACfC,gBAAiBA,EACjB/D,gBAAiBA,KAkBf4F,IAAY5F,IAAoB4O,KAxElChJ,EACKC,EACL1d,EAAAA,GAAAA,cAACsa,EAAAA,EAAY,CAAC7b,UAAU,SAAS4H,QAASoX,IAE1Czd,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,SAASgD,IAAI,SAAQgO,EAAAA,EAAAA,GAAWgO,IAIhDI,IAAuBd,EAEvB/c,EAAAA,GAAAA,cAACsa,EAAAA,EAAY,CAAC7b,UAAU,SAAS4H,QAASvH,EAAK,cAI9Cc,EAID0d,EACKtd,EAAAA,GAAAA,cAAC8e,EAAAA,EAAY,CAACxB,aAAcA,IAInCtd,EAAAA,GAAAA,cAAA,QAAMvB,WAAWwB,EAAAA,EAAAA,GAAe,UAAU4mB,EAAAA,EAAAA,IAAajnB,EAAM2mB,IAAe,WACzE9R,GAAgBzU,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,UAAUgW,GAC3CzU,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,cAAcgD,IAAI,SAAQqlB,EAAAA,EAAAA,IAAchoB,EAAMc,EAAM2mB,UAXxE,IA4DM,I,gSC9IV,MAuHA,GAAe1pB,EAAAA,EAAAA,KAvHoBkqB,EACjC9pB,OACA2C,OACAonB,QACAnP,kBACAoP,eACAllB,eACA7B,cAGA,MAAMgnB,GAAWnmB,EAAAA,EAAAA,IAAyB,MAEpCjC,GAAOC,EAAAA,EAAAA,MACP,SAAE6H,IAAaC,EAAAA,EAAAA,MAEfsgB,EAAYvnB,IAAQwnB,EAAAA,EAAAA,IAAcxnB,GAClCynB,EAAgBpqB,IAAQqqB,EAAAA,EAAAA,IAAqBrqB,EAAKmB,IAClDmpB,EAAa3nB,GAAQ3C,EACrBuqB,EAAeR,GAChBpnB,GAAMgT,UAAU6U,eAChBF,GAAY3U,UAAU8U,cACtB9nB,GAAMgT,UAAU+U,cACfC,EAAeL,IAAe1P,IAAoBsP,IAAcE,GAChE,QAAEQ,GAAYL,GAAgB,CAAC,EAE/BM,EAAaF,IAAgBG,EAAAA,EAAAA,IAAkBR,EAAY,SAAU,SACrES,GAAgB1lB,EAAAA,EAAAA,GAASwlB,OAAYrqB,OAAWA,EAAWsE,GAE3DkmB,EAAYL,GAAgBJ,IAAiBK,GAAY,QAAOL,EAAappB,YAC7E8pB,GAAe5lB,EAAAA,EAAAA,GAAS2lB,OAAWxqB,OAAWA,EAAWsE,GAEzDomB,EAAYP,GAAgBJ,GAAgBK,IAAWO,EAAAA,EAAAA,IAAwBZ,GAG/Ea,GAFe/lB,EAAAA,EAAAA,GAAS6lB,OAAW1qB,OAAWA,EAAWsE,IAEzBmmB,GAC/BI,EAAcC,IAAkBtlB,EAAAA,EAAAA,KACjCulB,EAAmB3oB,QAAQwoB,KAAmBR,GAAWS,IACzDnlB,GAAuBC,EAAAA,EAAAA,GAAmBolB,GAC1CC,EAAiBb,IAAiBY,IAAqBR,GAAiBR,GAActlB,WAAWC,QACjGumB,GAAwB7N,EAAAA,EAAAA,GAC5B2M,GAActlB,WAAWC,SAAUsmB,EAAgB7hB,IAAakU,EAAAA,IAE5D0D,EAAWgJ,GAAgBQ,GAAiBS,EAQlD,IAAIpiB,EAEJ,IARAvG,EAAAA,EAAAA,KAAU,KACJonB,EAAS3lB,UAAY0lB,IACvBC,EAAS3lB,QAAQonB,YAAc,EACjC,GACC,CAAC1B,IAIApP,EACFxR,EAAUrG,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,oCAClB,GAAI0oB,EACT9gB,EAAUrG,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,qCAClB,GAAI4oB,EACThhB,EAAUrG,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,2BAClB,GAAI+f,EACTnY,EACErG,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACGyoB,EACCzoB,EAAAA,GAAAA,cAAA,UAAQyE,IAAKikB,EAAuBjqB,UAAU,UAE9CuB,EAAAA,GAAAA,cAAA,OAAK4D,IAAKokB,EAAevpB,UAAU,QAAQ2c,IAAI,KAEhDoM,IACCK,EACE7nB,EAAAA,GAAAA,cAAC4oB,EAAAA,EAAc,CACbC,QAAS5B,EACTxiB,IAAKyiB,EACLtjB,IAAKykB,EACL5pB,WAAWwB,EAAAA,EAAAA,GAAe,eAAgBkD,GAC1C2lB,OAAK,EACLC,yBAAuB,EACvBC,MAAI,EACJC,aAAW,EACXC,QAASX,IAGXvoB,EAAAA,GAAAA,cAAA,OACE4D,IAAKykB,EACL5pB,WAAWwB,EAAAA,EAAAA,GAAe,eAAgBkD,GAC1CiY,IAAI,YAMT,GAAIxb,EAAM,CACf,MAAMupB,GAAepN,EAAAA,EAAAA,IAAgBnc,GACrCyG,EAAU8iB,GAAeC,EAAAA,EAAAA,IAAgBD,EAAc,QAAK1rB,CAC9D,MAAO,GAAIR,EAAM,CACf,MAAMiS,GAAQgI,EAAAA,EAAAA,GAAapY,EAAM7B,GACjCoJ,EAAU6I,IAASka,EAAAA,EAAAA,IAAgBla,GAAOqC,EAAAA,EAAAA,IAAStU,EAAKmB,IAAM,EAAI,EACpE,MACEiI,EACErG,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,mBACbuB,EAAAA,GAAAA,cAACqpB,EAAAA,EAAO,CAACrZ,MAAM,WAKrB,MAAMZ,GAAgBnP,EAAAA,EAAAA,GACpB,eACC,aAAWqpB,EAAAA,EAAAA,IAAgB1pB,GAAQ3C,KACpC4a,GAAmB,iBACnBsP,GAAa,kBACbE,GAAiB,uBACfxP,IAAoB2G,GAAa,YAGrC,OACExe,EAAAA,GAAAA,cAAA,OAAKvB,UAAW2Q,EAAelP,QAASse,EAAWte,OAAUzC,GACvC,iBAAZ4I,GAAuBoJ,EAAAA,EAAAA,GAAWpJ,EAAS,CAAC,aAAeA,EAC/D,I,mCC1JV,QAAqF,uBAArF,EAA4H,uBAA5H,EAA2K,uBAA3K,EAAyN,uBAAzN,EAA4S,uBAA5S,EAA6e,uBC0U7e,GAAexJ,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAU4V,SAAQL,oBACjB,MAAM,gBAAEiX,GAAoBxsB,EACtB6C,GAAO4R,EAAAA,EAAAA,IAAWzU,EAAQ4V,GAC1B4T,GAAaC,EAAAA,EAAAA,IAAiBzpB,EAAQ4V,GACtC1V,GAAOC,EAAAA,EAAAA,IAAWH,EAAQ4V,GAC1BkF,GAAmBvF,GAAiB1S,GAAQA,EAAKmT,QACjD,eAAE1U,GAAmBtB,EAAOuB,SAASC,OACrC,QAAEmgB,EAAO,cAAED,IAAkBnhB,EAAAA,EAAAA,IAAeP,GAAQysB,YACpD/X,EAAUxU,GAAMwU,SACdK,SAAU2X,IAAmB1X,EAAAA,EAAAA,IAAyBhV,IAAW,CAAC,EACpEkgB,EAAQxL,GAAWgY,EAAiBxsB,GAAMigB,SAASuM,QAAkBhsB,EAE3E,MAAO,CACL8rB,kBACA3pB,OACA2mB,aACAtpB,OACA4a,kBACAxZ,iBACAqgB,UACAD,mBACIxB,GAAS,CACXA,QACAE,eAAeC,EAAAA,EAAAA,IAA0BrgB,EAAQ4V,EAAQ8W,IAE5D,GA1Be3sB,EA/Q2B4sB,EAC7CpX,gBACA2U,eACArnB,OACA2mB,aACAtpB,OACA4a,kBACA0R,kBACAlrB,iBACAqgB,UACAD,gBACAxB,QACAE,oBAEA,MAAM,aACJ5K,EAAY,gBACZ2L,EAAe,iBACfyL,IACE9qB,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELX,GAAIuU,GAAW/S,GAAQ,CAAC,GACxBxB,GAAIpB,GAAWC,GAAQ,CAAC,EAC1B2sB,EAAShqB,GAAMgqB,QAAU3sB,GAAM2sB,QAAUC,EAAAA,EACzCC,GAAcnpB,EAAAA,EAAAA,GAAY+d,GAC1BqL,GAAoBppB,EAAAA,EAAAA,GAAY8d,IAC/BuL,EAAmBC,IAAwBjjB,EAAAA,EAAAA,KAAS,GACrDkjB,EAAiBF,GACnB3rB,GAAkB,EAAKS,EAAK4C,MAAQ,sBAAwB,kBAC5D,QAEGyoB,EAAmBC,IAAwBpjB,EAAAA,EAAAA,IAAS,GACrDqjB,EAAUxS,GAAmB+R,EAAOvoB,QAAU,GAA2B,IAAtB8oB,EACnDG,EAASzS,GAAmB+R,EAAOvoB,QAAU,GAAK8oB,IAAsBP,EAAOvoB,OAAS,GAG9FvB,EAAAA,EAAAA,KAAU,KACJiqB,QAAqCtsB,IAAhBqsB,QAAyCrsB,IAAZihB,IACpDuL,GAAqB,GACrBG,EAAqBN,GACvB,GACC,CAACpL,EAASoL,EAAaC,KAG1BjqB,EAAAA,EAAAA,KAAU,KACJqqB,EAAoBP,EAAOvoB,QAC7B+oB,EAAqBlhB,KAAKiD,IAAI,EAAGyd,EAAOvoB,OAAS,GACnD,GACC,CAAC8oB,EAAmBP,EAAOvoB,UAE9BvB,EAAAA,EAAAA,KAAU,KACgB,yBAApBypB,GAA8C5W,IAAWL,GAC3DC,EAAa,CAAEI,UACjB,GACC,CAACA,EAAQJ,EAAcgX,EAAiBjX,IC5G9B,SACbiY,EACAX,EACAY,IAEA1qB,EAAAA,EAAAA,KAAU,KACR8pB,EAAOa,MAAMD,EAAcA,EARL,GAQuCze,SAASib,IAClD0D,EAAAA,GAA2B,QAAO1D,EAAM5oB,cAExDssB,EAAAA,GAAmB,QAAO1D,EAAM5oB,YAAaoE,EAAAA,GAAAA,QAC/C,GACA,GACD,CAACgoB,EAAcZ,GACpB,CDiGEe,CAAiB/qB,EAAcgqB,EAAQO,GAEvC,MAAMS,GAA0B3rB,EAAAA,EAAAA,KAAY,KAC1Cif,EAAgB,CACdO,cAAe9L,GAAU3V,EACzB0hB,QAASyL,EACTllB,OAAQqN,EAAgBqM,EAAAA,GAAAA,eAAmCA,EAAAA,GAAAA,eAC3D,GACD,CAACT,EAAiBvL,EAAQ3V,EAAQmtB,EAAmB7X,IAElDuY,GAAqB5rB,EAAAA,EAAAA,KAAY,KAChCW,GAEL+pB,EAAiB,CAAEmB,WAAYlrB,EAAKxB,IAAK,GACxC,CAACurB,EAAkB/pB,IAEhBmrB,IAAsB9rB,EAAAA,EAAAA,KAAY,KAClCorB,IAGJJ,GAAqB,GACrBG,EAAqBD,EAAoB,GAAE,GAC1C,CAACA,EAAmBE,IAEjBW,IAAkB/rB,EAAAA,EAAAA,KAAY,KAC9BqrB,IAGJL,GAAqB,GACrBG,EAAqBD,EAAoB,GAAE,GAC1C,CAACA,EAAmBG,IAoFvB,IAAwBW,GAAAC,GArDxB,IAtBAprB,EAAAA,EAAAA,KAAU,KACR,MAAMqrB,EAAUzS,SAAS0S,cAA+B,yBACxD,GAAKD,EAIL,OAAOzc,EAAAA,EAAAA,IAAcyc,EAAS,CAC5BE,wBAAyB,8BACzBC,QAAS5I,EAAAA,GAAe,CAAC7U,EAAG0d,IACtBA,IAAcC,EAAAA,GAAAA,OAChBT,MACO,GACEQ,IAAcC,EAAAA,GAAAA,OACvBR,MACO,QAIPvtB,GACJ,GACD,CAACutB,GAAiBD,KAEhBnrB,GAAS3C,EAwEd,OAAIggB,EAlEAjd,EAAAA,GAAAA,cAAA,OAAKvB,UDvL4qB,wBCwL/qBuB,EAAAA,GAAAA,cAAC6e,EAAAA,EAAS,CACR5B,MAAOA,EACPxZ,KAjIe,IAkIfhF,UD3LovB,uBC4LpvBgtB,gBD5L4xB,uBC6L5xB5P,aAAW,IAEb7b,EAAAA,GAAAA,cAAA,MAAIvB,UD/L+sB,uBC+LjrBgD,IAAK3C,EAAK4C,MAAQ,WAAQjE,IAAYgS,EAAAA,EAAAA,GAAWwN,EAAO/N,QAC1FlP,EAAAA,GAAAA,cAAA,KAAGvB,UDhMy0B,wBCiMz0B0e,EAAgBre,EAAK,mBAAoBqe,EAAe,KAAOre,EAAK,2BA6D3EkB,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GAAe,cAAeqS,GD/PxB,wBCgQjB7Q,IAAK3C,EAAK4C,MAAQ,WAAQjE,GAE1BuC,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,GA3DpB,WACE,KAAIgU,IAAoB+R,GAAUA,EAAOvoB,QAAU,GAInD,OACErB,EAAAA,GAAAA,cAAA,OAAKvB,UD7MsU,wBC8MxUmrB,EAAOlqB,KAAI,CAACF,EAAGC,IACdO,EAAAA,GAAAA,cAAA,QAAMvB,WAAWwB,EAAAA,EAAAA,GD/MyV,uBC+MxTR,IAAM0qB,GD/M6V,4BCmN7Z,CAgDOuB,IACCpZ,GAAiB1S,GAAMgT,UAAU6U,eACjCznB,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GACd4D,EACAwmB,GAAWxmB,IAGX7D,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,GACb/E,EAAKc,EAAKgT,SAAS6U,cAAcI,QAAU,uBAAyB,0BAI1EvV,GAAiB1S,GAAMgT,UAAU+U,eAChC3nB,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GACd4D,GACCwmB,GAAWC,IAAWzmB,IAGvB7D,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,EAA8B3D,QAjIxD,WACOmqB,IACLJ,GAAqB,GACrBG,EAAqBR,EAAOvoB,OAAS,GACvC,IA8HcipB,GACAtqB,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACL4mB,MAAOpnB,EAAKgT,SAAS+U,cACrBlpB,UDzRoP,uBC0RpPgF,KAAK,SAGR3E,EAAKc,EAAKgT,SAAS+U,cAAcE,QAAU,uBAAyB,0BAI3E7nB,EAAAA,GAAAA,cAACihB,EAAAA,EAAU,CAACC,UAAWiJ,EAAmBjQ,KAAMgQ,GAC7CyB,KAGDtB,GACArqB,EAAAA,GAAAA,cAAA,UACEkjB,KAAK,SACLzhB,IAAK3C,EAAK4C,MAAQ,WAAQjE,EAC1BgB,WAAWwB,EAAAA,EAAAA,GAAe4D,EDzSgf,wBC0S1gB,aAAY/E,EAAK,oBACjBoB,QAAS6qB,MAGXT,GACAtqB,EAAAA,GAAAA,cAAA,UACEkjB,KAAK,SACLzhB,IAAK3C,EAAK4C,MAAQ,WAAQjE,EAC1BgB,WAAWwB,EAAAA,EAAAA,GAAe4D,EDlTikB,wBCmT3lB,aAAY/E,EAAK,QACjBoB,QAAS8qB,MAKfhrB,EAAAA,GAAAA,cAAA,OAAKvB,UDzT0C,uBCyTlBgD,IAAK3C,EAAK4C,MAAQ,MAAQ,SACnD9B,GAAQ3C,IACR+C,EAAAA,GAAAA,cAACub,EAAAA,EAAa,CACZC,KAAO5b,GAAQ3C,EACf0e,iBAAe,EACfC,gBAtQc,GAuQd/D,gBAAiBA,EACjBiE,mBAAoB+O,EACpBhP,aAAW,KAGbhE,IA7FFjY,EAEAI,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe4D,EAAe,UAAUgjB,EAAAA,EAAAA,IAAajnB,EAAM2mB,IAAe,WACxFvmB,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,cAAcgD,IAAI,SAAQqlB,EAAAA,EAAAA,IAAchoB,EAAMc,EAAM2mB,KAMxEvmB,EAAAA,GAAAA,cAAA,QAAMvB,WAAWwB,EAAAA,EAAAA,GAAe4D,EAAe,UAAWpC,IAAI,SAC5DyQ,EAAAA,EAAAA,IAAcjV,GACV6B,EAAK,cAAiC,QAApBmsB,GAAEhuB,EAAMiiB,oBAAY,IAAA+L,GAAAA,GAAI,EAAG,KAC7CnsB,EAAK,UAA6B,QAApBosB,GAAEjuB,EAAMiiB,oBAAY,IAAAgM,GAAAA,GAAI,EAAG,SA9BnD,SAASS,GAAY5tB,GACnB,MAAMipB,GAASnP,GAAmB+R,EAAOvoB,OAAS,EAC9CuoB,EAAOO,QACP1sB,EACJ,OACEuC,EAAAA,GAAAA,cAAC+mB,EAAY,CACX1mB,IAAK8pB,EACLvqB,KAAMA,EACN3C,KAAMA,EACN+pB,MAAOA,EACPnP,gBAAiBA,EACjBoP,aAAcpnB,QAAQ9B,GAAYkpB,GAClC/mB,QAAS0qB,GAGf,CAkGQ,I,6HE7SV,MAqCA,GAAe/tB,EAAAA,EAAAA,KArC2B+uB,EACxCC,WACAC,qBACArtB,YACAgF,OACAwU,0BAEA,MAAM8T,EAAW,eAAgBF,EAC3BG,GAAoB5sB,EAAAA,EAAAA,KAAQ,IAChC0sB,GAAoBG,MAAMC,IAAcC,EAAAA,EAAAA,IAAeD,EAAUL,SAAUA,MAC1E,CAACC,EAAoBD,IAClBO,EAAeJ,GAAmBK,YAAYjuB,GAC9CiJ,GAAY/E,EAAAA,EAAAA,GAAU,WAAU8pB,KAAiBA,EAAc5pB,EAAAA,GAAAA,SAE/DW,GAAuBC,EAAAA,EAAAA,GAAmBiE,GAEhD,OAAI0kB,EAEA/rB,EAAAA,GAAAA,cAACmc,EAAAA,EAAW,CACVC,WAAYyP,EAASzP,WACrB3d,WAAWwB,EAAAA,EAAAA,GAAe,sBAAuBxB,GACjDgF,KAAMA,EACN6oB,8BAA+BrU,IAMnCjY,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GAAe,sBAAuBkD,EAAsB1E,GACvEiF,MAAOD,EAAQ,UAASA,gBAAmBA,WAAWhG,EACtDmG,IAAKyD,GAAaklB,EAClBnR,IAAK4Q,GAAmB9c,OACxB,G,kHChCN,MAgHA,GAAerS,EAAAA,EAAAA,KAhHmB2vB,EAChC/V,SACAgW,UAAU,WACVzvB,SACAgqB,QACA0F,aACAhW,UACAC,0BAEA,MAAM,eACJgW,EAAc,WACdC,EAAU,mBACVC,EAAkB,sBAClBC,IACEjuB,EAAAA,EAAAA,OAEGkuB,EAAgBC,IAAqBhmB,EAAAA,EAAAA,IAA0B,SAC/DmN,EAAa8Y,IAAkBjmB,EAAAA,EAAAA,IAAS,IAEzCkmB,GAAejuB,EAAAA,EAAAA,KAAY,KAC/B,OAAQwtB,GACN,IAAK,WACHE,EAAe,CAAED,WAAYA,EAAaS,OAAQJ,EAAgB5Y,gBAClE2Y,IACA,MACF,IAAK,OACHF,EAAW,CAAE5vB,SAAQmwB,OAAQJ,EAAgB5Y,gBAC7C,MACF,IAAK,QACH0Y,EAAmB,CACjB7vB,SAAQgqB,QAAOmG,OAAQJ,EAAgB5Y,gBAI7CuC,GAAS,GACR,CACDvC,EACA2Y,EACAJ,EACA1F,EACAtQ,EACAiW,EACAI,EACA/vB,EACA6vB,EACAD,EACAH,IAGIW,GAAqBnuB,EAAAA,EAAAA,KAAa8L,IACtCiiB,EAAkBjiB,EAAyB,GAC1C,IAEGsiB,GAA0BpuB,EAAAA,EAAAA,KAAa4O,IAC3Cof,EAAepf,EAAE0V,OAAOxY,MAAM,GAC7B,IAEGjM,GAAOC,EAAAA,EAAAA,KAEPuuB,GAA8DluB,EAAAA,EAAAA,KAAQ,IAAM,CAChF,CAAE2L,MAAO,OAAQ2a,MAAO5mB,EAAK,2BAC7B,CAAEiM,MAAO,WAAY2a,MAAO5mB,EAAK,+BACjC,CAAEiM,MAAO,cAAe2a,MAAO5mB,EAAK,kCACpC,CAAEiM,MAAO,aAAc2a,MAAO5mB,EAAK,kCACnC,CAAEiM,MAAO,YAAa2a,MAAO5mB,EAAK,+BAClC,CAAEiM,MAAO,eAAgB2a,MAAO,iBAChC,CAAE3a,MAAO,kBAAmB2a,MAAO,oBACnC,CAAE3a,MAAO,QAAS2a,MAAO5mB,EAAK,8BAC7B,CAACA,IAEJ,GACe,aAAZ2tB,IAA2BC,GACZ,SAAZD,IAAuBzvB,GACX,UAAZyvB,KAAyBzvB,IAAWgqB,GAExC,OAGF,MAAM9X,EACFpQ,EADsB,aAAZ2tB,EACL,2BACA,qBAET,OACEzsB,EAAAA,GAAAA,cAAC2X,EAAAA,EAAK,CACJlB,OAAQA,EACRC,QAASA,EACT6W,QAAS9W,EAASyW,OAAezvB,EACjCkZ,oBAAqBA,EACrBlY,UAAU,SACVyQ,MAAOA,GAEPlP,EAAAA,GAAAA,cAACwtB,EAAAA,EAAU,CACTtT,KAAK,iBACLuT,QAASH,EACThK,SAAU8J,EACVM,SAAUX,IAEZ/sB,EAAAA,GAAAA,cAACslB,EAAAA,EAAS,CACRI,MAAO5mB,EAAK,iCACZiM,MAAOoJ,EACPmP,SAAU+J,IAEZrtB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,kBACbuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAAC0P,MAAM,SAASvR,UAAU,wBAAwBsZ,QAAM,EAAC7X,QAASgtB,GACtEpuB,EAAK,sBAERkB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAAC7B,UAAU,wBAAwBsZ,QAAM,EAAC7X,QAASwW,GAAU5X,EAAK,YAErE,G,yMCpFZ,MAAM6uB,EAA8B,CAClC,CAAEze,MAAO,sBAAuBnE,MAAO,EAAG6iB,IAAK,MAC/C,CAAE1e,MAAO,sBAAuBnE,MAAO,EAAG6iB,IAAK,MAC/C,CAAE1e,MAAO,sBAAuBnE,MAAO,EAAG6iB,IAAK,OAC/C,CAAE1e,MAAO,qBAAsBnE,MAAO,EAAG6iB,IAAK,OAC9C,CAAE1e,MAAO,qBAAsBnE,MAAO,EAAG6iB,IAAK,SAgShD,GAAe/wB,EAAAA,EAAAA,KA7ROgxB,EACpBjsB,UACA6B,OACAqqB,YACA5e,QACAzQ,YACAsvB,gBACAlW,kBACAmW,iBACAC,aACAhW,sBACAiW,uBACAC,gBACAC,kBACAluB,UACAmlB,WACAgJ,cACAC,gBACAC,sBACAC,oBACAC,qBACAC,yBAEA,MAAM,eAAEC,EAAc,iBAAEhF,EAAgB,eAAEiF,IAAmB/vB,EAAAA,EAAAA,MAEvD4F,GAAM1D,EAAAA,EAAAA,IAAuB,MAE7B8tB,GAAU9tB,EAAAA,EAAAA,IAAuB,MACjCjC,GAAOC,EAAAA,EAAAA,KACP+vB,EAAiBltB,EAAQmtB,oBACvBC,SAAUC,IAAgBC,EAAAA,EAAAA,GAAwBzqB,GAAMqqB,IAE1D,GACJ1wB,EAAE,cAAE+wB,EAAeC,UAAWnT,EAAS,eAAEoT,GACvCztB,EACE0tB,GAAYpB,GAAwBjS,EAEpCnD,GAAiBC,EAAAA,EAAAA,IAAkBtU,EAAKwT,GACxChR,EAAa6R,EACbyW,EAAazW,IAAmBgV,GAEhC,kBACJ0B,EAAiB,oBAAEC,GAAmB,wBACtCC,GAAuB,kBAAEC,GAAiB,uBAC1CC,GAAsB,sBAAEC,KACtBC,EAAAA,EAAAA,GAAuBrrB,GACrBsrB,GAA0BlwB,SAASkuB,GAAiB0B,IAEpDO,IAAoB/wB,EAAAA,EAAAA,KAAY,IAAMwF,EAAIlD,SAAS,IAEnD0uB,IAAiBhxB,EAAAA,EAAAA,KACrB,IAAMwF,EAAIlD,QAAS2uB,QAAQ,kCAC3B,IAGIC,IAAiBlxB,EAAAA,EAAAA,KACrB,IACS+uB,EAAiBa,EAAQttB,QAAUkD,EAAIlD,QAAS6pB,cAAc,kCAEvE,CAAC4C,KAKG,UACJoC,GAAS,UAAEC,GAAS,iBAAEC,GAAgB,iBAAEC,GAAkB7sB,MAAO8sB,KAC/DC,EAAAA,EAAAA,GACFhB,GACAO,GACAC,GACAE,IARgBO,KAAA,CAASC,WAAY3C,OAYvCluB,EAAAA,EAAAA,KAAU,KACJ0vB,EACFhB,MAEAC,KACF,GACC,CAACe,EAAmBf,EAAoBD,KAE3C1uB,EAAAA,EAAAA,KAAU,KACHgZ,GAAgB8W,IAAwB,GAC5C,CAACA,GAAwB9W,IAE5B,MAcM8X,IAAoB3xB,EAAAA,EAAAA,KAAa4O,IACrCA,EAAEM,kBACFN,EAAEmV,iBAEFuL,EAAqB3sB,EAAQ,GAC5B,CAAC2sB,EAAqB3sB,IAEnBivB,IAA4B5xB,EAAAA,EAAAA,KAAY,KAC5CsvB,EAAqB3sB,EAAQ,GAC5B,CAAC2sB,EAAqB3sB,IAEnBkvB,IAAsB7xB,EAAAA,EAAAA,KAAY,KACtCqvB,EAAe1sB,EAAQ,GACtB,CAAC0sB,EAAe1sB,IAEbmvB,IAAoB9xB,EAAAA,EAAAA,KAAY,KACpCovB,EAAazsB,EAAQ,GACpB,CAACysB,EAAazsB,IAEXovB,IAAkB/xB,EAAAA,EAAAA,KAAY,KAClCiB,IAAUmlB,GAAU,EAAK,GACxB,CAACA,EAAUnlB,IAER+wB,IAAsBhyB,EAAAA,EAAAA,KAAY,KACtCiB,IAAUmlB,OAAU5nB,GAAW,EAAK,GACnC,CAAC4nB,EAAUnlB,IAERgxB,IAAgBjyB,EAAAA,EAAAA,KAAY,KAChC0vB,EAAe,CAAEU,kBAAiB,GACjC,CAACV,EAAgBU,IAEd8B,IAAgClyB,EAAAA,EAAAA,KAAY,CAAC4O,EAAyB1F,EAAW,KACrF0F,EAAEmV,iBACFnV,EAAEM,kBAEFyhB,KACAlB,MACAE,EAAe,CACb5S,YAAapa,EACbwvB,QAASC,KAAKC,MAAQ,IAAOnpB,GAAWopB,EAAAA,EAAAA,OACxC,GACD,CAAC3C,EAAgBhtB,EAASguB,GAAwBlB,IAE/C8C,IAAyB9O,EAAAA,IAAgB6L,EAEzCnf,IAAgBnP,EAAAA,EAAAA,GACpB,gBACAC,GAAW,cACXivB,GAAiB,eAChB,kBAAiB/wB,IAClBK,GAGIgzB,IAAmBryB,EAAAA,EAAAA,KAAQ,KAC/B,IAAK2wB,IAA2BhC,GAAkBoB,IAAkBnB,EAAiB,MAAO,GAE5F,MAAMxI,EAAqB,GAE3B,OAAI2J,GACFxB,EAA4B5hB,SAASC,IACnCwZ,EAAMlkB,KACJtB,EAAAA,GAAAA,cAAC0xB,EAAAA,EAAQ,CAACxxB,QAASixB,GAA+B9L,SAAUrZ,EAAK4hB,KAC9D9uB,EAAKkN,EAAKkD,MAAOlD,EAAKjB,MAAO,MAEjC,IAGIya,IAGL8I,GACF9I,EAAMlkB,KACJtB,EAAAA,GAAAA,cAAC0xB,EAAAA,EAAQ,CAACtc,KAAK,WAAWlV,QAAS4wB,IAChChyB,EAAK,kCAKRuvB,GACF7I,EAAMlkB,KACJtB,EAAAA,GAAAA,cAAC0xB,EAAAA,EAAQ,CAACtc,KAAK,WAAWlV,QAAS6wB,IAChCjyB,EAAK,8BAKPwwB,GAAYpvB,IACV2X,GACH2N,EAAMlkB,KAAKtB,EAAAA,GAAAA,cAAC0xB,EAAAA,EAAQ,CAACxxB,QAAS8wB,GAAiB5b,KAAK,SAAStW,EAAK,sBAEpE0mB,EAAMlkB,KACJtB,EAAAA,GAAAA,cAAC0xB,EAAAA,EAAQ,CAACxxB,QAAS+wB,GAAqB7b,KAAK,YAC1CtW,EAAK+Y,EAAkB,cAAgB,sBAK1CoW,GACFzI,EAAMlkB,KACJtB,EAAAA,GAAAA,cAAC0xB,EAAAA,EAAQ,CAACxxB,QAASgxB,GAAe9b,KAAK,YACpCtW,EAAK,qBAIRyvB,GACF/I,EAAMlkB,KACJtB,EAAAA,GAAAA,cAAC0xB,EAAAA,EAAQ,CAACtc,KAAK,SAASlV,QAAS2wB,IAC9B/xB,EAAK,sBAIL0mB,EAAK,GACX,CACDuK,GAAyBhC,EAAeoB,EAAenB,EAAgBM,EAAeD,EAAaiB,EACnGpvB,EAAS+tB,EAAYM,EAAqB4C,GAA+BryB,EAAMgyB,GAC/EC,GAAmBlZ,EAAiBoZ,GAAqBD,GAAiBE,GAAeL,KAG3F,OACE7wB,EAAAA,GAAAA,cAAA,OACEyE,IAAKA,EACLhG,UAAW2Q,GACXF,MAAOA,GAAUtN,GAAS+vB,MAC1B,kBAAiBvzB,EACjBwzB,YAjIqB/jB,KACvBgkB,EAAAA,EAAAA,GAAoChkB,GACpC6hB,GAAwB7hB,EAAE,EAgIxB3N,QA3IgB8Z,KACdwV,IACAF,EACF3F,EAAiB,CAAEmI,eAAgB,qBAGrC5xB,IAAUmlB,GAAS,EAsIjBjF,cAAeuP,IAEf3vB,EAAAA,GAAAA,cAAC+xB,EAAAA,EAAW,CACVC,aAAcvtB,EACd7C,QAASA,EACTqwB,SAAO,EACPxuB,KAAMA,EACNyuB,YAAU,EACVC,sBAAoB,EACpBtwB,QAASoF,EACTmrB,QAAS7C,EACT8C,qBAAmB,EACnBjE,gBAAiBA,EACjBa,YAAaA,KAEbd,GAAiBmB,GACjBtvB,EAAAA,GAAAA,cAAA,OACEvB,UAAU,kBAEVuB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,sBAGf0vB,GAAiBlS,IAAcqT,GAC/BtvB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,mBACbuB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,kBAGhB+yB,IACCxxB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL7B,UAAU,wBACVuR,MAAM,OACNzP,OAAK,EACLL,QAAS0wB,IAET5wB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,gBAGhBoB,QAAQ4xB,GAAiBpwB,SACxBrB,EAAAA,GAAAA,cAACsyB,EAAAA,EAAI,CACH7tB,IAAKoqB,EACLpY,OAAQ+Y,EACRc,iBAAkBA,GAClBC,iBAAkBA,GAClBH,UAAWA,GACXC,UAAWA,GACX3sB,MAAO8sB,GACP/xB,UAAU,uBACV8zB,WAAS,EACT5B,WAAY3C,EACZtX,QAASkZ,GACTjZ,oBAAqBkZ,IAEpB4B,IAGD,G,uECjUV,MAoCA,GAAe50B,EAAAA,EAAAA,KAlCiBgiB,EAC9B5B,QACAxe,YACAgtB,kBACAhoB,OACAoY,cACA5D,sBACA/X,aAEI+c,EAAMuV,YAENxyB,EAAAA,GAAAA,cAACmc,EAAAA,EAAW,CACVC,WAAYa,EAAMuV,YAClB/zB,UAAWA,EACXgF,KAAMA,EACN6oB,8BAA+BrU,EAC/BoE,UAAYR,OAA2Bpe,EAlB5B,EAmBXyC,QAASA,IAMbF,EAAAA,GAAAA,cAACyyB,EAAAA,EAAgB,CACfC,UAAWzV,EAAMyV,UACjBxjB,MAAO+N,EAAM/N,MACb8C,QAASiL,EAAM7e,GACfK,UAAWA,EACXgtB,gBAAiBA,EACjBvrB,QAASA,K,oHC3Bf,MAkBA,GAAerD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUugB,kBACJA,EAAa3K,OAMX,CAAEggB,YAFUnhB,EAAAA,EAAAA,IAAWzU,EAAQugB,EAAa3K,SAH1C,CAAC,GAHM7V,EAlB4BgiB,EAAGxB,eAAcqV,iBAC/D,MAAM7zB,GAAOC,EAAAA,EAAAA,KACP6zB,EAAiBD,IAAeA,EAAW5f,SAAUkD,EAAAA,EAAAA,IAAuB0c,GAC5EtsB,EAAUvH,EAAKwe,EAAawF,QAE/B+P,QAAQ,SAAU,IAClBA,QAAQ,UAAWvV,EAAaqU,OAAS,IAAImB,OAEhD,OACE9yB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,gBAAgBgD,IAAK3C,EAAK4C,MAAQ,MAAQ,QACpDkxB,GACC5yB,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,cAAcgD,IAAI,SAAQgO,EAAAA,EAAAA,GAAWmjB,IAEvD5yB,EAAAA,GAAAA,cAACsa,EAAAA,EAAY,CAACjU,QAASA,IACrB,I,2JCbR,MAyGA,GAAexJ,EAAAA,EAAAA,KA3Fek2B,EAC5BjuB,UAASC,cAAa4a,cAAa1H,sBAAqB+a,qBAExD,MAAMl0B,GAAOC,EAAAA,EAAAA,KAEb,IAAIk0B,GAAgDC,EAAAA,EAAAA,IAAkBpuB,GAEtE,IAAKmuB,EAAU,CACb,MAAMzf,GAAO2f,EAAAA,EAAAA,IAAsBruB,GACnC,GAAI0O,EAAM,CACR,MAAM,IAAE4f,EAAG,OAAEC,GAAW7f,EAExByf,EAAW,CACTK,SAAUD,EAAOR,QAAQ,QAAS,IAClCO,IAAKA,EAAIzO,SAAS,OAASyO,EAAMA,EAAIzO,SAAS,KAAQ,UAASyO,IAAS,UAASA,IACjFG,sBAAsBC,EAAAA,EAAAA,IAAe1uB,KAAasuB,GAC9CK,EAAAA,EAAAA,GAAqB30B,EAAMgG,OAASrH,OAAWA,EA9BnC,UA+BZA,EAER,CACF,CAEA,MAAMi2B,GAAqBz0B,EAAAA,EAAAA,KAAY,KACrC+zB,EAAeluB,EAAQ1G,GAAI0G,EAAQ9H,OAAO,GACzC,CAACg2B,EAAgBluB,EAAQ1G,GAAI0G,EAAQ9H,SAExC,IAAKi2B,EACH,OAGF,MAAM,SACJK,EAAQ,IACRF,EAAG,WACHO,EAAU,MACVzkB,EAAK,YACLiF,EAAW,qBACXof,EAAoB,MACpBvM,EAAK,MACLxgB,GACEysB,EAEEW,GAAwB7uB,GAAeoP,IAAe0f,EAAAA,EAAAA,GAAS1f,EAvD/C,KAyDhB1V,GAAYwB,EAAAA,EAAAA,GAChB,uBACE+mB,IAAUxgB,GAAU,iBAGlBstB,EAAkBV,EAAIP,QAAQ,UAAW,KAAOc,EAEtD,OACE3zB,EAAAA,GAAAA,cAAA,OACEvB,UAAWA,EACX,gBAAe60B,GAAYK,GAAY,GACvClyB,IAAK3C,EAAK4C,MAAQ,WAAQjE,GAEzBupB,GACChnB,EAAAA,GAAAA,cAACyf,EAAAA,EAAK,CAAC3a,QAASA,EAAS6a,YAAaA,EAAa1H,oBAAqBA,IAE1EjY,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,WACbuB,EAAAA,GAAAA,cAAC0P,EAAAA,EAAI,CAAChO,MAAO5C,EAAK4C,MAAOjD,UAAU,aAAayB,QAASwzB,IACtDjkB,EAAAA,EAAAA,GAAWP,GAASokB,GAAYK,KAEjCC,GAAwBL,IACxBvzB,EAAAA,GAAAA,cAAC0P,EAAAA,EAAI,CAAChO,MAAO5C,EAAK4C,MAAOjD,UAAU,mBAAmByB,QAASwzB,GAC5DH,GAAyBK,IAAwBnkB,EAAAA,EAAAA,GAAWmkB,IAGjE5zB,EAAAA,GAAAA,cAAC+zB,EAAAA,EAAQ,CACPX,IAAKA,EACL30B,UAAU,YACVgC,KAAMqzB,EACNpyB,MAAO5C,EAAK4C,QAEbqD,GAAe/E,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,gBAAegR,EAAAA,EAAAA,GAAW1K,KAE1DA,GACC/E,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,gBACbuB,EAAAA,GAAAA,cAAC0P,EAAAA,EAAI,CACHjR,UAAU,OACVyB,QAASwzB,EACThyB,MAAO5C,EAAK4C,QAEXiO,EAAAA,EAAAA,IAAoB7Q,EAAqB,IAAfgG,EAAQI,QAIrC,G,mGC7GH,SAAS8uB,EACdlvB,EACAmvB,EACAC,EACAC,EACAC,EACAzU,EACA0U,GAEA,MAAM,KAAE5zB,EAAI,SAAE6zB,GAAaxvB,EAAQuB,QAAQ5F,MAAQ,CAAC,EAEpD,IAAKA,EAAM,CACT,MAAM8zB,GAA0Bf,EAAAA,EAAAA,IAAe1uB,GAC/C,OAAOyvB,EAA0B,EAACV,EAAAA,EAAAA,GAASU,EAAyBH,SAAmB32B,CACzF,CAEA,OAAO+2B,EAAAA,EAAAA,IACLX,EAAAA,EAAAA,GAASpzB,EAAM2zB,GACfE,EACAL,EACAC,EACAG,EACAvvB,EAAQ1G,GACR+1B,EACAxU,EAEJ,CAGO,SAAS8T,EACd30B,EACAgG,EACA2vB,GAAU,EACVR,EACAG,EAAiBM,EAAAA,IAEjB,MAAM,SAAEJ,GAAaxvB,EAAQuB,QAAQ5F,MAAQ,CAAC,EAExCk0B,EAAcL,GAAUM,MAAM/mB,GAAMA,EAAEqV,OAAS2R,EAAAA,GAAAA,UAC/CC,EAAiBR,GAAUM,MAAM/mB,GAAMA,EAAEqV,OAAS2R,EAAAA,GAAAA,cACxD,IAAKF,IAAgBG,EAAgB,CACnC,MAAMr0B,GAAOozB,EAAAA,EAAAA,IAASkB,EAAAA,EAAAA,IAAsBj2B,EAAMgG,EAAS2vB,GAAUL,GAErE,OAAIH,GACKxkB,EAAAA,EAAAA,GAAWhP,EAAM,CAAC,QAAS,aAAc,CAAEwzB,eAE3CxkB,EAAAA,EAAAA,GAAWhP,EAEtB,CAEA,MAAMkxB,GAAS8C,IAAWO,EAAAA,EAAAA,IAAuBlwB,GAC3CmwB,EAAiBtD,EAAS,GAAEA,KAAW,GAEvClxB,EAAOuzB,EAAkBlvB,EAASmvB,OAAWx2B,GAAW,EAAM22B,GAC9DjgB,GAAc+gB,EAAAA,EAAAA,IAA6Bp2B,EAAMgG,EAASrE,GAEhE,MAAO,KACFgP,EAAAA,EAAAA,GAAWwlB,MACVhsB,MAAMksB,QAAQhhB,GAAeA,EAAc,CAACA,IAChD5U,OAAOM,QACX,C,wECrEA,MAQA,GAAehD,EAAAA,EAAAA,KAR6B8E,IAC1C,MAAM,OAAE8U,GAAW9U,EACbyzB,GAAkBC,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,mBAAoB7e,GAG3E,OAAO2e,EAAkBp1B,EAAAA,GAAAA,cAACo1B,EAAoBzzB,QAAYlE,CAAS,G,6FCWrE,MAqGA,GAAeZ,EAAAA,EAAAA,KArGa04B,EAC1BtY,QAAOhgB,OAAMu4B,WAAU9jB,UAAS+jB,8BAA6BC,iBAAgBC,kBAE7E,MAAM,oBACJC,EAAsB,EAAC,qBAAEC,EAAuB,GAC7C54B,EAAKwU,QAAiB,CAAC,EAARxU,EAEd64B,GAAmBN,GAAYvY,IAAUyY,EACzCjkB,EAAUxU,EAAKwU,UAAYwL,EAC3B8Y,GAAmB32B,EAAAA,EAAAA,KAAQ,IAC/BqS,GAAWxU,GAAMigB,OAAS7d,OAAOC,OAAOrC,EAAKigB,QAAQ3d,QAAO,EAAGy2B,iBAAkBA,SAAev4B,GAC/F,CAACR,EAAMwU,IAEJukB,GAAc52B,EAAAA,EAAAA,KAAQ,IAC1BqS,EAEMC,GAAWqkB,GAAkBx2B,QAAQ02B,IAAwB,IAAhBA,EAAIvkB,UAAmBrQ,QACnE00B,GAAkB10B,QACpB4b,GAAShgB,GAAM+4B,aACnB,CAAC/4B,EAAMggB,EAAO8Y,EAAkBtkB,EAASC,IAEtCwkB,GAAgB92B,EAAAA,EAAAA,KAAQ,KAC5B,MAAM+2B,EAAyBl5B,EAAKigB,QAC/B7d,OAAOC,OAAOrC,EAAKigB,QAAQ0X,MAAMqB,GAAQA,EAAIvkB,SAAWukB,EAAID,cAEjE,OAAOtkB,GAAYzU,EAAKigB,SAAWiZ,CAAuB,GACzD,CAACl5B,EAAMyU,IAEJ0kB,GAAgBnZ,GAAgBhgB,EAAKm5B,cAErCC,GAAWV,GAAe91B,QAC9Bm2B,GAAeJ,GAAuBQ,GAAiBZ,GAAYK,GAChEC,GAGCQ,EAAWz2B,QAAQm2B,GAAeI,GAClC33B,GAAYwB,EAAAA,EAAAA,GAChB,QACAi2B,GAAiB,SAChBI,GAAYd,GAAY,SACzBc,GAAY,UAsDd,OACEt2B,EAAAA,GAAAA,cAACu2B,EAAAA,EAAc,CAACxK,UAAQ,EAACttB,UAAU,mBAAmBgY,OAAQ4f,GApDhE,WACE,MAAMG,EAAyBX,GAC7B71B,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,iBAAkBi2B,GAAiB,UAChEl2B,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,gBAIXg4B,EAAwBb,GAC5B51B,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,iBACbuB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,kBAIXi4B,EAAuBZ,GAC3B91B,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,iBAAkBi2B,GAAiB,WAG9DS,EAAsBP,GAAiBJ,EAC3Ch2B,EAAAA,GAAAA,cAAA,OAAKvB,UAAWA,IACZ23B,GAAiBp2B,EAAAA,GAAAA,cAACQ,EAAAA,EAAe,CAACC,MAAMm2B,EAAAA,EAAAA,IAAqBZ,WAE/Dv4B,EAEEo5B,EAAgBrB,IAAamB,IAAuBF,IAA0BD,GAClFx2B,EAAAA,GAAAA,cAAA,OAAKvB,UAAWA,GACduB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,sBAIX2C,EAAW,CACfs1B,EAAsBF,EAAwBC,EAAuBE,EAAoBE,GACzFt3B,OAAOM,SAET,GAAwB,IAApBuB,EAASC,OAEb,OAAwB,IAApBD,EAASC,OAAqBD,EAAS,GAEvCq0B,EACgC,CAChCgB,EAAuBE,EAAoBH,EAAwBK,GACnEt3B,OAAOM,SACwB,GAIjCG,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,iBACZ2C,EAGP,CAIK01B,GACc,G,8WC5GrB,MAqBA,GAAej6B,EAAAA,EAAAA,KArBsBk6B,EACnC1xB,aACAtH,WACA6I,cAGE5G,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GACd,iBACAlC,GAAY,SACZsH,IAAeuB,GAAY,aAG3B5G,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,aACbuB,EAAAA,GAAAA,cAAA,YACAA,EAAAA,GAAAA,cAAA,YACAA,EAAAA,GAAAA,cAAA,gB,eCDR,MAYA,GAAenD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUC,aACT,MAAMC,GAAOC,EAAAA,EAAAA,IAAWH,EAAQC,GAChC,OAAKC,EAIE,CACLA,OACAyU,SAASC,EAAAA,EAAAA,IAAkB1U,GAAM2U,EAAAA,EAAAA,IAAqB7U,IAAS8U,EAAAA,EAAAA,IAAuB9U,IACtFi6B,oBAAoBC,EAAAA,EAAAA,IAAuBl6B,IANpC,CAAC,CAOT,GAXeD,EAZ2Bo6B,EAC7Cj6B,OACAyU,UACAslB,wBAEO/5B,GACL+C,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,wBACbuB,EAAAA,GAAAA,cAACu1B,EAAAA,EAAK,CAACt4B,KAAMA,EAAMyU,QAASA,EAAS+jB,6BAA2B,EAACE,aAAcqB,QC2QrF,GAAen6B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUC,aACT,MAAMC,GAAOC,EAAAA,EAAAA,IAAWH,EAAQC,GAChC,IAAKC,EACH,MAAO,CAAC,EAGV,MAAM,SAAEk6B,EAAQ,iBAAEC,EAAgB,WAAEC,GAAep6B,EAAKq6B,aAAe,CAAC,EAClEC,EAAoBJ,GACrB3lB,EAAAA,EAAAA,IAAWzU,EAAQo6B,KAAaj6B,EAAAA,EAAAA,IAAWH,EAAQo6B,QAAa15B,EAC/D+5B,EAAoBv6B,EAAKq6B,aAAcG,EAAAA,EAAAA,IAAiBx6B,EAAKq6B,kBAAe75B,EAC5Ei6B,EAAsBF,GAAqBJ,GAC7CO,EAAAA,EAAAA,IAAkB56B,EAAQE,EAAKmB,GAAIg5B,QACnC35B,GACIm6B,cAAeC,EAAqBC,aAAcC,GAAuBP,GAAqB,CAAC,EACjGQ,GAAoBriB,EAAAA,EAAAA,IAAqB1Y,IAE7CD,OAAQi7B,EACRnmB,SAAUomB,EACVhV,KAAMiV,IACJpmB,EAAAA,EAAAA,IAAyBhV,IAAW,CAAC,EACnCsI,EAAarI,IAAWi7B,GAAiBC,IAAoB9kB,EAAAA,GAC7DglB,EAAkBp7B,KAAWM,EAAAA,EAAAA,IAAeP,GAAQs7B,iBAEpDz4B,EAAOo4B,GAAoBxmB,EAAAA,EAAAA,IAAWzU,EAAQi7B,QAAqBv6B,EACnE8oB,EAAayR,GAAoBxR,EAAAA,EAAAA,IAAiBzpB,EAAQi7B,QAAqBv6B,EAC/E66B,EAAmBr7B,EAAKq6B,cAAeiB,EAAAA,EAAAA,IAAuBx7B,EAAQE,EAAKq6B,aAE3Eha,GAAekb,EAAAA,EAAAA,IAAkBz7B,EAAQC,EAAQoW,EAAAA,GAAgB,gBAEvE,MAAO,CACLnW,OACAyU,SAASC,EAAAA,EAAAA,IAAkB1U,GAAM2U,EAAAA,EAAAA,IAAqB7U,IAAS8U,EAAAA,EAAAA,IAAuB9U,IACtFw6B,oBACAM,sBACAE,qBACAL,sBACAe,OAAOC,EAAAA,EAAAA,IAAY37B,EAAQC,EAAQoW,EAAAA,IACnC/U,eAAgBtB,EAAOuB,SAASC,MAAMF,eACtCgH,aACA+yB,kBACAO,cAAetzB,GAAkC,WAApB8yB,EAC7BS,iBAAkB77B,EAAO87B,YAAYC,YAAYz3B,QAAU,GAAK,EAChEU,aAAchF,EAAOgF,gBACjBs1B,GAAcp6B,EAAKq6B,aAAe,CACpCyB,2BAA2BC,EAAAA,EAAAA,IAAqBj8B,EAAQE,EAAKq6B,cAE/D13B,OACA2mB,aACA+R,mBACAhb,eACD,GAnDexgB,EA/MoBm8B,EACtCj8B,SACAk8B,WACAC,YACAC,gBACA5D,WACAvd,sBACAhb,OACAyU,UACA9R,OACA2mB,aACAsR,sBACAN,oBACAwB,4BACArB,sBACAK,qBACAsB,YACAZ,QACAp6B,iBACAgH,aACA+yB,kBACAO,gBACAC,kBACA72B,eACAu2B,mBACAhb,eACAgc,kBAEA,MAAM,SACJC,EAAQ,iBACRC,EAAgB,WAChBC,EAAU,eACVC,IACE76B,EAAAA,EAAAA,OAEE,SAAE+H,IAAaC,EAAAA,EAAAA,OACd8yB,EAAmBC,GAAiBC,KAAoB52B,EAAAA,EAAAA,MACxD62B,GAAuBC,GAAqBC,KAAwB/2B,EAAAA,EAAAA,MACpEg3B,GAAmBC,GAAiBC,KAAoBl3B,EAAAA,EAAAA,MACxDm3B,GAAyBC,GAAuBC,KAA2Br3B,EAAAA,EAAAA,MAC3Es3B,GAA6BC,GAA2BC,KAA+Bx3B,EAAAA,EAAAA,MACvFy3B,GAAyBC,GAAuBC,KAA2B33B,EAAAA,EAAAA,MAE5E,YAAEq0B,GAAW,QAAE7lB,IAAYxU,GAAQ,CAAC,GAEpC,eAAE49B,GAAc,IAAEp2B,KAAQq2B,EAAAA,EAAAA,GAAiB,CAC/C79B,OACAD,SACAs6B,eACAha,eACAmb,QACAf,sBACAG,sBACAE,qBACAO,mBACAf,oBACAtf,sBACAmhB,gBACA/6B,iBACA86B,cAGInf,IAAc/a,EAAAA,EAAAA,KAAY,KAC1BwS,GACFioB,EAAe,CAAE18B,UAAU,CAAE+9B,uBAAuB,KAItDxB,EAAS,CAAEn7B,GAAIpB,EAAQg+B,sBAAsB,GAAQ,CAAED,uBAAuB,IAE1E11B,GAAcszB,GAChBa,IACF,GACC,CAAC/nB,GAAS8nB,EAAUv8B,EAAQqI,EAAYszB,EAAee,EAAgBF,IAEpEyB,IAAkBh8B,EAAAA,EAAAA,KAAa4O,IACnCA,EAAEmV,iBACFsW,IAAct8B,EAAO,GACpB,CAACA,EAAQs8B,IAEN4B,IAAej8B,EAAAA,EAAAA,KAAY,KAC/Bo7B,KACAT,IAAiB,GAChB,CAACS,GAAuBT,KAErBuB,IAAyBl8B,EAAAA,EAAAA,KAAY,KACzCu7B,KACAT,IAAqB,GACpB,CAACS,GAA2BT,KAEzB7M,IAAejuB,EAAAA,EAAAA,KAAY,KAC/B07B,KACAT,IAAiB,GAChB,CAACS,GAAuBT,KAErBkB,IAAiBC,EAAAA,EAAAA,GAAsB,CAC3Cp+B,OACA2C,OACAs7B,gBACAC,0BACAjO,gBACAgM,WACA1D,WACA9jB,UACAknB,oBAGI9f,IAAiBC,EAAAA,EAAAA,IAAkBtU,GAAKwT,GAS9C,IANAnY,EAAAA,EAAAA,KAAU,KACJgZ,IAAkB/W,GAAgB0P,IAAWxU,QAAgCQ,IAAxBR,EAAKq+B,gBAC5D7B,EAAW,CAAEz8B,UACf,GACC,CAACC,EAAMD,EAAQyU,GAASqH,GAAgB/W,EAAc03B,KAEpDx8B,EACH,OAGF,MAAMwB,IAAYwB,EAAAA,EAAAA,GAChB,4BACAsR,EAAAA,EAAAA,IAASvU,GAAU,UAAY,QAC/ByU,IAAW,QACXpM,GAAc,WACd+yB,GAAmB,kBAGrB,OACEp4B,EAAAA,GAAAA,cAACmV,EAAAA,EAAQ,CACP1Q,IAAKA,GACLhG,UAAWA,GACXwW,KAAMsmB,EAAAA,GAAyB,KAAGC,EAAAA,EAAAA,IAAmBx+B,EAAQ,SAAUoW,EAAAA,WAAoB3V,EAC3FiG,MAAQ,QAAO21B,MACftpB,QAAS0B,KAAY7K,EACrBw0B,eAAgBA,GAChBl7B,QAAS8Z,GACTsf,YAAa2B,GACbQ,mBAAiB,GAEjBz7B,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,UACbuB,EAAAA,GAAAA,cAACI,EAAAA,EAAM,CACLnD,KAAMA,EACN2C,KAAMA,EACN2mB,WAAYA,EACZ1O,gBAAiBjY,GAAMmT,OACvBhR,aAAcA,EACd1D,eAAgBA,EAChByZ,WAAS,EACTG,oBAAqBA,IAEvBjY,EAAAA,GAAAA,cAACk3B,EAAW,CAACl6B,OAAQA,IACpBC,EAAKkB,cAAgBlB,EAAKiB,gBACzB8B,EAAAA,GAAAA,cAAC+2B,EAAc,CAACnwB,SAAUA,EAAUvB,WAAYA,EAAYtH,SAA6B,IAAnBM,KAG1E2B,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,QACbuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,YACbuB,EAAAA,GAAAA,cAACub,EAAAA,EAAa,CACZC,KAAM5b,GAAQ3C,EACd0e,iBAAe,EACf9D,gBAAiB7a,IAAW4C,GAAMxB,IAAMwB,GAAMmT,OAC9CkF,oBAAqBA,IAEtBvG,GAAW1R,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,eACzBuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,cACdxB,EAAKq6B,aACJt3B,EAAAA,GAAAA,cAACsf,EAAAA,EAAe,CACdxa,QAAS7H,EAAKq6B,YACd/X,eAAgBwZ,KAItB/4B,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,YACZo8B,KACD76B,EAAAA,GAAAA,cAACu1B,EAAAA,EAAK,CAACt4B,KAAMA,EAAMu4B,SAAUA,EAAU9jB,QAASA,MAGnD0oB,IACCp6B,EAAAA,GAAAA,cAACwW,EAAAA,EAAe,CACdC,OAAQkjB,EACRjjB,QAASmjB,GACTljB,oBAAqB2jB,GACrBr9B,KAAMA,IAGTs9B,IACCv6B,EAAAA,GAAAA,cAACo1B,EAAAA,EAAe,CACd3e,OAAQqjB,GACRpjB,QAASsjB,GACTrjB,oBAAqB8jB,GACrBz9B,OAAQA,IAGX09B,IACC16B,EAAAA,GAAAA,cAACwsB,EAAAA,EAAW,CACV/V,OAAQwjB,GACRvjB,QAASyjB,GACTxjB,oBAAqBikB,GACrB59B,OAAQA,EACRyvB,QAAQ,SAGH,K,mCCvSf,MCqEA,GAAe5vB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,GAAUm8B,WAAUwC,iBAGrD,CACLC,WAHiBzC,GAA2B,WAAfwC,GAA0BE,EAAAA,EAAAA,IAAiB7+B,EAAQm8B,QAAYz7B,EAI5Fo+B,eAAeC,EAAAA,EAAAA,IAAoB/+B,EAAQ,SAL3BD,EAvC2Bi/B,EAC7CJ,aAAYE,gBAAeG,kBAAiBC,6BAE5C,MAAMn9B,GAAOC,EAAAA,EAAAA,MACP,SAAE6H,IAAaC,EAAAA,EAAAA,MAEfq1B,GAAmBj9B,EAAAA,EAAAA,KAAY,KACnC+8B,EAAgB,CAAE9Y,KAAM,aAAciZ,QAASR,IAC/CM,EAAuBG,EAAAA,GAAAA,8BAA8C,GACpE,CAACT,EAAYK,EAAiBC,IAEjC,OACEj8B,EAAAA,GAAAA,cAAA,OAAKvB,UD1Cc,wBC2CjBuB,EAAAA,GAAAA,cAAA,OAAKvB,UD3C6C,wBC4C/Co9B,GAAiB77B,EAAAA,GAAAA,cAACq8B,EAAAA,EAAuB,CAACz6B,QAASi6B,EAAep4B,KAhBzD,MAkBZzD,EAAAA,GAAAA,cAAA,MAAIvB,UD9C6E,uBC8CpDgD,IAAI,QAAQ3C,EAAK,2BAC9CkB,EAAAA,GAAAA,cAAA,KAAGvB,UD/CmH,uBC+CpFgD,IAAI,QACnC3C,EAAK68B,EAAa,mCAAqC,mBAEzDA,GACC37B,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLyP,QAASnJ,EACT01B,OAAK,EACLC,MAAI,EACJr8B,QAASg8B,EACTz4B,KAAK,UACL/B,MAAO5C,EAAK4C,OAEZ1B,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,kBACbuB,EAAAA,GAAAA,cAAA,OAAKvB,UD5DwT,wBC6D1TK,EAAK,sCAIR,K,+CCjEV,SAAgB,KAAO,uBAAuB,UAAY,uBAAuB,OAAS,uBAAuB,MAAQ,uBAAuB,eAAe,uBAAuB,YAAc,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,cAAgB,uBAAuB,OAAS,uBAAuB,aAAe,uBAAuB,OAAS,wBCmK3a,GAAejC,EAAAA,EAAAA,KAxIe2/B,EAC5BC,kBACAnD,cACAp5B,cAEA,MAAM,sBAAEw8B,IAA0B79B,EAAAA,EAAAA,MAC5BC,GAAOC,EAAAA,EAAAA,KAEP49B,GAAiBC,EAAAA,EAAAA,IAA8BC,EAAAA,KAE/CC,GADiBC,EAAAA,EAAAA,MACmBF,EAAAA,MAAqBG,WAEzDC,GAAe79B,EAAAA,EAAAA,KAAQ,KAC3B,IAAKu9B,GAAgBt7B,OAAQ,OAAOvC,EAAK,WAEzC,MAAMjB,GAAYoD,EAAAA,EAAAA,MAAYnD,MAAMF,KAEpC,OAAO++B,EAAelS,MAAM,EAnBV,GAmB4B/qB,KAAI,CAAC1C,EAAQyC,EAAGy9B,KAC5D,MAAM5S,EAAS7qB,IAAMy9B,EAAI77B,OAAS,EAC5BpE,EAAOY,EAAUb,GACvB,GAAKC,EAIL,OACE+C,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,QAAMvB,WAAWwB,EAAAA,EAAAA,GAAe4D,EAAAA,KAAai5B,GAAsB7/B,EAAK+4B,aAAenyB,EAAAA,UACpF4L,EAAAA,EAAAA,GAAWxS,EAAKiS,QAElBob,EAAS,GAAK,KACd,GAEL,GACD,CAACqS,EAAgB79B,EAAMg+B,IAEpB1B,GAAiBh8B,EAAAA,EAAAA,KAAQ,KAC7B,MAAM+9B,GAAkBV,EAAgBtX,aAAe,CACrDjW,MAAOpQ,EAAK,gCACZsW,KAAM,WACNgoB,QAASA,KACPV,EAAsB,CAAEvX,aAAa,GAAO,GAI1CkY,EAAeZ,EAAgBtX,aAAe,CAClDjW,MAAOpQ,EAAK,8BACZsW,KAAM,SACNgoB,QAASA,KACPV,EAAsB,CAAEvX,aAAa,GAAQ,GAI3CmY,EAAa,CACjBpuB,MAAOpQ,EAAK,+BACZsW,KAAM,kBACNgoB,QAASA,KACPV,EAAsB,CAAEa,UAAU,GAAO,GAI7C,OAAOC,EAAAA,EAAAA,IAAQ,CAACL,EAAgBE,EAAcC,GAAY,GACzD,CAACb,EAAgBtX,YAAarmB,EAAM49B,IAEjCzB,GAAkBh8B,EAAAA,EAAAA,KAAa4O,IACnCA,EAAEmV,iBACFsW,KAAe,GACd,CAACA,IAmDJ,OACEt5B,EAAAA,GAAAA,cAACmV,EAAAA,EAAQ,CACPjV,QAASA,EACTo5B,YAAa2B,EACbx8B,WAAWwB,EAAAA,EAAAA,GACT4D,EAAAA,KACA44B,EAAgBtX,aAAethB,EAAAA,UAC/B,sBACA,qBAEF45B,gBAAiB55B,EAAAA,OACjBu3B,eAAgBA,EAChBK,mBAAiB,GAEhBgB,EAAgBtX,YA7DjBnlB,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe4D,EAAAA,KAAa,SAC1C7D,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,YACbuB,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,QAAS4D,EAAAA,QACtC7D,EAAAA,GAAAA,cAAA,MAAIyB,IAAI,OAAOhD,WAAWwB,EAAAA,EAAAA,GAAe4D,EAAAA,KAAa,aACpD7D,EAAAA,GAAAA,cAAA,KAAGvB,WAAWwB,EAAAA,EAAAA,GAAe4D,EAAAA,KAAa,yBACzC/E,EAAK,mBAGTe,QAAQi9B,IACP98B,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,EAAAA,aACd7D,EAAAA,GAAAA,cAACQ,EAAAA,EAAe,CAACC,MAAMm2B,EAAAA,EAAAA,IAAqBkG,QAUpD98B,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,SAAU4D,EAAAA,gBACvC7D,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,SAAU4D,EAAAA,SACvC7D,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,0BAGjBuB,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe4D,EAAAA,KAAa,SAC1C7D,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,YACbuB,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,QAAS4D,EAAAA,QACtC7D,EAAAA,GAAAA,cAAA,MAAIyB,IAAI,OAAOhD,WAAWwB,EAAAA,EAAAA,GAAe4D,EAAAA,KAAa,aAAc/E,EAAK,oBAG7EkB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,YACbuB,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,SAAU4D,EAAAA,eACtCo5B,GAEFp9B,QAAQi9B,IACP98B,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,SACbuB,EAAAA,GAAAA,cAACQ,EAAAA,EAAe,CAACC,MAAMm2B,EAAAA,EAAAA,IAAqBkG,SAwB7C,IC9GTY,EAAmB,IAAI56B,IAAI,CAAC,IAAK,MAmLvC,GAAejG,EAAAA,EAAAA,KAjLgB8gC,EAC7BjC,aACAxC,WACAn7B,WACA6/B,mBACAC,oBACApB,kBACAT,kBACAC,yBACA6B,gCAEA,MAAM,SAAEvE,EAAQ,aAAEwE,EAAY,gBAAEC,IAAoBn/B,EAAAA,EAAAA,MAE9CmzB,GAAejxB,EAAAA,EAAAA,IAAuB,MACtCk9B,GAAsBl9B,EAAAA,EAAAA,KAAO,GAE7Bm9B,EACW,QAAfxC,EAAuByC,EAAAA,IAA+B,aAAfzC,EAA4BmB,EAAAA,IAAqB3D,EAGpFkF,EAAsC,QAAf1C,GAAwBmC,EAE/C/E,GAAa8D,EAAAA,EAAAA,IAA8BsB,GAE3CG,GAAevF,GAAYz3B,QAAU,GAAKi9B,EAAAA,IAC1CC,EAAgBH,EAClB3B,EAAgBtX,YAAcqZ,EAAAA,IAA2BF,EAAAA,IAAiB,GAExE,cAAEG,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAiB7F,IAEtD/T,EAAaC,IAAWC,EAAAA,EAAAA,QAAkBxnB,EAAWq7B,OAAYr7B,EAAWmhC,EAAAA,MAGnFC,EAAAA,EAAAA,GAAW9gC,GAAY+6B,GAAYz3B,OAAS,CAC1C,cAAgBwM,IACdA,EAAEmV,iBACF+a,EAAa,CAAEe,kBAAmB,EAAGhG,cAAa,EAEpD,gBAAkBjrB,IAChBA,EAAEmV,iBACF+a,EAAa,CAAEe,iBAAkB,EAAGhG,cAAa,QAEjDr7B,IAGJqC,EAAAA,EAAAA,KAAU,KAER,GAAK/B,GAAa+6B,GAAeiG,EAAAA,GA2BjC,OAFArmB,SAASsmB,iBAAiB,UAAWC,GAE9B,KACLvmB,SAASwmB,oBAAoB,UAAWD,EAAc,EAxBxD,SAASA,EAAcpxB,GACrB,IAAMsxB,EAAAA,IAAatxB,EAAEuxB,UAAcD,EAAAA,IAAatxB,EAAEwxB,UAAaxxB,EAAEwV,KAAKic,WAAW,SAAU,CACzF,MAAO,CAAEC,GAAS1xB,EAAEwV,KAAKmc,MAAM,cAAgB,GAC/C,IAAKD,GAAS7B,EAAiBx6B,IAAIq8B,GAAQ,OAE3C,MAAME,EAAkBrB,IAAyB3B,EAAgBtX,YAE3Dua,EAAQD,GAAmB,EAAI,EAC/BE,EAAWC,OAAOL,GAASG,EAAQ,EAEzC,GAAID,IAAiC,IAAdE,EAErB,YADA7B,EAA0B+B,EAAAA,GAAAA,UAI5B,GAAIF,EAAW7G,EAAYz3B,OAAS,EAAG,OAEvCk4B,EAAS,CAAEn7B,GAAI06B,EAAY6G,GAAW3E,sBAAsB,GAC9D,CACF,CAMC,GACA,CAACyB,EAAiB1+B,EAAU+/B,EAA2BvE,EAAUwE,EAAcjF,EAAYsF,IAE9F,MAAM,QAAE0B,IAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAShO,EACTiO,WArF0B,MAwFtBC,GAAsBjhC,EAAAA,EAAAA,KAAY,KACtC6+B,EAA0B+B,EAAAA,GAAAA,UAC1B7B,GAAiB,GAChB,CAACA,EAAiBF,IAEfqC,GAA0BlhC,EAAAA,EAAAA,KAAY,KACtCg/B,EAAoB18B,QACtB08B,EAAoB18B,SAAU,EAGhC2+B,GAAqB,GACpB,CAACA,IAEEjF,GAAkBmF,EAAAA,EAAAA,IAAsBpjC,IACxCihC,EAAoB18B,QACtB08B,EAAoB18B,SAAU,EAGhCg4B,EAAS,CAAEn7B,GAAIpB,EAAQg+B,sBAAsB,GAAO,GACnD,CAACzB,GA1GsB,KA0GU,GAE9B8G,GAAkBphC,EAAAA,EAAAA,KAAa4O,IACnC,MAAM4S,EAAO5S,EAAE6S,cAAc3S,wBACvB3B,EAAIyB,EAAEG,QAAUyS,EAAK3S,KACrBzB,EAAIwB,EAAE8S,QAAUF,EAAKG,IACvBxU,EAAIqU,EAAK/U,OAASW,EAAIoU,EAAKpU,IAC/B4xB,EAAoB18B,SAAU,EAAI,GACjC,IA4BH,OACEvB,EAAAA,GAAAA,cAACulB,EAAAA,EAAc,CACb9mB,WAAWwB,EAAAA,EAAAA,GAAe,0BAA2B29B,GAAoB,oBACzEn5B,IAAKutB,EACLxM,MAAOT,EACPub,aAAa,oCACbC,iBAAkB3B,EAAAA,IAClB4B,yBAAuB,EACvBC,UAAWpC,EAAcE,EACzBja,WAAYU,EACZ0b,YAAaL,GAEZjC,GACCp+B,EAAAA,GAAAA,cAACw8B,EAAO,CACNn8B,IAAI,UACJo8B,gBAAiBA,EACjBv8B,QAASggC,EACT5G,YAAa6G,IAGhBpb,GAAa1jB,OA9ClB,WACE,MAAMs/B,EAAiB7H,EAAYjU,QAAQE,EAAa,IAElD6b,GAAcC,EAAAA,EAAAA,IAAoB3C,IAAqB,EAE7D,OAAOnZ,EAAarlB,KAAI,CAACtB,EAAIqB,KAC3B,MAAM+1B,EAAWmL,EAAiBlhC,EAAImhC,EAChCvH,EAAYkF,GAAiBoC,EAAiBlhC,GAAK6+B,EAAAA,IAEzD,OACEt+B,EAAAA,GAAAA,cAACi5B,EAAI,CACH54B,IAAKjC,EACL0iC,cAAetL,EAAW/1B,GAAIshC,EAAAA,EAAAA,IAAY3iC,GAC1CpB,OAAQoB,EACRo3B,SAAUA,EACV0D,SAAUA,EACVE,cAAesF,EAAiBtgC,GAChC+6B,UAAWsF,EAAcrgC,GACzBi7B,UAAWA,EACXphB,oBAAqB6nB,EACrBxG,YAAa2B,GACb,GAGR,CAuBM+F,GACEjc,IAAgBA,EAAY1jB,OAE5BrB,EAAAA,GAAAA,cAAC+7B,EAAW,CACV7C,SAAUA,EACVwC,WAAYA,EACZM,gBAAiBA,EACjBC,uBAAwBA,IAI5Bj8B,EAAAA,GAAAA,cAAC6lB,EAAAA,EAAO,CAACxlB,IAAI,YAEA,G,sXChOrB,MCuMA,GAAexD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUC,SAAQigB,QAAO5X,iBACxB,MAAMpI,GAAOC,EAAAA,EAAAA,IAAWH,EAAQC,GAE1Bs6B,GAAcK,EAAAA,EAAAA,IAAkB56B,EAAQC,EAAQigB,EAAMgkB,gBACtD,SAAE9J,EAAQ,iBAAEC,EAAgB,WAAEC,GAAeC,GAAe,CAAC,EAC7DC,EAAoBJ,GACrB3lB,EAAAA,EAAAA,IAAWzU,EAAQo6B,KAAaj6B,EAAAA,EAAAA,IAAWH,EAAQo6B,QAAa15B,EAC/D+5B,EAAoBF,GAAcG,EAAAA,EAAAA,IAAiBH,QAAe75B,EAClEi6B,EAAsBF,GAAqBJ,GAC7CO,EAAAA,EAAAA,IAAkB56B,EAAQC,EAAQo6B,QAClC35B,GACIm6B,cAAeC,EAAqBC,aAAcC,GAAuBP,GAAqB,CAAC,EACjGla,GAAekb,EAAAA,EAAAA,IAAkBz7B,EAAQC,EAAQigB,EAAM7e,GAAI,gBAC3Dq6B,GAAQC,EAAAA,EAAAA,IAAY37B,EAAQC,EAAQigB,EAAM7e,IAC1Cue,GAAaC,EAAAA,EAAAA,IAAiB7f,EAAQC,EAAQigB,EAAM7e,IACpDs3B,EAAiB71B,QAAQ8c,GAAYukB,yBAEnClkC,OAAQi7B,EAAenmB,SAAUomB,IAAoBnmB,EAAAA,EAAAA,IAAyBhV,IAAW,CAAC,EAElG,MAAO,CACLE,OACAq6B,cACAO,sBACAE,qBACAL,sBACAH,oBACAja,eACA6jB,WAAWC,EAAAA,EAAAA,IAAqBrkC,EAAQC,EAAQigB,EAAM7e,IACtDC,eAAgBtB,EAAOuB,SAASC,MAAMF,eACtCo6B,WACIpB,GAAcC,GAAe,CAC/ByB,2BAA2BC,EAAAA,EAAAA,IAAqBj8B,EAAQu6B,IAE1DqB,cAAetzB,GAAcpI,GAAMmB,KAAO65B,GAAiBC,IAAoBjb,EAAM7e,GACrFs3B,iBACD,GApCe54B,EAtIqBukC,EACvCpkB,QACA5X,aACArI,SACAC,OACAyG,QACA4zB,cACAqB,gBACAI,4BACA9gB,sBACAkpB,YACAzJ,sBACAG,sBACAE,qBACAR,oBACA6B,gBACA/6B,iBACA86B,YACA7b,eACAmb,QACA/C,qBAEA,MAAM,SAAE6D,EAAQ,YAAE+H,EAAW,iBAAE9H,IAAqB36B,EAAAA,EAAAA,MAE9CC,GAAOC,EAAAA,EAAAA,MAEN46B,EAAmBC,EAAiBC,IAAoB52B,EAAAA,EAAAA,MACxDm3B,EAAyBC,EAAuBC,IAA2Br3B,EAAAA,EAAAA,MAE5E,SACJuyB,EAAQ,SAAE+L,GACRtkB,EACEvL,EAAUuL,EAAMvL,cAA8BjU,IAAlBwf,EAAMvL,SAAyBzU,EAAKyU,QAEhE8vB,GAAwBviC,EAAAA,EAAAA,KAAY,KACxCo7B,IACAT,GAAiB,GAChB,CAACS,EAAuBT,IAErBsB,GAAej8B,EAAAA,EAAAA,KAAY,KAC/BqiC,EAAY,CAAEtkC,OAAQC,EAAKmB,GAAI4T,QAASiL,EAAM7e,IAAK,GAClD,CAACnB,EAAKmB,GAAIkjC,EAAarkB,EAAM7e,MAE1B,eAAEy8B,EAAc,IAAEp2B,IAAQq2B,EAAAA,EAAAA,GAAiB,CAC/C79B,OACAD,SACAs6B,cACAmB,QACAf,sBACAG,sBACAE,qBACAR,oBACAe,iBAAkBrb,EAClBhF,sBACAmG,SAAS,EACTd,eAEA8b,gBACA/6B,iBACA86B,cAGIsI,GAAkBxiC,EAAAA,EAAAA,KAAY,KAClCs6B,EAAS,CAAEn7B,GAAIpB,EAAQ8U,SAAUmL,EAAM7e,GAAI48B,sBAAsB,IAE7DrC,GACFa,GACF,GACC,CAACD,EAAUv8B,EAAQigB,EAAM7e,GAAIu6B,EAAea,IAEzC4B,GC5HO,SACbne,EACAhgB,EACAykC,EACAP,EACAjG,GAEA,MAAMp8B,GAAOC,EAAAA,EAAAA,KACb,OAAOK,EAAAA,EAAAA,KAAQ,KACb,MAAM,SACJo2B,EAAQ,QAAE9jB,EAAO,SAAE6vB,EAAUnjC,GAAI4T,GAC/BiL,EAEEjgB,EAASC,EAAKmB,IAEd,UACJujC,EAAS,kBACTC,EAAiB,cACjBC,EAAa,sBACbnvB,EAAqB,iBACrBovB,IACEjjC,EAAAA,EAAAA,MAEEkjC,GAAkBC,EAAAA,EAAAA,IAAkB/kC,EAAMggB,GAC1CglB,EAAkBhlC,EAAKwa,YAAarF,EAAAA,EAAAA,IAAiBnV,EAAM,gBAE3DilC,EAAqB3G,EAAAA,IAAyB,CAClDrsB,MAAO,kBACPkG,KAAM,kBACNgoB,QAASA,KACP0E,EAAiB,CAAE9kC,OAAQC,EAAKmB,GAAI0T,SAAUE,GAAU,GAItDmwB,EAAwBD,GAAsB,CAAEE,aAAa,EAAM/hC,IAAK,mBAExEgiC,EAAmBplB,EAAM+Y,cAAgB0L,EAC3C,CACAxyB,MAAOpQ,EAAK,cACZsW,KAAM,YACNgoB,QAASA,KACPyE,EAAc,CAAE7kC,SAAQgV,WAAU,QAGpCvU,EAEE6kC,EAAYL,EAAmBzM,EACjC,CACAtmB,MAAOpQ,EAAK,gBACZsW,KAAM,QACNgoB,QAASA,IAAMwE,EAAkB,CAAE5kC,SAAQgV,UAASwjB,UAAU,KAE9D,CACAtmB,MAAOpQ,EAAK,YACZsW,KAAM,MACNgoB,QAASA,IAAMwE,EAAkB,CAAE5kC,SAAQgV,UAASwjB,UAAU,UAC3D/3B,EAED8kC,EAAetlC,EAAKyU,UAAuB,IAAZA,IAAkC,IAAZA,EACvD,CACAxC,MAAOpQ,EAAK,mBACZsW,KAAM,SACNgoB,QAASA,IAAM1qB,EAAsB,CAAE1V,SAAQgV,UAASN,SAAS,KAEjE,CACAxC,MAAOpQ,EAAK,iBACZsW,KAAM,OACNgoB,QAASA,IAAM1qB,EAAsB,CAAE1V,SAAQgV,UAASN,SAAS,KAG/D8wB,EAAmBT,EAAmBR,EACxC,CACAryB,MAAOpQ,EAAK,0BACZsW,KAAM,eACNgoB,QAASA,IAAMuE,EAAU,CAAE3kC,SAAQgV,UAASuvB,UAAU,KAEtD,CACAryB,MAAOpQ,EAAK,yBACZsW,KAAM,cACNgoB,QAASA,IAAMuE,EAAU,CAAE3kC,SAAQgV,UAASuvB,UAAU,UACnD9jC,EAEDglC,EAAetB,EAAY,CAC/BjyB,MAAOpQ,EAAK,0BACZsW,KAAM,SACNstB,aAAa,EACbtF,QAASlC,QACPz9B,EAEJ,OAAO+/B,EAAAA,EAAAA,IAAQ,CACb0E,EACAC,EACAG,EACAD,EACAE,EACAC,EACAC,GACA,GACD,CAACxlB,EAAOhgB,EAAMykC,EAAW5iC,EAAMqiC,EAAWjG,GAC/C,CDyByByH,CAAuB1lB,EAAOhgB,EAAMy4B,EAAgByL,EAAWK,GACtF,OACExhC,EAAAA,GAAAA,cAACmV,EAAAA,EAAQ,CACP1W,WAAWwB,EAAAA,EAAAA,GD1IM,uBC4If,OACAoF,GAAc,WACd,uBAEFnF,QAASuhC,EACT/9B,MAAOA,EACPuR,KAAMsmB,EAAAA,GAAyB,KAAGC,EAAAA,EAAAA,IAAmBx+B,EAAQ,SAAUigB,EAAM7e,WAAQX,EACrF29B,eAAgBA,GAChB32B,IAAKA,GAELzE,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,QACbuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,YACbuB,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe,UAC7BD,EAAAA,GAAAA,cAAC6e,EAAAA,EAAS,CAAC5B,MAAOA,EAAOxe,UDzJkI,yBC0J3JuB,EAAAA,GAAAA,cAAA,MAAIyB,IAAI,OAAOhD,UAAU,aAAYgR,EAAAA,EAAAA,GAAWwN,EAAM/N,SAEvD+N,EAAMvL,SAAW1R,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,eAC/BuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,cACd8iC,GACCvhC,EAAAA,GAAAA,cAAA,KAAGvB,WAAWwB,EAAAA,EAAAA,GACZ,kBDhKkF,0BCqKrFq3B,GACCt3B,EAAAA,GAAAA,cAACsf,EAAAA,EAAe,CACdxa,QAASwyB,EACT/X,eAAgBwZ,KAItB/4B,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,YACZo8B,IACD76B,EAAAA,GAAAA,cAACu1B,EAAAA,EAAK,CACJt4B,KAAMA,EACNu4B,SAAUA,EACV9jB,QAASA,EACTuL,MAAOA,EACPyY,eAAgBA,MAKrB0E,GACCp6B,EAAAA,GAAAA,cAAC4iC,EAAAA,EAAa,CACZnsB,OAAQkjB,EACRjjB,QAASmjB,EACTljB,oBAAqB2jB,EACrBuI,sBAAoB,EACpBC,eAAgB5H,EAChBz6B,KAAM3B,EAAK,+BACXikC,aAAcjkC,EAAK,YAGd,K,qEEnMf,SAAgB,KAAO,uBAAuB,cAAc,uBAAuB,WAAa,uBAAuB,QAAU,uBAAuB,MAAQ,uBAAuB,YAAc,uBAAuB,SAAS,uBAAuB,MAAQ,uBAAuB,WAAW,uBAAuB,QAAU,wBC0BjUkkC,EAAY,EAAItmB,EAAAA,GAwCtB,GAAe7f,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,GAAUC,aAClD,MAAMC,GAAOC,EAAAA,EAAAA,IAAWH,EAAQC,GAC1BimC,EAAkBhmC,IAASA,EAAKwa,YAAarF,EAAAA,EAAAA,IAAiBnV,EAAM,iBAE1E,MAAO,CACL4+B,eAAeC,EAAAA,EAAAA,IAAoB/+B,EAAQ,MAC3CkmC,kBACD,GAPiBnmC,EAtC0BomC,EAC5ClmC,SAAQ6+B,gBAAeoH,sBAEvB,MAAM,qBAAEE,IAAyBtkC,EAAAA,EAAAA,MAE3BC,GAAOC,EAAAA,EAAAA,MACP,SAAE6H,IAAaC,EAAAA,EAAAA,MAEfu8B,GAAoBnkC,EAAAA,EAAAA,KAAY,KACpCkkC,EAAqB,CAAEnmC,UAAS,GAC/B,CAACA,EAAQmmC,IAEZ,OACEnjC,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,EAAAA,MACd7D,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,EAAAA,SACbg4B,GAAiB77B,EAAAA,GAAAA,cAACq8B,EAAAA,EAAuB,CAACz6B,QAASi6B,EAAep4B,KAAMu/B,KAE3EhjC,EAAAA,GAAAA,cAAA,MAAIvB,UAAWoF,EAAAA,MAAcpC,IAAI,QAAQ3C,EAAK,8BAC9CkB,EAAAA,GAAAA,cAAA,KAAGvB,WAAWwB,EAAAA,EAAAA,GAAe4D,EAAAA,YAAoBA,EAAAA,UAAkBpC,IAAI,QACpE3C,EAAK,oCAEPmkC,GACCjjC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLyP,QAASnJ,EACT01B,OAAK,EACLp8B,QAASkjC,EACT3/B,KAAK,UACL/B,MAAO5C,EAAK4C,OAEZ1B,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,EAAAA,YACb/E,EAAK,gCAIR,KCyMV,GAAejC,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAQsmC,EAAUC,KACjBA,GAAkBrM,EAAAA,EAAAA,IAAuBl6B,IAEzC,MAAMC,GAASM,EAAAA,EAAAA,IAAeP,GAAQs7B,iBAChCp7B,EAAOD,GAASE,EAAAA,EAAAA,IAAWH,EAAQC,QAAUS,GAEjDT,OAAQi7B,EACRnmB,SAAUomB,IACRnmB,EAAAA,EAAAA,IAAyBhV,IAAW,CAAC,EAEzC,MAAO,CACLE,OACA8E,aAAchF,EAAOgF,aACrB0nB,eAAgBzsB,IAAWi7B,EAAgBC,OAAkBz6B,EAC9D,GAfeX,EA9M0BymC,EAC5CtmC,OACAwsB,iBACAhT,SACA8mB,WACAx7B,eACAyhC,gBACA7sB,0BAEA,MAAM,gBACJqnB,EAAe,iBAAEyF,EAAgB,WAAEhK,IACjC56B,EAAAA,EAAAA,MAGE4F,GAAM1D,EAAAA,EAAAA,IAAuB,MAG7BixB,GAAejxB,EAAAA,EAAAA,IAAuB,MAEtC2iC,GAAsB3iC,EAAAA,EAAAA,IAAuB,OAC7C,SAAE6F,IAAaC,EAAAA,EAAAA,OAErB/G,EAAAA,EAAAA,KAAU,KACJiC,GAAgB9E,IAASA,EAAKigB,QAChCuc,EAAW,CAAEz8B,OAAQC,EAAKmB,IAC5B,GACC,CAACnB,EAAM8E,EAAc03B,IAExB,MAAOkK,EAAYC,IAAiB58B,EAAAA,EAAAA,KAAS,GACvClI,GAAOC,EAAAA,EAAAA,KAEP8kC,GAAc5kC,EAAAA,EAAAA,KAAY,KAC9B++B,GAAiB,GAChB,CAACA,IAEE8F,GAAuB7kC,EAAAA,EAAAA,KAAY,KAClChC,GACLwmC,EAAiB,CAAErlC,GAAInB,EAAKmB,GAAI48B,sBAAsB,GAAO,GAC5D,CAAC/9B,EAAMwmC,KAEJ,QAAE3D,IAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAShO,EACTiO,WA5C0B,OA+C5B8D,EAAAA,EAAAA,IAAeL,EAAqB5D,GAAS,EAAGhnB,qBAC9C8qB,GAAe9qB,EAAe,IAGhC,MAAMggB,GAAa15B,EAAAA,EAAAA,KAAQ,IAClBnC,GAAMigB,QACT8mB,EAAAA,EAAAA,IAAiB3kC,OAAOC,OAAOrC,EAAKigB,QAASjgB,EAAKgnC,uBAAuBvkC,KAAI,EAAGtB,QAASA,IACzF,IACH,CAACnB,KAEE,cAAEwhC,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAiB7F,IAEtD/T,EAAaC,IAAWC,EAAAA,EAAAA,IAAkB,KAC1ChoB,GAAS8E,GACd03B,EAAW,CAAEz8B,OAAQC,EAAKmB,IAAK,GAC9B06B,GAAa77B,GAAMinC,aAAepL,EAAWz3B,QAAUpE,EAAKinC,YAAaC,EAAAA,KAEtEC,GAAkBrjC,EAAAA,EAAAA,KAAO,GACzBuf,EAAY7J,IAAW8mB,EACvB8G,GAAgB1jC,EAAAA,EAAAA,GAAY2f,GAE9B+jB,IAAkB/jB,IACpB8jB,EAAgB7iC,SAAU,IAG5B+iC,EAAAA,EAAAA,GAAe,CACbvmC,SAAUuiB,EACVikB,OAAQV,KAGV/jC,EAAAA,EAAAA,KAAU,IAAOwgB,GAAYkkB,EAAAA,EAAAA,GAAsBX,QAAepmC,GAAY,CAAComC,EAAavjB,KAE5FxgB,EAAAA,EAAAA,KAAU,KACR,GAAIukC,IAAkB/jB,EAAW,CAC/B,MAAMmkB,GAA6BC,EAAAA,EAAAA,OACnCC,EAAAA,EAAAA,GAAqBlgC,EAAIlD,SAAU,KACjCkjC,GAA4B,IAG1BnkB,GACF8jB,EAAgB7iC,SAAU,EAC1BkD,EAAIlD,QAASmC,MAAMkhC,UAAY,SAE/BR,EAAgB7iC,SAAU,EAC1BkD,EAAIlD,QAASmC,MAAMkhC,UAAY,GAEnC,IACC,CAACtkB,EAAW+jB,KAEfvkC,EAAAA,EAAAA,KAAU,KACR,GAAK4iB,EAAAA,GAIL,OAAOhU,EAAAA,EAAAA,IAAcjK,EAAIlD,QAAU,CACjC8pB,wBAAyB,aACzBC,QAAUA,CAACzd,EAAG0d,IAGRA,KAFmBzsB,EAAK4C,MAAQ8pB,EAAAA,GAAAA,KAAsBA,EAAAA,GAAAA,SAGxDwS,KACO,IAKX,GACD,CAACA,EAAiBl/B,EAAK4C,QAmB1B,MAAM2f,QAA6B5jB,IAAjBR,GAAMigB,OAExB,OACEld,EAAAA,GAAAA,cAAA,OACEyE,IAAKA,EACLhG,WAAWwB,EAAAA,EAAAA,GCjMM,uBDmMf0jC,GCnMoL,uBDoMpL7kC,EAAK4C,OCpMuC,wBDsM9CmjC,gBAAkBpuB,OAA+BhZ,EAAtBkZ,GAE3B3W,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,eACbuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLkD,KAAK,UACLuM,MAAM,cACN9P,QAAS2jC,EACT3zB,UAAWpR,EAAK,UAEhBkB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,gBAGdxB,GACC+C,EAAAA,GAAAA,cAACqd,EAAAA,EAAa,CACZG,UAAQ,EACR/e,UCtNoS,uBDuNpSzB,OAAQC,EAAKmB,GACb8B,QAAS4jC,IAIZ7mC,GAEG+C,EAAAA,GAAAA,cAAC8kC,EAAAA,EAAa,CACZ9nC,OAAQC,EAAKmB,GACb0T,SAAUsB,EAAAA,GACV+kB,gBAAgB,SAChB4M,kBAAkB,EAClBC,kBAAgB,EAChBp+B,SAAUA,EACV48B,cAAeA,KAKtBvmC,GAAQ+C,EAAAA,GAAAA,cAACxB,EAAAA,EAAgB,CAACxB,OAAQC,EAAKmB,GAAIM,iBAAiB,EAAOD,UC1OiD,yBD4OrHuB,EAAAA,GAAAA,cAAA,OAAKvB,UC5O+I,yBD8OpJuB,EAAAA,GAAAA,cAACulB,EAAAA,EAAc,CACb9mB,UAAU,0BACVgG,IAAKutB,EACLxM,MAAOT,EACPwb,iBAAkB4D,EAAAA,IAClB3D,yBAAuB,EACvBC,WAAY3H,GAAYz3B,QAAU,GAAK4jC,EAAAA,IACvC3gB,WAAYU,EACZkgB,cAAeC,EAAAA,IACfC,eAAgBplC,EAAAA,GAAAA,cAAA,OAAKyE,IAAKi/B,EAAqBjlC,UCvP2N,0BDyPzQoB,QAAQklB,GAAa1jB,SA9E5B,WACE,MAAMs/B,EAAiB7H,EAAYjU,QAAQE,EAAa,IAExD,OAAOA,GAAarlB,KAAI,CAACtB,EAAIqB,IAC3BO,EAAAA,GAAAA,cAACqhC,EAAK,CACJhhC,IAAKjC,EACLpB,OAAQC,EAAMmB,GACd6e,MAAOhgB,EAAMigB,OAAQ9e,GACrBsF,MAAQ,SAAQi9B,EAAiBlhC,GAAKwlC,EAAAA,SACtC5/B,WAAYokB,IAAmBrrB,EAC/B6Z,oBAAqB6nB,EACrB1G,cAAesF,EAAiBtgC,GAChC+6B,UAAWsF,EAAcrgC,MAG/B,CAgEQinC,GAEDhkB,KAAc0D,GAAa1jB,QAC1BrB,EAAAA,GAAAA,cAAC6lB,EAAAA,EAAO,CAACxlB,IAAI,cAGfghB,IAAqC,IAAxB0D,GAAa1jB,QAAgB0jB,EAAY,KAAOugB,EAAAA,KAC7DtlC,EAAAA,GAAAA,cAACkjC,EAAU,CAAClmC,OAAQC,EAAKmB,KAEvB,I,yDElQH,IAAKmnC,EAML,SAASC,EAAgD/G,GAC9D,OAAOr/B,EAAAA,EAAAA,KAAQ,KACb,MAAMqmC,EAAapmC,OAAOC,OAAOm/B,GAC3BiH,EAAaD,EAAWlmC,QAAQomC,GAASA,EAAO,IAAGtkC,OACnDukC,EAAeH,EAAWlmC,QAAQomC,GAASA,EAAO,IAAGtkC,OAE3D,OAAQrE,IACN,MAAMm8B,EAAYsF,EAAczhC,GAChC,OAAkB,IAAdm8B,EACKoM,EAAmBM,KAI1B1M,IAAc2M,KACX3M,KAAc,KACbuM,GAAcE,GAAgBzM,EAAY,GAC1CyM,EAAeF,GAAcvM,EAAY,EAEtCoM,EAAmBQ,QAGrBR,EAAmBS,IAAI,CAC/B,GACA,CAACvH,GACN,EA1BC,SAJW8G,GAAAA,EAAAA,EAAkB,eAAlBA,EAAAA,EAAkB,qBAAlBA,EAAAA,EAAkB,eAI7B,CAJWA,IAAAA,EAAkB,I,0OCD9B,QAA4F,uBAA5F,EAAiT,uBAAjT,EAAyc,uBAAzc,EAAwe,uBC8BleU,EAAsBrG,OAAOljB,EAAAA,IAkInC,GAAe7f,EAAAA,EAAAA,KA/H4BqpC,EACzCjpC,OACAkpC,oBACAluB,0BAEA,MAAM,SAAEshB,IAAa16B,EAAAA,EAAAA,MAGfunC,GAAiBrlC,EAAAA,EAAAA,IAAuB,MAExCslC,GAAgBtlC,EAAAA,EAAAA,IAAuB,MAEvCjC,GAAOC,EAAAA,EAAAA,KAEPu4B,EAAc6O,KAEbG,KAAoBC,IAAennC,EAAAA,EAAAA,KAAQ,IAC3CnC,EAAKigB,QAIH8mB,EAAAA,EAAAA,IAAiB3kC,OAAOC,OAAOrC,EAAKigB,aAASzf,GAAW,GAAMgtB,MAAM,EAvB5D,GAoBN,IAIR,CAACxtB,EAAKigB,UAEFspB,EAAkBC,IAAuBz/B,EAAAA,EAAAA,KAAS,IAClD0/B,EAAkBC,IAAuB3/B,EAAAA,EAAAA,SAA6BvJ,GAE7E,SAASgkC,EAAgB5zB,GACa,IAAhCy4B,EAAgBtQ,cACpBnoB,EAAEM,kBACFN,EAAEmV,iBACFuW,EAAS,CACPn7B,GAAInB,EAAKmB,GACT0T,SAAUw0B,EAAgBloC,GAC1B48B,sBAAsB,EACtB4L,mBAAmBC,EAAAA,EAAAA,QAEvB,CAkBA,OAhBAx7B,EAAAA,EAAAA,KAAgB,KACd,MAAMy7B,EAAqBV,EAAe7kC,QACpCwlC,EAAoBV,EAAc9kC,QACxC,IAAKulC,IAAuBC,EAAmB,OAE/C,MAAMC,EAAmBF,EAAmBG,YACtCC,EAAkBH,EAAkBE,YAEtC/9B,KAAKi+B,IAAIH,EAAmBE,GAAmBjB,EACjDU,EAAoBz9B,KAAKiD,IAAI66B,EAAkBE,IAE/CP,OAAoBlpC,GAEtBgpC,EAAoBO,EAAmBE,EAAgB,GACtD,CAACZ,EAAiBhP,IAGnBt3B,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GD1FM,uBC4FfumC,GD5FmxB,uBC6FnxBE,GD7Fw2B,wBC+F12BjlC,IAAK3C,EAAK4C,MAAQ,WAAQjE,EAC1BiG,MAAOgjC,EAAoB,wBAAuBA,WAAuBjpC,GAExE6oC,GACCtmC,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,GACd7D,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GDrG0P,uBCuGnQqmC,EAAgBtQ,aAAenyB,GAEjCY,IAAK4hC,EACLzU,YAAalP,EAAAA,QAAejlB,EAAYgkC,EACxCvhC,QAASwiB,EAAAA,GAAe+e,OAAkBhkC,GAE1CuC,EAAAA,GAAAA,cAAC6e,EAAAA,EAAS,CACR5B,MAAOqpB,EACPruB,oBAAqBA,IAEvBjY,EAAAA,GAAAA,cAAA,OAAKvB,UDjHsf,yBCiH5dgR,EAAAA,EAAAA,GAAW62B,EAAgBp3B,SACxDw3B,GAAoBF,GACpBxmC,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,GACd7D,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,MAKtB7D,EAAAA,GAAAA,cAAA,OAAKvB,UDzH2pB,wBC0H7pB8nC,EAAY7mC,KAAKud,GAChBjd,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GD5H6K,uBC6HlKgd,EAAM+Y,aAAenyB,GAE3CxD,IAAK4c,EAAM7e,IAEX4B,EAAAA,GAAAA,cAAC6e,EAAAA,EAAS,CACR5B,MAAOA,EACPhF,oBAAqBA,IAEvBjY,EAAAA,GAAAA,cAAA,QAAMvB,UDrIukB,yBCqIliBgR,EAAAA,EAAAA,GAAWwN,EAAM/N,YAKlElP,EAAAA,GAAAA,cAAA,OAAKvB,UD1I6rB,2BC6IpsB6nC,GAAmBtmC,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GAAe4D,ED7ImE,yBC6IhC/E,EAAK,YAC5FkB,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GD/IyW,uBC+ItUqmC,GAAiBtQ,aAAenyB,GAC9EY,IAAK2hC,EACLxU,YAAalP,EAAAA,QAAejlB,EAAYgkC,EACxCvhC,QAASwiB,EAAAA,GAAe+e,OAAkBhkC,GAEzC65B,GACCoP,IAAqBF,GACrBxmC,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,GACd7D,EAAAA,GAAAA,cAAA,OAAKvB,UAAWoF,MAKlB,I,eC3HK,SAASi3B,GAAiB,KACvC79B,EAAI,YACJq6B,EAAW,OACXt6B,EAAM,aACNsgB,EAAY,MACZmb,EAAK,oBACLf,EAAmB,oBACnBG,EAAmB,iBACnBS,EAAgB,kBAChBf,EAAiB,mBACjBQ,EAAkB,oBAClB9f,EAAmB,cACnBmhB,EAAa,UACbD,EAAS,eACT96B,EAAc,QACd+f,IAmBA,MAAMtf,GAAOC,EAAAA,EAAAA,KAEP0F,GAAM1D,EAAAA,EAAAA,IAAuB,MAE7BqmC,EAAW9P,IAAe+P,EAAAA,EAAAA,IAAgB/P,IAEhDgQ,EAAAA,EAAAA,GAAiBtqC,EAAQoqC,EAAW9P,EAAYF,sBAAmB35B,EAAWi6B,GAE9E,MAAM6P,EAAiBjQ,KAAgBkQ,EAAAA,EAAAA,IAAkBlQ,IACrD9d,EAAAA,EAAAA,IAA4B8d,QAC5B75B,EACEmiB,GAAetd,EAAAA,EAAAA,GAASg1B,GAAcnwB,EAAAA,EAAAA,IAAoBmwB,EAAa,cAAW75B,GAClFgqC,EAAe5nC,QAAQy3B,IAAeoQ,EAAAA,EAAAA,IAAqBpQ,IAE3DqQ,GAAoBvoC,EAAAA,EAAAA,KAAQ,KAChC,IAAKy4B,EACH,OAIF,MAAMn6B,GAAYuD,EAAAA,EAAAA,MAAYtD,MAAMC,KACpC,OAAOi6B,EAAoBn4B,KAAKiT,GAAWjV,EAAUiV,KAASpT,OAAOM,QAAQ,GAC5E,CAACg4B,IAgBJ,SAAS+P,IACP,GAAItqB,GAAgBga,GAAeha,EAAa3E,UAA+B,IAAnB2e,EAAYpyB,KACtE,OAAOlF,EAAAA,GAAAA,cAAC8e,EAAAA,EAAY,CAACxB,aAAcA,IAGrC,GAAImb,GAAOh4B,KAAKY,OACd,OACErB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,eAAegD,IAAK3C,EAAK4C,MAAQ,OAAS,OACrD1B,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,SAASK,EAAK,WAC7B01B,EAAAA,EAAAA,GAAuBiE,EAAMh4B,KAAMg4B,EAAMnE,cAAU72B,OAAWA,OAAWA,OAAWA,GAAW,IAKtG,IAAK65B,EACH,OAGF,GAAI8P,EAAU,CACZ,MAAM5yB,EAASvX,KAASiV,EAAAA,EAAAA,IAAcjV,IAASq6B,EAAYH,WAAaG,EAAYt6B,QAEpF,OACEgD,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,uCAAuCgD,IAAK3C,EAAK4C,MAAQ,OAAS,QAC5EmmC,EAAAA,EAAAA,GACC/oC,EACAw4B,EACC9iB,OAAwC/W,EAA/B85B,EACV/iB,EAASvX,OAAOQ,EAChBkqC,EACAjQ,EACAK,EACAO,EACA,CAAEwP,YAAY,IAItB,CAEA,MAAMC,GAAaC,EAAAA,EAAAA,IAAqBlpC,EAAM9B,EAAQu6B,GAEtD,OACEv3B,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,uCAAuCgD,IAAK3C,EAAK4C,MAAQ,OAAS,OAC5EqmC,GACC/nC,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,gBAAegR,EAAAA,EAAAA,GAAWs4B,IAC1C/nC,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,SAAQ,MAkDpC,SACEK,EAAcgG,EAAqBmT,EAAiCgwB,EAAkBR,GAEtF,MAAMS,EACJloC,EAAAA,GAAAA,cAACmoC,EAAAA,EAAc,CACbrpC,KAAMA,EACNgG,QAASA,EACT2vB,QAAS50B,QAAQooC,GACjB1rB,8BAA+BtE,IAInC,IAAKgwB,EACH,OAAOC,EAGT,MAAME,GAAYroB,EAAAA,EAAAA,IAAoBjb,GAEtC,OACE9E,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,iBACduB,EAAAA,GAAAA,cAAA,OACE4D,IAAKqkC,EACL7sB,IAAI,GACJ3c,WACEwB,EAAAA,EAAAA,GAAe,uBAAwBwnC,GAAgB,QAASW,GAAa,4BAGhFvoB,EAAAA,EAAAA,IAAgB/a,IAAY9E,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,cACzCypC,EAGP,CA9ESG,CAAcvpC,EAAMw4B,EAAarf,EAAqB2H,GAAgB2nB,EAAgBE,GAG7F,CAsCA,OAnCAp8B,EAAAA,EAAAA,KAAgB,KACd,MAAM8f,EAAU1mB,EAAIlD,QAEpB,GAAuB,IAAnBlD,GAAyB8sB,EAA7B,CAKA,GAAIiO,IAAkBmM,EAAAA,EAAAA,QACpBpa,EAAQznB,MAAM4kC,QAAU,KAExBC,EAAAA,EAAAA,KAAQ,KACNpd,EAAQqd,UAAUhlC,IAAI,mBACtB2nB,EAAQznB,MAAM4kC,QAAU,GAAG,QAExB,IAAIlP,IAAkBmM,EAAAA,EAAAA,KAQ3B,OAPApa,EAAQznB,MAAMkhC,UAAa,mBAAkBzL,EAAYmF,EAAAA,aAEzDiK,EAAAA,EAAAA,KAAQ,KACNpd,EAAQqd,UAAUhlC,IAAI,qBACtB2nB,EAAQznB,MAAMkhC,UAAY,EAAE,GAIhC,CAEApgB,YAAW,MACT+jB,EAAAA,EAAAA,KAAQ,KACNpd,EAAQqd,UAAUC,OAAO,kBAAmB,qBAC5Ctd,EAAQznB,MAAM4kC,QAAU,GACxBnd,EAAQznB,MAAMkhC,UAAY,EAAE,GAC5B,GA/JmB,IAgKC8D,EAAAA,IA3BxB,CA2B4C,GAC3C,CAACrqC,EAAgB86B,EAAWC,IAExB,CACLyB,eAxGF,WACE,OAAI59B,GAAMwU,UAAY2M,EAElBpe,EAAAA,GAAAA,cAACkmC,EAAoB,CACnBjpC,KAAMA,EACNkpC,kBAAmByB,EACnB3vB,oBAAqBA,IAKpB2vB,GACT,EA6FEnjC,MAEJ,C,kFClMe,SAASk6B,EAAiB7F,GACvC,MAAM6P,GAAYvpC,EAAAA,EAAAA,KAAQ,KACxB,GAAK05B,EAIL,OAAOA,EAAW8P,QAAO,CAAC3S,EAAK73B,EAAIqB,KACjCw2B,EAAI73B,GAAMqB,EACHw2B,IACN,CAAC,EAA4B,GAC/B,CAAC6C,IAEE+P,GAAgBloC,EAAAA,EAAAA,GAAYgoC,GAE5BlK,GAAgBr/B,EAAAA,EAAAA,KAAQ,IACvBupC,GAAcE,GAIZC,EAAAA,EAAAA,IAAUH,GAAW,CAACI,EAAO3qC,SACLX,IAAtBorC,EAAczqC,GAAoB2qC,EAAQF,EAAczqC,IAAM,MAJ9D,CAAC,GAMT,CAACuqC,EAAWE,IAIf,MAAO,CACLpK,gBACAC,kBAJuB8G,EAAAA,EAAAA,GAAqB/G,GAMhD,C,wEC/Be,SAASuK,EAAsCC,GAC5D,MAAMroC,GAAcC,EAAAA,EAAAA,KACdqoC,GAAyCnoC,EAAAA,EAAAA,IAAOkoC,GAChDE,GAAuBxoC,EAAAA,EAAAA,GAAYsoC,GAWzC,OAJyB,IAArBA,GAA8BE,IAAyBF,IACzDC,EAAuC3nC,SAAU,GAG5C,CAAE2nC,yCAAwCE,gCATjD,WACEF,EAAuC3nC,QAAU1B,QAAQopC,GACzDroC,GACF,EAOF,C,+CCVO,SAASyoC,EACdvqC,EAAcgG,EAAqBjH,EAAoCH,GAEvE,MAAM,SAAEy5B,GAAaryB,EACrB,IAAKqyB,EACH,OAGF,MAAM5e,GAAShH,EAAAA,EAAAA,IAAS4lB,GAAYz5B,EAAUy5B,GAAYt5B,EAAUs5B,GAEpE,IAAI4Q,GAAauB,EAAAA,EAAAA,IAAexqC,EAAMyZ,GAEtC,MAAMtb,EAAOY,EAAUiH,EAAQ9H,QAS/B,OARIC,KACEsU,EAAAA,EAAAA,IAAS4lB,IAAc5e,EAAmBxF,OAC5Cg1B,EAAc,GAAEjpC,EAAK,iBAAgBoY,EAAAA,EAAAA,GAAapY,EAAM7B,MAC/CssC,EAAAA,EAAAA,IAAYtsC,KACrB8qC,GAAe,OAAK7wB,EAAAA,EAAAA,GAAapY,EAAM7B,OAIpC8qC,CACT,C,mLCxBA,MAQA,GAAelrC,EAAAA,EAAAA,KARiC8E,IAC9C,MAAM,OAAE8U,GAAW9U,EACb6nC,GAAsBnU,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,uBAAwB7e,GAGnF,OAAO+yB,EAAsBxpC,EAAAA,GAAAA,cAACwpC,EAAwB7nC,QAAYlE,CAAS,I,eCsD7E,MAuQA,GAAeZ,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GACCC,SAAQ8U,WAAUqmB,kBAAiBvxB,eAEnC,MAAM3J,GAAOC,EAAAA,EAAAA,IAAWH,EAAQC,GAC1BkZ,EAAYrW,QAAQ5C,IAAQiV,EAAAA,EAAAA,IAAcjV,IAEhD,IAAKA,GAAQA,EAAK4W,eAAgB41B,EAAAA,EAAAA,IAAqB1sC,GACrD,MAAO,CACL2sC,QAAQ,GAIZ,MAAMC,GAAMC,EAAAA,EAAAA,IAAc7sC,EAAQC,GAC5ByY,GAAiBC,EAAAA,EAAAA,IAAqB3Y,EAAQC,GAC9C6sC,EAAmC,WAApB1R,GAAgCrmB,IAAasB,EAAAA,GAC5D02B,EAAyC,WAApB3R,GAAgCrmB,IAAasB,EAAAA,GAClE22B,GAAqBC,EAAAA,EAAAA,IAAyBjtC,EAAQ6J,GAEtDqjC,EAAgBpqC,QAAQ8pC,IAAOO,EAAAA,EAAAA,IAAoBntC,EAAQ4sC,EAAIvrC,KAC/D+rC,GAAeF,GAAiBpqC,SAAQuqC,EAAAA,EAAAA,IAA0BrtC,EAAQC,IAC1EqtC,EAAexqC,SAClBgqC,GAAgB5sC,EAAKwU,WAAayE,IAAaI,EAAAA,EAAAA,IAAiBrZ,KAAUA,EAAKqtC,aAE5EC,EAAYV,GAAgBC,EAC5BU,EAAUC,EAAAA,KAAuBl5B,EAAAA,EAAAA,IAAStU,EAAKmB,MAAQqX,IAAmBk0B,EAC1Ee,EAAUb,IAAiBp0B,IAAmB40B,EAC9CM,EAAWd,IAAiBQ,EAC5BO,EAAoBH,EAAAA,IAAuBZ,GAAgB5sC,EAAKkB,aAChE0sC,EAAqBJ,EAAAA,IAAuBZ,IAAiB5sC,EAAKkB,eAClElB,EAAK6tC,aAAaC,YAAe9tC,EAAKwa,YAAarB,EAAAA,EAAAA,IAAiBnZ,IAO1E,MAAO,CACLysC,QAAQ,EACRxzB,YACA6zB,qBACAI,cACAF,gBACAI,eACAE,YACAC,UACAE,UACAM,kBAhBwBnB,GAAgB5sC,EAAK2V,UAAUo4B,kBAiBvDL,WACAC,oBACAC,qBACAI,oBAnB0BpB,EAAe5sC,EAAK2V,UAAUs4B,qBAAkBztC,EAoB1E0tC,iBAnBuBtrC,QAAQ5C,GAAMqtC,aAAertC,EAAKmuC,cAoBzDC,sBAnB4BxrC,QAAQ5C,GAAMqtC,aAAertC,EAAKquC,eAoB9DC,YAnBkBxuC,EAAOuB,SAASC,MAAMF,iBAAmBmtC,EAAAA,IAoB5D,GAvDe1uC,EArQ6BgoC,EAC/C9nC,SACA8U,WACA43B,SACA9iC,WACAsP,YACAi0B,cACAF,gBACAI,eACAE,YACAC,UACAE,UACAM,oBACAL,WACAC,oBACAC,qBACAI,sBACAlB,qBACA/E,mBACAD,mBACAoG,mBACAE,wBACAE,cACA/H,oBAEA,MAAM,YACJiI,EAAW,eACXC,EAAc,oBACdC,EAAmB,WACnBC,EAAU,4BACVC,EAA2B,4BAC3BC,EAA2B,iBAC3Bt5B,EAAgB,SAChB+mB,IACE16B,EAAAA,EAAAA,MAEEktC,GAAgBhrC,EAAAA,EAAAA,IAA0B,MAC1CjC,GAAOC,EAAAA,EAAAA,MACNitC,EAAYC,IAAiBjlC,EAAAA,EAAAA,KAAS,IACtCklC,EAAcC,IAAmBnlC,EAAAA,EAAAA,SAAsCvJ,GAQxE2uC,IANuBntC,EAAAA,EAAAA,KAAY,KACvCgtC,GAAc,GACd,MAAMxrB,EAAOsrB,EAAcxqC,QAASwM,wBACpCo+B,EAAgB,CAAE//B,EAAGqU,EAAK4rB,MAAOhgC,EAAGoU,EAAK6rB,QAAS,GACjD,KAE2BrtC,EAAAA,EAAAA,KAAY,KACxCgtC,GAAc,EAAM,GACnB,KAEGM,GAAuBttC,EAAAA,EAAAA,KAAY,KACvCktC,OAAgB1uC,EAAU,GACzB,IAEG+uC,GAAuBvtC,EAAAA,EAAAA,KAAY,KACvCwsC,EAAY,CAAEzuC,WACVquC,GACF74B,EAAiB,CACf1N,QAAqBhG,EAAZoX,EAAiB,sCAA8C,sCAE5E,GACC,CAACu1B,EAAazuC,EAAQquC,EAAuB74B,EAAkB0D,EAAWpX,IAEvE2tC,GAAiBxtC,EAAAA,EAAAA,KAAY,KAE7BytC,EAAAA,EAAAA,qBAA6BC,aAK5BD,EAAAA,EAAAA,qBAA6BE,SAC9BlB,EAAe,CAAEmB,QAAS,YAE1BhuC,EAAAA,EAAAA,MAAa2T,iBAAiB,CAC5B1N,QAAQ,eARZjG,EAAAA,EAAAA,MAAaiuC,aAAa,CACxBC,UAAU,sCAUd,GACC,CAACrB,IAEEsB,GAAmB/tC,EAAAA,EAAAA,KAAY,KACnC2sC,EAAW,CAAE5uC,UAAS,GACrB,CAACA,EAAQ4uC,IAENqB,GAA0BhuC,EAAAA,EAAAA,KAAY,KAC1C6sC,EAA4B,CAAEoB,OAAQC,EAAAA,GAAAA,cAAiC,GACtE,CAACrB,IAEEsB,IAAoBnuC,EAAAA,EAAAA,KAAY,KAChC+lC,EACFxB,OAIFmI,IAEI/kC,EAEkB8R,SAAS0S,cAAgC,uBACjDzI,QACH4oB,EAET3oB,uBAAsB,KACpBA,sBAAsByqB,EAAsB,IAG9C7oB,WAAW6oB,EA7Ga,KA8G1B,GACC,CAACzmC,EAAU2kC,EAAa/H,EAAemI,EAAqB3G,IAEzDsI,IAAwBruC,EAAAA,EAAAA,KAAY,KACxCs6B,EAAS,CAAEn7B,GAAIpB,EAAQ8U,SAAUsB,EAAAA,IAAiB,GACjD,CAACpW,EAAQu8B,IAMNgU,IAA0BtuC,EAAAA,EAAAA,KAAa4O,IACtC08B,GAAcxL,EAAAA,KAAUlxB,EAAE2/B,WAI/B3/B,EAAEmV,iBACFoqB,KAAmB,GAClB,CAAC7C,EAAW6C,KAMf,OAJAvO,EAAAA,EAAAA,GAAW,CACT,QAAS0O,KAITvtC,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,kBACXmI,GACA5G,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACG+kC,IAAqBsG,IAA0BhB,GAAgBc,IAC9DnrC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmD,KAAK,OACLsM,QAAM,EACNusB,OAAK,EACLp8B,QAASssC,GAER1tC,EAAKoX,EAAY,qBAAuB,qBAG5C6uB,GAAoBsG,GACnBrrC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmD,KAAK,OACLsM,QAAM,EACNusB,OAAK,EACLp8B,QAASssC,GAER1tC,EAAK,uBAGTimC,GAAoBoF,GACnBnqC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmD,KAAK,OACLsM,QAAM,EACNusB,OAAK,EACLp8B,QAASusC,GAER3tC,EAAK,aAGTimC,GAAoBkF,GACnBjqC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLmD,KAAK,OACLsM,QAAM,EACNusB,OAAK,EACLp8B,QAAS8sC,GAERluC,EAAK,eAeT0rC,GACCxqC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLyP,MAAM,cACNvM,KAAK,UAELvD,QA/EZ,WACE2rC,EAA4B,CAAEl5B,OAAQ3V,GACxC,EA8EYkT,UAAU,QAEVlQ,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,kBAKnBumC,GAAoBnlC,QAAQorC,IAC5BjrC,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACL9B,UAAU,eACVsR,OAAQg6B,EACR/5B,MAAM,cACNvM,KAAK,UACLvD,QAAS+sC,EACT/8B,UAAuBpR,EAAZoX,EAAiB,oBAA4B,mBAExDlW,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,cACbuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,SAASwsC,IAgB3BiB,GACClsC,EAAAA,GAAAA,cAACwpC,EAAmB,CAClBxsC,OAAQA,EACR8U,SAAUA,EACV2E,OAAQu1B,EACRyB,OAAQvB,EACRwB,iBAAkB9mC,IAAam+B,EAC/B7uB,UAAWA,EACXi0B,YAAaA,EACbF,cAAeA,EACfI,aAAcA,EACdE,UAAWA,EACXC,QAASA,EACTE,QAASA,EACTM,kBAAmBA,EACnBL,SAAUA,EACVC,kBAAmBA,EACnBC,mBAAoBA,EACpBI,oBAAqBA,EACrB0C,oBAAqBV,EACrBjI,iBAAkBA,EAClB4I,mBAAoBpB,EACpBqB,cAAeT,GACfU,kBAAmBR,GACnB52B,QAAS01B,EACTz1B,oBAAqB41B,IAGrB,KA+DV,SAASc,IACa30B,SAAS0S,cAAgC,oCAChDzI,OACf,C,wEChYA,MAQA,GAAe9lB,EAAAA,EAAAA,KARgC8E,IAC7C,MAAM,OAAE8U,GAAW9U,EACbosC,GAAqB1Y,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,sBAAuB7e,GAGjF,OAAOs3B,EAAqB/tC,EAAAA,GAAAA,cAAC+tC,EAAuBpsC,QAAYlE,CAAS,G,wECL3E,MAQA,GAAeZ,EAAAA,EAAAA,KAR4B8E,IACzC,MAAM,OAAE8U,GAAW9U,EACbqsC,GAAa3Y,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,kBAAmB7e,GAGrE,OAAOu3B,EAAahuC,EAAAA,GAAAA,cAACguC,EAAersC,QAAYlE,CAAS,G,uICE3D,MAmCA,GAAeZ,EAAAA,EAAAA,KAnCkBoxC,EAAGC,UAASC,YAAWC,mBACtD,MAAOC,EAAWC,EAAaC,IAAiBtrC,EAAAA,EAAAA,KAY1CxE,GAAYwB,EAAAA,EAAAA,GAChB,aACAouC,GAAa,WAGf,OACEruC,EAAAA,GAAAA,cAAA,OACEvB,UAAWA,EACX+vC,OAAQJ,EACR9U,YAAagV,EACb5N,YApBqB7yB,IACvB,MAAQ4gC,cAAeC,GAAa7gC,EAEhC6gC,GACF7gC,EAAEM,kBAGJogC,GAAe,EAcb,oBAEAvuC,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,kBACbuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAY,cAAYyvC,EAAU,QAAU,cACjDluC,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,SAAQ,iCACrB0vC,GAAanuC,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,eAAeyvC,EAAU,iBAAmB,wBAExE,ICrBH,IAAKS,GAIX,SAJWA,GAAAA,EAAa,YAAbA,EAAa,oBAAbA,EAAa,uBAIxB,CAJWA,IAAAA,EAAa,KAMzB,MAoFA,GAAe9xC,EAAAA,EAAAA,KAlFgB+xC,EAC7Bn4B,SAAQo4B,YAAWC,SAAQV,mBAG3B,MAAMW,GAAiBhuC,EAAAA,EAAAA,IAAe,MAChCiuC,GAAgBruC,EAAAA,EAAAA,GAAYkuC,IAC5B,aAAEzhC,EAAY,qBAAEjK,IAAyBoK,EAAAA,EAAAA,GAAkBkJ,IAEjE3W,EAAAA,EAAAA,KAAU,IAAO2W,GAAS+tB,EAAAA,EAAAA,GAAsBsK,QAAUrxC,GAAY,CAACgZ,EAAQq4B,IAE/E,MAAMG,GAAkBhwC,EAAAA,EAAAA,KAAYiwC,UAClC,MAAQC,aAAcC,GAAOvhC,EAC7B,IAAIwhC,EAAgB,GAEpB,KAAID,EAAGC,OAASD,EAAGC,MAAMhuC,OAAS,IAAO+tC,EAAG5pB,OAAU4pB,EAAG5pB,MAAMnkB,QAExD,GAAI+tC,EAAG5pB,OAAS4pB,EAAG5pB,MAAMnkB,OAAS,EAAG,CAC1C,MAAMiuC,QAAoBC,EAAAA,EAAAA,GAA8BH,EAAG5pB,OACvD8pB,GAAajuC,SACfguC,EAAQA,EAAMG,OAAOF,GAEzB,OANED,EAAQA,EAAMG,OAAOvmC,MAAMwmC,KAAKL,EAAGC,QAQrCP,IACAV,EAAaiB,GAAOR,QAAoBpxC,EAAU,GACjD,CAAC2wC,EAAcU,EAAQD,IAEpBa,GAAuBzwC,EAAAA,EAAAA,KAAa4O,IACxC,MAAQshC,aAAcC,GAAOvhC,EAEzBuhC,EAAGC,OAASD,EAAGC,MAAMhuC,OAAS,IAChCytC,IACAV,EAAanlC,MAAMwmC,KAAKL,EAAGC,QAAQ,GACrC,GACC,CAACjB,EAAcU,IAEZzO,GAAkBphC,EAAAA,EAAAA,KAAa4O,IACnCA,EAAEM,kBAEF,MAAQoV,OAAQosB,EAAYlB,cAAeC,GAAa7gC,EAGnD8hC,EAA8BpmC,QAAQ,4BAA8BmlC,IACvEK,EAAextC,QAAU2C,OAAOsgB,YAAW,KACzCsqB,GAAQ,GA9Cc,KAgD1B,GACC,CAACA,IAQJ,IAAK1hC,EACH,OAGF,MAAMwiC,EAAoBf,GAAaG,EAEjCvwC,GAAYwB,EAAAA,EAAAA,GAChB,WACAkD,GAGF,OACEnD,EAAAA,GAAAA,cAAC6vC,EAAAA,EAAM,CAACC,YAAY,0BAClB9vC,EAAAA,GAAAA,cAAA,OACEvB,UAAWA,EACXiiC,YAAaL,EACb0P,WAtBiBC,KACjBjB,EAAextC,SACjB2C,OAAO+rC,aAAalB,EAAextC,QACrC,EAoBIitC,OAAQM,EACR5uC,QAAS4uC,GAET9uC,EAAAA,GAAAA,cAACiuC,EAAU,CAACG,aAAca,EAAiBd,WAAYyB,IACtDA,GAAqB5vC,EAAAA,GAAAA,cAACiuC,EAAU,CAACG,aAAcsB,EAAsBxB,SAAO,KAExE,G,wECvGb,MAQA,GAAerxC,EAAAA,EAAAA,KAR0B8E,IACvC,MAAM,OAAE8U,GAAW9U,EACbuuC,GAAe7a,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,gBAAiB7e,GAGrE,OAAOy5B,EAAelwC,EAAAA,GAAAA,cAACkwC,EAAiBvuC,QAAYlE,CAAS,G,wqBCJhD,MAAM0yC,EAKnBC,YACEC,EACQC,EACA7iB,GACR,KAFQ6iB,UAAAA,EAAsB,KACtB7iB,QAAAA,EAA6B8iB,EAAA,qBAAAA,EAAA,kBALnB,GAOlBC,KAAKhqC,MAAQkS,SAAS+3B,cAAc,SACpCD,KAAKhqC,MAAM5C,IAAMysC,EACjBG,KAAKhqC,MAAMuiB,yBAA0B,EACrCynB,KAAKhqC,MAAMsiB,OAAQ,EACnB0nB,KAAKhqC,MAAM9C,MAAMi8B,SAAW,WAC5B6Q,KAAKhqC,MAAMkqC,OAENF,KAAK/iB,QAAQkjB,SAChBH,KAAKhqC,MAAMwiB,MAAO,GAGpBwnB,KAAKF,UAAUM,YAAYJ,KAAKhqC,OAChCgqC,KAAKK,4BACP,CAEOC,QACDN,KAAKxoC,WAAcwoC,KAAKhqC,QAC5BgqC,KAAKK,6BACDL,KAAKhqC,MAAMuqC,SACbC,EAAAA,EAAAA,GAASR,KAAKhqC,OAEhBgqC,KAAKxoC,WAAY,EACnB,CAEOipC,QACAT,KAAKxoC,WAAcwoC,KAAKhqC,QACxBgqC,KAAKhqC,MAAMuqC,QACdP,KAAKhqC,MAAMyqC,QAEbT,KAAKxoC,WAAY,EACnB,CAEOkpC,UACLV,KAAKS,QACLT,KAAKhqC,OAAOiiC,SACZ+H,KAAKhqC,WAAQ/I,CACf,CAEO0zC,eAAexR,GACpB6Q,KAAK/iB,QAAQkS,SAAWA,EACxB6Q,KAAKK,4BACP,CAEQA,6BACN,IAAKL,KAAKhqC,MAAO,OACjB,MAAM,KAAE/C,EAAMk8B,UAAU,EAAEvzB,EAAC,EAAEC,IAAQmkC,KAAK/iB,SACpC,MAAE/hB,EAAK,OAAEC,GAAW6kC,KAAKF,UAAUviC,wBACzCyiC,KAAKhqC,MAAM9C,MAAMoK,KAAQ,GAAE5E,KAAK3I,MAAM6L,EAAIV,OAC1C8kC,KAAKhqC,MAAM9C,MAAMkd,IAAO,GAAE1X,KAAK3I,MAAM8L,EAAIV,OACzC6kC,KAAKhqC,MAAM9C,MAAMgI,MAAS,GAAEjI,MAC5B+sC,KAAKhqC,MAAM9C,MAAMiI,OAAU,GAAElI,KAC/B,E,mEC3CF,MAAM2tC,EAAO,KAAO10B,EAAAA,G,qCCOpB,MAKM20B,EAAiB,iBAoCjBC,EAA8B,IAG9BC,EAAc,CAClB,MAAO,SAAU,QAAS,SAAU,WAAY,OAAQ,MAAO,OAAQ,YAAa,UAAW,UAAW,SAmf5G,GAAe10C,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUC,SAAQ8U,eACjB,MAAM,oBAAE0/B,GAAwBz0C,EAAOuB,SAASC,MAEhD,MAAO,CACLizC,sBACAC,aAAcz0C,GAAU8U,GAAW4/B,EAAAA,EAAAA,IAAmB30C,EAAQC,EAAQ8U,QAAYrU,EAClFk0C,oBAAoBlI,EAAAA,EAAAA,IAAqB1sC,GAC1C,GAReD,EAne4B80C,EAC9CntC,MACArG,KACApB,SACA60C,eACAC,yBACAC,kBACAh0C,WACAi0C,UACAvwB,cACAwwB,oBACAC,mBACAC,eACAC,sBACAC,sBACAC,8BACAb,eACAE,qBACAH,sBACAe,WACAC,oBACAC,SACAC,eAEA,MAAM,gBACJC,GAAe,mBACfC,GAAkB,oCAClBC,KACEh0C,EAAAA,EAAAA,MAGJ,IAAIsjB,IAAWphB,EAAAA,EAAAA,IAAuB,MAClC0D,IACF0d,GAAW1d,GAIb,MAAMquC,IAAsB/xC,EAAAA,EAAAA,IAAe,MAErCgyC,IAAWhyC,EAAAA,EAAAA,IAAuB,MAElCiyC,IAAmBjyC,EAAAA,EAAAA,IAAuB,MAE1CqtB,IAAkBrtB,EAAAA,EAAAA,IAA0B,MAE5CkyC,IAAoBlyC,EAAAA,EAAAA,IAA0B,MAE9CmyC,IAAuBnyC,EAAAA,EAAAA,IAAuB,MAE9CjC,IAAOC,EAAAA,EAAAA,KACPo0C,IAAuBpyC,EAAAA,EAAAA,KAAO,IAC7BqyC,GAAqBC,GAAmBC,KAAsBrwC,EAAAA,EAAAA,MAC9DswC,GAA6BC,KAAkCxsC,EAAAA,EAAAA,OAC/DysC,GAAeC,KAAoB1sC,EAAAA,EAAAA,OACnC2sC,GAAyBC,KAA8B5sC,EAAAA,EAAAA,KAAkB,IAC1E,SAAEJ,KAAaC,EAAAA,EAAAA,ODjHR,SACbmrC,EACA7vB,EACAiM,EACA6kB,EACAC,EACAW,EACA91C,GAEA,MAAQixB,SAAU8kB,IAAc5kB,EAAAA,EAAAA,GAAwB/M,GAClD4xB,GAAShzC,EAAAA,EAAAA,IAAuC,IAAIizC,KAEpDC,GAAmBh1C,EAAAA,EAAAA,KAAai1C,IACpCA,EAAInoC,SAAS3N,IACX,MAAM+1C,EAASJ,EAAOxyC,QAAQ6yC,IAAIh2C,GAC9B+1C,IACFA,EAAOjD,UACP6C,EAAOxyC,QAAQ8yC,OAAOj2C,GACxB,GACA,GACD,IAEGk2C,GAAsBr1C,EAAAA,EAAAA,KAAY,KACtC,IAAKkjB,EAAS5gB,UAAY6sB,EAAgB7sB,UAAY0xC,EAAkB1xC,QAAS,OACjF,MAAMxE,GAASkE,EAAAA,EAAAA,MACTszC,EAAoB,IAAIzxC,IAAIixC,EAAOxyC,QAAQizC,QAC3BvrC,MAAMwmC,KAAKttB,EAAS5gB,QAAQkzC,iBAA8B,kBAElE1oC,SAASof,IACrB,IAAKA,EAAQupB,QAAQC,SACnB,OAEF,MAAMv2C,EAAM,GAAEy1C,GAAY,KAAK1oB,EAAQupB,QAAQC,WAAWb,GAAW7jC,KAAK,MAAQ,KAC5EmM,EAAa+O,EAAQupB,QAAQt4B,WAEnCm4B,EAAkBF,OAAOj2C,GAEzB,MAAMw2C,GAAWC,EAAAA,EAAAA,IAAgCz4B,GACjD,IAAKw4B,EACH,OAGF,MAAME,EAAe1mB,EAAgB7sB,QAASwM,wBACxCgnC,EAAgB5pB,EAAQpd,wBACxB3B,GAAI7L,EAAAA,EAAAA,KAAOw0C,EAAcjnC,KAAOgnC,EAAahnC,MAAQgnC,EAAappC,MAAO,GACzEW,GAAI9L,EAAAA,EAAAA,KAAOw0C,EAAcn0B,IAAMk0B,EAAal0B,KAAOk0B,EAAanpC,OAAQ,GAE9E,GAAIooC,EAAOxyC,QAAQ2B,IAAI9E,GAGrB,YAFe21C,EAAOxyC,QAAQ6yC,IAAIh2C,GAC3B+yC,eAAe/kC,EAAGC,GAI3B,MAAM2oC,EAAcj4C,EAAOk4C,aAAar3C,KAAKwe,GAC7C,IAAK44B,EACH,OAEF,MAAME,EAAOF,GAAa3lB,iBAAkB8lB,EAAAA,EAAAA,IAAgCp4C,EAAQi4C,EAAY3lB,gBAE1F+lB,EA4EZ,UAAsB,YACpBJ,EAAW,gBACX5mB,EAAe,kBACf6kB,EAAiB,qBACjBC,EAAoB,SACpByB,EAAQ,YACR7E,EAAW,SACX8E,EAAQ,SACRjV,EAAQ,KACRuV,EAAI,UACJpB,IAaA,GAAIkB,EAAYK,SAAU,CACxB,MAAMC,EAASC,EAAAA,QAAAA,KACbzF,EACAoF,EAAOjC,EAAkB1xC,QAAW6sB,EAAgB7sB,aACpD9D,EACAk3C,EACAC,EACA,CACEnxC,KAAM2tC,EACNoE,OAAQ7V,EACR8V,eAAgBP,GAElBF,EAAYjmB,mBAAqB+kB,OAAYr2C,GAG/C,MAAO,CACLqzC,KAAMA,IAAMwE,EAAOxE,OACnBG,MAAOA,IAAMqE,EAAOrE,QACpBC,QAASA,IAAMoE,EAAOI,gBAAgBf,GACtCxD,eAAgBA,CAAC/kC,EAAWC,IACnBipC,EAAOK,sBAAsBhB,EAAU,CAAEvoC,IAAGC,MAGzD,CAEA,GAAI2oC,EAAYntB,QAAS,CACvB,MAAM+tB,EAAgB,IAAIzF,EAAcyE,EAAU1B,EAAqB3xC,QAAU,CAAEkC,KAAM2tC,EAAMzR,aAC/F,MAAO,CACLmR,KAAMA,IAAM8E,EAAc9E,OAC1BG,MAAOA,IAAM2E,EAAc3E,QAC3BC,QAASA,IAAM0E,EAAc1E,UAC7BC,eAAgBA,CAAC/kC,EAAWC,IAAcupC,EAAczE,eAAe,CAAE/kC,IAAGC,MAEhF,CAEA,MAAM,IAAIwpC,MAAM,gCAClB,CAvIwBC,CAAa,CAC7Bd,cACA5mB,kBACA6kB,oBACAC,uBACAyB,SAAUv2C,EACV0xC,YAAa+D,GAAYz1C,EACzBw2C,WACAM,OACAvV,SAAU,CAAEvzB,IAAGC,KACfynC,cAEFsB,EAAUtE,OAEViD,EAAOxyC,QAAQw0C,IAAI33C,EAAIg3C,EAAU,IAGnCnB,EAAiBhrC,MAAMwmC,KAAK8E,GAAmB,GAC9C,CAACrB,EAAsBY,EAAW3xB,EAAU0xB,EAAUI,EAAkBhB,EAAmB7kB,KAE9FtuB,EAAAA,EAAAA,KAAU,MACRk2C,EAAAA,EAAAA,IAAkC1B,GAE3B,MACL2B,EAAAA,EAAAA,IAAqC3B,EAAoB,IAE1D,CAACA,KAEJx0C,EAAAA,EAAAA,KAAU,KACHkyC,KAAc7vB,EAAS5gB,SAAY6sB,EAAgB7sB,SAAYxD,GAMpEwqC,EAAAA,EAAAA,KAAQ,KACN+L,GAAqB,IANrBL,EAAiBhrC,MAAMwmC,KAAKsE,EAAOxyC,QAAQizC,QAO3C,GACD,CAACxC,EAASsC,EAAqBnyB,EAAU8xB,EAAkB7lB,EAAiBrwB,KAE/Em4C,EAAAA,EAAAA,IAAsB,EAAEC,MAClBrC,IAAcqC,GAChB7B,GACF,GACC,CAACR,EAAWQ,IAEf,MAAM8B,GAA+BC,EAAAA,EAAAA,GACnC/B,EACA,CAACA,GApHe,KAsHhB,IAEFgC,EAAAA,EAAAA,GAAkBloB,EAAiBgoB,GAEnC,MAAMG,GAAkBt3C,EAAAA,EAAAA,KAAY,KAClC80C,EAAOxyC,QAAQwK,SAASooC,IACtBA,EAAOlD,OAAO,GACd,GACD,IAEGuF,GAAoBv3C,EAAAA,EAAAA,KAAY,KACpC80C,EAAOxyC,QAAQwK,SAASooC,IACtBA,EAAOrD,MAAM,GACb,GACD,IAEG2F,GAAyBx3C,EAAAA,EAAAA,KAAY,MACzCspC,EAAAA,EAAAA,IAAQiO,EAAkB,GACzB,CAACA,KAKJE,EAAAA,EAAAA,GAAkBH,EAAiBE,EACrC,CClBEE,CACE3E,EACA7vB,GACAiM,GACA6kB,GACAC,GACApB,EAAyB,kBAAer0C,EACxCM,GAGF,MAAM64C,GAAiBhwC,GAAW,IAAM,IAClCiwC,IAAoB53C,EAAAA,EAAAA,KAAY,CAAC63C,GAAW,KAChD,MAAMC,EAAW50B,GAAS5gB,QAAS2uB,QAAyB,mBACtD8mB,EAAQhE,GAAiBzxC,QACzB01C,EAAgBrX,OAAOmX,EAASrzC,MAAMiI,OAAOknB,QAAQ,KAAM,KAC3D4N,EAAYqR,EAhGoB,IAgGyC8E,GACzEM,EAAYhuC,KAAKC,IAAI6tC,EAAMG,aAAc1W,GAC/C,GAAIyW,IAAcD,EAChB,OAGF,MAAMG,EAAqBluC,KAAK3I,MAxID,GAyIA2I,KAAKmuC,IAAInuC,KAAKi+B,IAAI+P,EAAYD,KAGvDK,EAAOA,KACXP,EAASrzC,MAAMiI,OAAU,GAAEurC,MAC3BH,EAASrzC,MAAM0zC,mBAAsB,GAAEA,MACvCL,EAASvO,UAAU+O,OAAO,YAAaP,EAAMG,aAAe1W,EAAU,EAGpEqW,EAEFl0B,sBAAsB00B,GAEtBA,GACF,GACC,CAACxF,EAAwB8E,MAE5B92C,EAAAA,EAAAA,KAAU,KACHgyC,GACL+E,IAAkB,EAAM,GACvB,CAAC/E,EAAwB+E,KAE5B,MAAMW,IAAUz2C,EAAAA,EAAAA,IAAOixC,MACvB3mC,EAAAA,EAAAA,KAAgB,KACd,MAAM+a,EAAOroB,EAAWi0C,IAAY,GAEhC5rB,IAASjE,GAAS5gB,QAASk2C,YAC7Bt1B,GAAS5gB,QAASk2C,UAAYrxB,GAG5BA,IAAS2sB,GAASxxC,QAASk2C,YAC7B1E,GAASxxC,QAASk2C,UAAYrxB,GAG5BA,IAASoxB,GAAQj2C,UACnBi2C,GAAQj2C,QAAU6kB,EAElBywB,IAAmBzwB,GACrB,GACC,CAAC4rB,EAASj0C,EAAU84C,MAEL91C,EAAAA,EAAAA,IAAO/D,GACfuE,QAAUvE,EACpB,MAAM06C,IAAaz4C,EAAAA,EAAAA,KAAY,KACxBkjB,GAAS5gB,WAIVo2C,EAAAA,EAAAA,MACFnzB,WAAWkzB,GA3LM,MA+LnBE,EAAAA,EAAAA,GAAqBz1B,GAAS5gB,SAAS,GACtC,IAEGs2C,IAA2B54C,EAAAA,EAAAA,KAAY,KAC3Cq0C,KArJJ,WACE,MAAMwE,EAAY5zC,OAAO6zC,eACpBD,IAIDA,EAAUE,gBACZF,EAAUE,kBACDF,EAAUG,OACnBH,EAAUG,QAEd,CA2IIC,EAAgB,GACf,CAAC5E,KAEJ,SAAS6E,KAEP,GAAIC,EAAAA,GACF,OAAO,EAGT,MAAMN,EAAY5zC,OAAO6zC,eACzB,IAAKD,IAAcA,EAAUO,YAAclF,GAAqB5xC,QAK9D,OAJA+xC,KACIgF,EAAAA,IACF1E,IAA2B,IAEtB,EAGT,MAAM2E,EAAiBT,EAAUU,WAAW,GACtCC,EAAeF,EAAeG,WAAW5lB,OAC/C,QACEwf,KACIqG,EAAAA,EAAAA,GAAuBJ,EAAgBxG,GAAmB6G,EAAAA,OAC1DH,IACDI,EAAAA,EAAAA,GAAqBJ,KACpBF,EAAeO,gBAEnBxF,MACO,EAIX,CAEA,SAASyF,KACP,IAAKZ,KACH,OAGF,GAAIxE,GACF,OAGF,MAAM4E,EAAiBr0C,OAAO6zC,eAAgBS,WAAW,GACnDQ,EAAgBT,EAAexqC,wBAC/BkrC,EAAe92B,GAAS5gB,QAAS2uB,QAAyB,mBAAsBniB,wBAEtF,IAAI3B,EAAK4sC,EAAclrC,KAAOkrC,EAActtC,MAAQ,EAAKutC,EAAanrC,KAElE1B,EAAIklC,EACNllC,EAAIklC,EACKllC,EAAI6sC,EAAavtC,MAAQ4lC,IAClCllC,EAAI6sC,EAAavtC,MAAQ4lC,GAG3BkC,GAA+B,CAC7BpnC,IACAC,EAAG2sC,EAAcp4B,IAAMq4B,EAAar4B,MAGtC8yB,GAAiB6E,GACjBlF,IACF,CAEA,SAAS6F,KACHpG,GAAoBvxC,SACtB2C,OAAO+rC,aAAa6C,GAAoBvxC,SAG1CuxC,GAAoBvxC,QAAU2C,OAAOsgB,WAAWu0B,GAnOb,IAoOrC,EAkHAj5C,EAAAA,EAAAA,KAAU,KACJ4iB,EAAAA,IAIAyvB,GACFuF,IACF,GACC,CAAC16C,EAAQ06C,GAAYjG,EAAcU,KAEtCryC,EAAAA,EAAAA,KAAU,KACR,IACG9C,GACE+0C,IAAoB6G,EAAAA,KACpBxG,GACC1vB,EAAAA,IAAgB9b,IACjB+qC,EAEH,OAGF,MAAMwH,EAAyBtrC,IAC7B,IAAIurC,EAAAA,EAAAA,MACF,OAGF,MAAM,IAAE/4C,GAAQwN,EACV0V,EAAS1V,EAAE0V,OAEjB,IAAKA,GAAUguB,EAAY5sB,SAAStkB,GAClC,OAGF,MAAMg5C,EAAQl3B,GAAS5gB,QACjB+3C,EAAuB5gC,SAASq/B,gBAAgBwB,YAEtD,MACIl5C,EAAIi/B,WAAW,UAAazxB,EAAE2/B,UAAoB,UAARntC,KAAsBi5C,GACnD,SAAXzrC,EAAEwV,OAAoBxV,EAAEwxB,SAAWxxB,EAAEuxB,UAA+B,UAAnB7b,EAAOi2B,UAM5DH,GACG91B,IAAW81B,GACQ,UAAnB91B,EAAOi2B,SACY,aAAnBj2B,EAAOi2B,UACNj2B,EAAOk2B,kBACX,EACA7B,EAAAA,EAAAA,GAAqByB,GAAO,GAAM,GAElC,MAAMK,EAAW,IAAIC,cAAc9rC,EAAEqV,KAAMrV,GAC3CwrC,EAAMO,cAAcF,EACtB,GAKF,OAFAhhC,SAASsmB,iBAAiB,UAAWma,GAAuB,GAErD,KACLzgC,SAASwmB,oBAAoB,UAAWia,GAAuB,EAAK,CACrE,GACA,CAACn8C,EAAQ+0C,EAAiBnrC,GAAU+qC,EAAoBS,KAE3DtyC,EAAAA,EAAAA,KAAU,KACR,MAAM+5C,GAAkB5oC,EAAAA,EAAAA,KAAUpD,IAClB,QAAVA,EAAExN,MAAkB+4C,EAAAA,EAAAA,QACtBvrC,EAAEmV,iBACFJ,sBAAsB80B,IACxB,GA7Z6B,KA8ZA,GAAM,GAErC,OAAOoC,EAAAA,EAAAA,GAAyB,CAAEC,MAAOF,GAAkB,GAC1D,CAACnC,MAEJ53C,EAAAA,EAAAA,KAAU,KACR,MAAMu5C,EAAQl3B,GAAS5gB,QAEvB,SAASy4C,IACPX,EAAMY,MACR,CAMA,OAJI5H,GACFgH,EAAMra,iBAAiB,QAASgb,GAG3B,KACLX,EAAMna,oBAAoB,QAAS8a,EAAc,CAClD,GACA,CAAC3H,IAEJ,MAAM6H,IAAYC,EAAAA,EAAAA,IAAgB,IAAMt6C,QAAQ9B,GAAYi0C,MAAY,CAACj0C,EAAUi0C,IAE7EvzC,IAAYwB,EAAAA,EAAAA,GAChB,eACAi6C,IAAa,UACb7H,GAAuB,kBAGzB,OACEryC,EAAAA,GAAAA,cAAA,OAAK5B,GAAIA,EAAI8B,QAASmyC,EAAsBG,OAAoB/0C,EAAWgE,IAAK3C,GAAK4C,MAAQ,WAAQjE,GACnGuC,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GAAe,gBAAiBoxC,GAC3CqB,SAAUA,EACVxyC,QAAU4xC,GAA2BI,OAAiCz0C,EA7G5E,WACMq0C,GAA0BI,GAC9BW,GAAoC,CAAE71C,UACxC,GA4GMgD,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,0BACbuB,EAAAA,GAAAA,cAAA,OACEyE,IAAK0d,GACL/jB,GAAI2zC,GAAmB6G,EAAAA,IACvBn6C,UAAWA,GACX27C,gBAAiBtI,GAA0BI,EAC3CxuB,KAAK,UACLjiB,IAAI,OACJ0hB,SAAU,EACVjjB,QAASw3C,GACTp0B,SAhKV,SAAsBzV,GACpB,MAAM,UAAE4pC,EAAS,YAAE4C,GAAgBxsC,EAAE6S,cAKrC,GAHA6xB,EA1Sc,SA0SLkF,EAA0B,GAAKA,IAIrC/0B,EAAAA,MACI23B,IAAgBA,EAAYh5C,UAE3Bi5C,EAAAA,KAAsB7C,EAAU9yB,SAAS,kBAC1C8yB,EAAU9yB,SAAS,gBACxB,CACA,MAAMmzB,EAAY5zC,OAAO6zC,eACrBD,IACF31B,GAAS5gB,QAAS04C,OAClBnC,EAAUE,mBACVJ,EAAAA,EAAAA,GAAqBz1B,GAAS5gB,SAAU,GAE5C,CACF,EA6IU6hB,UAtMV,SAAuBvV,GAErB,MAAM,YAAE0sC,GAAgB1sC,EAElBuY,EAAO4rB,IAEb,IAAKuI,IAAgBn0B,IAASvY,EAAEuxB,SAAWvxB,EAAEwxB,SAAU,CACrD,MAAMP,EAA6B,cAAVjxB,EAAExN,IAAsB,EAAc,YAAVwN,EAAExN,KAAqB,OAAI5C,EAChF,GAAIqhC,EAIF,OAHAjxB,EAAEmV,sBAEF4vB,GAAmB,CAAE9T,oBAGzB,CAEKyb,GAAyB,UAAV1sC,EAAExN,KAAoBwN,EAAE2/B,SAahC+M,GAAyB,YAAV1sC,EAAExN,KAAsB+lB,GAASvY,EAAEuxB,SAAYvxB,EAAEwxB,SAAYxxB,EAAE2sC,OAIxF3sC,EAAE0V,OAAOyb,iBAAiB,QAASka,GAA6B,CAAEuB,MAAM,KAHxE5sC,EAAEmV,iBACF2vB,MAbIyF,EAAAA,IAAUE,EAAAA,MAEe,UAAxB9G,IAAoC3jC,EAAE2/B,UACX,eAAxBgE,IAAyC3jC,EAAEwxB,SAAWxxB,EAAEuxB,YAG9DvxB,EAAEmV,iBAEFswB,KACAb,IAQN,EAoKU7gB,YAtOV,SAAyB/jB,GAcvB,SAAS6sC,EAAuBC,GAC1BA,aAAchB,eAA4B,QAAXgB,EAAGt6C,KAA4B,WAAXs6C,EAAGt6C,MAI1DmkB,YAAW,KACT2uB,GAAqB5xC,SAAU,CAAK,GAlSR,KAqS9B2C,OAAOg7B,oBAAoB,UAAWwb,GACtCx2C,OAAOg7B,oBAAoB,YAAawb,GAC1C,CAxBiB,IAAb7sC,EAAEQ,OAOF8kC,GAAqB5xC,UAIzB4xC,GAAqB5xC,SAAU,EAe/BmX,SAASsmB,iBAAiB,YAAa0b,GACvChiC,SAASsmB,iBAAiB,UAAW0b,KA1BhB7sC,EAAE6S,cAAcwP,QAAS,2BAA6BriB,EAAE0V,QAEhEyb,iBAAiB,UAAWka,GAA6B,CAAEuB,MAAM,GAyBhF,EA0MUr6B,cAAek4B,EAAAA,GA7IzB,SAAkCzqC,GAC3BsqC,OAILvE,IAA4BD,IAEvBA,GAMHL,MALAzlC,EAAEmV,iBACFnV,EAAEM,kBAEF4qC,MAIJ,OA8HiEt7C,EACvDm9C,cAAetC,EAAAA,GAAaY,QAA8Bz7C,EAC1D,aAAYgkB,KAEZwwB,GACAjyC,EAAAA,GAAAA,cAAA,QACEvB,WAAWwB,EAAAA,EAAAA,GACT,oBACC6xC,IAA2BI,GAAoB,aAElDzwC,IAAI,SAEFqwC,IAA2BI,GAAoBlyC,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,qCAC7DgjB,GAGLzhB,EAAAA,GAAAA,cAAA,UAAQyE,IAAK2pB,GAAiB3vB,UAAU,kBACxCuB,EAAAA,GAAAA,cAAA,UAAQyE,IAAKwuC,GAAmBx0C,UAAU,kBAC1CuB,EAAAA,GAAAA,cAAA,OAAKyE,IAAKyuC,GAAsBz0C,UAAU,+BAG9CuB,EAAAA,GAAAA,cAAA,OAAKyE,IAAKuuC,GAAkBv0C,WAAWwB,EAAAA,EAAAA,GAAe,gBAAiBoxC,EAAgB,UACrFrxC,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,0BACbuB,EAAAA,GAAAA,cAAA,OAAKyE,IAAKsuC,GAAUt0C,WAAWwB,EAAAA,EAAAA,GAAexB,GAAW,SAAUgD,IAAI,gBAGzDhE,IAAjBo0C,GACC7xC,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,uBAAuBgD,IAAI,QACvCowC,GAGL7xC,EAAAA,GAAAA,cAAC66C,EAAAA,EAAa,CACZpkC,OAAQ28B,GACR0H,eAAgBvH,GAChBE,cAAeA,GACfC,iBAAkBA,GAClBh9B,QAASmhC,KAEV5F,GAAqBjyC,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,uBAAsBgR,EAAAA,EAAAA,GAAWwiC,IACnE,I,+HCtjBV,MAQA,GAAep1C,EAAAA,EAAAA,KARwB8E,IACrC,MAAM,OAAE8U,GAAW9U,EACbo5C,GAAa1lB,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,cAAe7e,GAGjE,OAAOskC,EAAa/6C,EAAAA,GAAAA,cAAC+6C,EAAep5C,QAAYlE,CAAS,ICyM3D,GAAeZ,EAAAA,EAAAA,KAnKwBm+C,EACrCh+C,SACA8U,WACAlL,WACAq0C,cACAC,kBACAC,UACAC,mBACAC,iBACAC,kBACAC,sBACAC,kBACAC,cACAC,oBACAxJ,mBACAyJ,iBACAC,gBACAC,sBACAC,kBACAC,qBACAt9C,gBAEA,MAAM,sBACJu9C,EAAqB,kBACrBC,EAAiB,eACjBC,EAAc,qBACdC,IACEt9C,EAAAA,EAAAA,MAGEu9C,GAAar7C,EAAAA,EAAAA,IAAuB,OAEnCs7C,EAAoBC,IAA+Br5C,EAAAA,EAAAA,MACnDwsB,EAAqB8sB,IAA0Bv1C,EAAAA,EAAAA,SAAsCvJ,GAoBtF++C,IAlB4Bv8C,EAAAA,EAAAA,GAChC,6BACCk7C,GAAW,YACZkB,EACKjB,GAAoB,cACpBA,GAAoB,eAGMn8C,EAAAA,EAAAA,KAAY,KAC3C48C,MACAC,MACAT,IACA,MAAMoB,EAAYL,EAAW76C,QAC7B,IAAKk7C,EAAW,OAChB,MAAM,EAAErwC,EAAC,EAAEC,GAAMowC,EAAU1uC,wBAC3BwuC,EAAuB,CAAEnwC,IAAGC,KAAI,GAC/B,CAACwvC,EAAqBC,EAAiBT,KAEjBp8C,EAAAA,EAAAA,KAAaikB,IACvB,aAATA,GACF84B,EAAsB,CAAEU,MAAO,KAC/BT,EAAkB,CAAES,WAAOj/C,MAE3Bw+C,EAAkB,CAAES,MAAO,KAC3BV,EAAsB,CAAEU,WAAOj/C,IACjC,GACC,CAACu+C,EAAuBC,KAmBrBjsB,IAjBuB/wB,EAAAA,EAAAA,KAAY,KACvC,MAAM09C,EAAejkC,SAAS0S,cAC5BswB,EAAoBkB,EAAAA,IAAoCC,EAAAA,KAGrDj2C,GAAY+1C,IAAiBjkC,SAASokC,eAK3CH,GAAc1C,OACdz1B,YAAW,KACTq3B,MACAR,GAAgB,GA3GgB,MAoGhCA,GAQ+B,GAChC,CAACK,EAAmB90C,EAAUy0C,EAAgBQ,KAEvB58C,EAAAA,EAAAA,KAAY,IAAMm9C,EAAW76C,SAAS,KAE1D0uB,GAAiBhxB,EAAAA,EAAAA,KACrB,IAAMm9C,EAAW76C,SAAS2uB,QAAQ,kCAClC,IAGIC,GAAiBlxB,EAAAA,EAAAA,KACrB,IAAMyZ,SAAS0S,cAAc,iCAC7B,IAGIsF,GAAYzxB,EAAAA,EAAAA,KAAY,KAAM,CAClC0xB,YAAY,KACV,KAEE,UACJP,EAAS,UAAEC,EAAS,iBAAEC,EAAgB,iBAAEC,EAAkB7sB,MAAO8sB,IAC/DC,EAAAA,EAAAA,GACFhB,EACAO,EACAC,EACAE,EACAO,GAGF,OACE1wB,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,OAAK0D,MAAO,CAACgI,MAAM,MA0BnB1L,EAAAA,GAAAA,cAAC+6C,EAAU,CACT/9C,OAAQA,EACR8U,SAAUA,EACV2E,OAAQ2kC,GAAoBv7C,QAAQk8C,GACpCd,YAAaA,EACbC,gBAAiBA,EACjBp3C,OAAQw4C,EACR5lC,QAAS4kC,EACTM,cAAeA,EACfJ,gBAAiBA,EACjBD,oBAAqBA,EACrBE,YAAaA,EACbE,eAAgBA,EAChBoB,aAAcP,EACdN,eAAgBA,EAChBC,qBAAsBA,EACtBT,kBAAmBA,EACnBxJ,iBAAkBA,EAClBzzC,UAAWA,EACX2xB,UAAWsrB,EAAoBtrB,OAAY3yB,EAC3C4yB,UAAWqrB,EAAoBrrB,OAAY5yB,EAC3C6yB,iBAAkBorB,EAAoBprB,OAAmB7yB,EACzD8yB,iBAAkBmrB,EAAoBnrB,OAAmB9yB,EACzDiG,MAAOg4C,EAAoBlrB,OAAY/yB,IAExC,G,kLCvKP,MAAMu/C,EAAsE,CAC1EC,EAAG,OACHC,OAAQ,OACRC,EAAG,SACHC,GAAI,SACJC,EAAG,YACHC,IAAK,gBACLC,KAAM,YACNC,KAAM,WAEFC,EAAa/kC,SAAS+3B,cAAc,OAmd1C,GAAe5zC,EAAAA,EAAAA,KAjdqBg+C,EAClCpkC,SACAqkC,iBACArH,gBACAC,mBACAh9B,cAGA,MAAMsb,GAAejxB,EAAAA,EAAAA,IAAuB,MAEtC28C,GAAkB38C,EAAAA,EAAAA,IAAyB,OAC3C,aAAEqM,EAAY,qBAAEjK,IAAyBoK,EAAAA,EAAAA,GAAkBkJ,IAC1DknC,EAAmBC,EAAiBC,IAAoB56C,EAAAA,EAAAA,MACxD66C,EAASC,IAAc/2C,EAAAA,EAAAA,IAAS,KAChCg3C,EAAeC,IAAoBj3C,EAAAA,EAAAA,KAAS,IAC5Ck3C,EAAgBC,IAAqBn3C,EAAAA,EAAAA,OACrCo3C,EAAqBC,IAA0Br3C,EAAAA,EAAAA,IAA+B,CAAC,IAEtFlH,EAAAA,EAAAA,KAAU,IAAO2W,GAAS+tB,EAAAA,EAAAA,GAAsB9tB,QAAWjZ,GAAY,CAACgZ,EAAQC,KAChF4nC,EAAAA,EAAAA,GACE7nC,EACAub,EACAtb,GACA,IAGF5W,EAAAA,EAAAA,KAAU,KACJ69C,EACFD,EAAgBn8C,QAASohB,SAEzBo7B,EAAW,IACXE,GAAiB,GACnB,GACC,CAACN,KAEJ79C,EAAAA,EAAAA,KAAU,KACHsN,IACHywC,IACAQ,EAAuB,CAAC,GACxBF,OAAkB1gD,GACpB,GACC,CAACogD,EAAkBzwC,KAEtBtN,EAAAA,EAAAA,KAAU,KACR,IAAK2W,IAAWg9B,EACd,OAGF,MAAM8K,EAAwC,CAAC,EAC/C,IAAI,cAAEC,GAAkB/K,EAAcgL,wBACtC,KAAOD,GAAiBA,EAAcpgD,KAAOw6C,EAAAA,KAAmB,CAC9D,MAAM8F,EAAa1B,EAAwBwB,EAAchF,SACrDkF,IACFH,EAAgBG,IAAc,GAGhCF,EAAgBA,EAAcA,aAChC,CAEAH,EAAuBE,EAAgB,GACtC,CAAC9nC,EAAQg9B,EAAemK,IAE3B,MAAMe,GAAmB1/C,EAAAA,EAAAA,KAAY,KACnC,IAAKw0C,EACH,OAGF,MAAMqE,EAAY5zC,OAAO6zC,eACrBD,IACFA,EAAUE,kBACVF,EAAU8G,SAASnL,GACrB,GACC,CAACA,IAEEoL,GAAsB5/C,EAAAA,EAAAA,KAAY,KACtC,MAAM64C,EAAY5zC,OAAO6zC,eACrBD,GACFpE,EAAiBoE,EAAUU,WAAW,GACxC,GACC,CAAC9E,IAEEoL,GAAkB7/C,EAAAA,EAAAA,KAAa8/C,IACnC,GAAKtL,EASL,OANAgK,EAAWuB,gBAAgBvL,EAAcwL,iBACrCF,GACFtB,EAAWhJ,iBAAiByK,EAAAA,IAA6BnzC,SAASozC,IAChEA,EAAGC,YAAYD,EAAGE,aAAa,OAAQ,IAGpC5B,EAAWhG,SAAS,GAC1B,CAAChE,IAEE6L,GAAqBrgD,EAAAA,EAAAA,KAAY,KACrC,GAAKw0C,EAIL,OAAOA,EAAcgL,wBAAwBD,aAAa,GACzD,CAAC/K,IAEJ,SAAS8L,IACP,MAAMlG,EAAQqE,EAAgBn8C,QAC9B,IAAK83C,EACH,OAGF,MAAM,YAAEpS,EAAW,YAAEuY,EAAW,WAAEC,GAAepG,EACjD,GAAImG,GAAevY,EAEjB,YADAkX,OAAkB1gD,GAIpB,IAAIgB,EAAY,GACZghD,EAAaD,EAAcvY,IAC7BxoC,EAAY,cAEVghD,EAAa,IACfhhD,GAAa,cAGf0/C,EAAkB1/C,EACpB,CAOA,SAASihD,EAAyBr/C,GAChC,GAAI+9C,EAAoB/9C,GACtB,MAAO,SAGT,GAAY,cAARA,GAA+B,kBAARA,GACzB,GAAIhB,OAAOm1C,KAAK4J,GAAqBxpB,MAClC+qB,GAASA,IAASt/C,GAAOR,QAAQu+C,EAAoBuB,MAEtD,MAAO,gBAEJ,GAAIvB,EAAoBwB,WAAaxB,EAAoByB,cAC9D,MAAO,UAIX,CAEA,MAAMC,GAAoB7gD,EAAAA,EAAAA,KAAY,KACpC,GAAIm/C,EAAoB2B,QAAS,CAC/B,MAAM50B,EAAUm0B,IAChB,IACG7L,IACGtoB,GACDA,EAAQupB,QAAQsL,aAAenrB,EAAAA,GAAAA,UAC9B1J,EAAQkvB,YAEZ,OASF,OANAlvB,EAAQi0B,YAAYj0B,EAAQkvB,kBAC5BgE,GAAwBE,IAAe,IAClCA,EACHwB,SAAS,KAIb,CAEA,MAAMt/C,EAAOq+C,IACbpmC,SAASunC,YACP,cAAc,EAAQ,2CAA0CprB,EAAAA,GAAAA,YAAkCp0B,YAEpGiW,GAAS,GACR,CAAC4oC,EAAoBR,EAAiBpoC,EAAS+8B,EAAe2K,EAAoB2B,UAE/EG,GAAiBjhD,EAAAA,EAAAA,KAAY,KACjCo/C,GAAwBE,IAEtB7lC,SAASunC,YAAY1B,EAAgB4B,KAAO,eAAiB,QAC7D9gD,OAAOm1C,KAAK+J,GAAiBxyC,SAAS1L,IACvB,WAARA,GAA4B,cAARA,IAAwBR,QAAQ0+C,EAAgBl+C,KACvEqY,SAASunC,YAAY5/C,EACvB,IAGFw+C,IACO,IACFN,EACH4B,MAAO5B,EAAgB4B,QAEzB,GACD,CAACtB,IAEEuB,GAAmBnhD,EAAAA,EAAAA,KAAY,KACnCyZ,SAASunC,YAAY,UACrBpB,IACAR,GAAwBE,IAAe,IAClCA,EACH8B,QAAS9B,EAAgB8B,UACxB,GACF,CAACxB,IAEEyB,GAAsBrhD,EAAAA,EAAAA,KAAY,KACtCyZ,SAASunC,YAAY,aACrBpB,IACAR,GAAwBE,IAAe,IAClCA,EACHgC,WAAYhC,EAAgBgC,aAC3B,GACF,CAAC1B,IAEE2B,GAA0BvhD,EAAAA,EAAAA,KAAY,KAC1C,GAAIm/C,EAAoByB,cAAe,CACrC,MAAM10B,EAAUm0B,IAChB,IACG7L,IACGtoB,GACmB,QAApBA,EAAQquB,UACPruB,EAAQkvB,YAEZ,OASF,OANAlvB,EAAQi0B,YAAYj0B,EAAQkvB,kBAC5BgE,GAAwBE,IAAe,IAClCA,EACHsB,eAAe,KAInB,CAEA,MAAMp/C,EAAOq+C,IACbpmC,SAASunC,YAAY,cAAc,EAAQ,QAAOx/C,WAClDiW,GAAS,GACR,CACD4oC,EAAoBR,EAAiBpoC,EAAS+8B,EAAe2K,EAAoByB,gBAG7EY,GAAsBxhD,EAAAA,EAAAA,KAAY,KACtC,GAAIm/C,EAAoBwB,UAAW,CACjC,MAAMz0B,EAAUm0B,IAChB,IACG7L,IACGtoB,GACmB,SAApBA,EAAQquB,UACPruB,EAAQkvB,YAEZ,OASF,OANAlvB,EAAQi0B,YAAYj0B,EAAQkvB,kBAC5BgE,GAAwBE,IAAe,IAClCA,EACHqB,WAAW,KAIf,CAEA,MAAMn/C,EAAOq+C,GAAgB,GAC7BpmC,SAASunC,YAAY,cAAc,EAAQ,6CAA4Cx/C,YACvFiW,GAAS,GACR,CACD4oC,EAAoBR,EAAiBpoC,EAAS+8B,EAAe2K,EAAoBwB,YAG7Ec,GAAuBzhD,EAAAA,EAAAA,KAAY,KACvC,MAAM0hD,IAAoBC,EAAAA,EAAAA,GAAe9C,IAAY,IAAIlpC,MAAM,KAAKlV,IAAImhD,WAAW5wC,KAAK,KAExF,GAAI+tC,EAAe,CACjB,MAAM7yB,EAAUm0B,IAChB,IAAKn0B,GAA+B,MAApBA,EAAQquB,QACtB,OAOF,OAJCruB,EAA8BlW,KAAO0rC,OAEtCjqC,GAGF,CAEA,MAAMjW,EAAOq+C,GAAgB,GAC7BH,IACAjmC,SAASunC,YACP,cACA,EACC,WAAUU,yCAAwDlgD,SAErEiW,GAAS,GACR,CAAC4oC,EAAoBR,EAAiBd,EAAeF,EAASpnC,EAASioC,IAEpE1f,GAAgBhgC,EAAAA,EAAAA,KAAa4O,IACjC,MAUMuvB,EAVqD,CACzD0jB,EAAGlD,EACHmD,EAAGb,EACH5sC,EAAGgtC,EACH7gD,EAAG2gD,EACHY,EAAGP,EACH5rC,EAAG2rC,EACHrgD,EAAG2/C,GCpWM,SAAyBjyC,GACtC,MAAMxN,EAAMwN,EAAExN,KAAOwN,EAAEwV,KAEvB,OAAOhjB,EAAIi/B,WAAW,OAASj/B,EAAIoqB,MAAM,GAAGw2B,cAAgB5gD,CAC9D,CDmWoC6gD,CAAgBrzC,KAG9CA,EAAE2sC,SACG3sC,EAAEwxB,SAAWxxB,EAAEuxB,UAChBhC,IAKNvvB,EAAEmV,iBACFnV,EAAEM,kBACFivB,IAAS,GACR,CACDwgB,EAAiBsC,EAAgBI,EAAqBF,EAAkBK,EACxED,EAAyBV,KAG3BhgD,EAAAA,EAAAA,KAAU,KACJ2W,GACFiC,SAASsmB,iBAAiB,UAAWC,GAGhC,IAAMvmB,SAASwmB,oBAAoB,UAAWD,KACpD,CAACxoB,EAAQwoB,IAEZ,MAAMngC,GAAOC,EAAAA,EAAAA,KASb,IAAKqO,EACH,OAGF,MAAM3O,GAAYwB,EAAAA,EAAAA,GAChB,gBACAkD,EACAw6C,GAAqB,sBAGjBwD,GAA0BlhD,EAAAA,EAAAA,GAC9B,iCACAJ,QAAQi+C,EAAQz8C,SAAW,SAGvBqC,EAAQo3C,EACT,SAAQA,EAAe1uC,aAAa0uC,EAAezuC,8BAA8ByuC,EAAe1uC,OACjG,GAEJ,OACEpM,EAAAA,GAAAA,cAAA,OACEyE,IAAKutB,EACLvzB,UAAWA,EACXiF,MAAOA,EACP0f,UA/BJ,SAAgCvV,GAChB,UAAVA,EAAExN,KAAmBs9C,IACvB+C,IACA7yC,EAAEmV,iBAEN,EA4BI4O,YAAa1c,EAAAA,GAEblV,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,yBACbuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL0P,MAAM,cACNE,UAAU,eACVzR,UAAWihD,EAAyB,WACpCx/C,QAAS4/C,GAET9/C,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,qBAEfuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,0BACfuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL0P,MAAM,cACNE,UAAU,YACVzR,UAAWihD,EAAyB,QACpCx/C,QAASggD,GAETlgD,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,eAEfuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL0P,MAAM,cACNE,UAAU,cACVzR,UAAWihD,EAAyB,UACpCx/C,QAASkgD,GAETpgD,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,iBAEfuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL0P,MAAM,cACNE,UAAU,kBACVzR,UAAWihD,EAAyB,aACpCx/C,QAASogD,GAETtgD,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,qBAEfuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL0P,MAAM,cACNE,UAAU,qBACVzR,UAAWihD,EAAyB,iBACpCx/C,QAASsgD,GAETxgD,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,wBAEfuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL0P,MAAM,cACNE,UAAU,iBACVzR,UAAWihD,EAAyB,aACpCx/C,QAASugD,GAETzgD,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,oBAEfuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,0BACfuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAAC0P,MAAM,cAAcE,UAAWpR,EAAK,2BAA4BoB,QAAS09C,GAC/E59C,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,gBAIjBuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,8BACbuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,yBACbuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CAAC0P,MAAM,cAAcE,UAAWpR,EAAK,UAAWoB,QAAS29C,GAC9D79C,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,qBAEfuB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,0BAEfuB,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GAAe,uCAAwCi+C,IAElEl+C,EAAAA,GAAAA,cAAA,SACEyE,IAAKi5C,EACLj/C,UAAU,+BACVykB,KAAK,OACLnY,MAAO+yC,EACPr8B,YAAY,eACZwB,aAAa,MACbm+B,UAAU,MACV3/C,IAAI,OACJ6hB,SA9TZ,SAA6BzV,GAC3BkwC,EAAWlwC,EAAE0V,OAAOxY,OACpBw0C,GACF,EA4TY7M,SAAU6M,KAIdv/C,EAAAA,GAAAA,cAAA,OAAKvB,UAAW0iD,GACdnhD,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,0BACfuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL0P,MAAM,cACNE,UAAWpR,EAAK,QAChBL,UAAU,gBACVyB,QAASwgD,GAET1gD,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,mBAKjB,G,kDEjgBKywC,eAAeK,EAA8B8R,GAC1D,MAAMhS,EAAgB,GAEtB,SAASiS,EAAwBC,EAA+Bv1C,GAC9D,OAAO,IAAIw1C,SAASC,IAClB,GAAIF,aAAiBtnC,KACnBo1B,EAAM/tC,KAAKigD,GACXE,EAAQF,QACH,GAAIA,EAAMG,OAAQ,CACvB,MAAMC,EAAW31C,EAAK41C,YACrBL,EAA8BM,MAAMA,IACnCxS,EAAM/tC,KAAKugD,GACXJ,EAAQI,EAAK,IACZ,KAGGF,GACFtS,EAAM/tC,KAAKqgD,GAEbF,EAAQE,EAAS,GAErB,MAAWJ,EAAMO,aACIP,EAAmCQ,eAC5CC,aAAaC,IACrB,MAAMC,EAAkB,GACxB,IAAK,IAAIziD,EAAI,EAAGA,EAAIwiD,EAAQ5gD,OAAQ5B,IAClCyiD,EAAgB5gD,KAAKggD,EAAwBW,EAAQxiD,GAAIuM,IAE3Dy1C,EAAQD,QAAQW,IAAID,GAAiB,GAEzC,GAEJ,CAEA,MAAMA,EAAkB,GACxB,IAAK,IAAIziD,EAAI,EAAGA,EAAI4hD,EAAkBhgD,OAAQ5B,IAAK,CACjD,MAAMuM,EAAOq1C,EAAkB5hD,GAC/B,GAAkB,SAAduM,EAAKo2C,KAAiB,CACxB,MAAMb,EAAQv1C,EAAKq2C,oBAAsBr2C,EAAK41C,YAC1CL,GACFW,EAAgB5gD,KAAKggD,EAAwBC,EAAOv1C,GAExD,CACF,CAIA,aAFMw1C,QAAQW,IAAID,IAEXI,EAAAA,EAAAA,IAAcjT,EACvB,C,mCClDA,MAAMkT,EAAQ,oBACRC,EAAW,mBACXC,EAAgB,oBAChBC,EAAoB,OAEnB,SAASC,EAAiBv8B,GAC/B,OAAOA,EACJyM,QAAQ2vB,EAAU,KAClB3vB,QAAQ0vB,EAAO,MACf1vB,QAAQ4vB,EAAe,IACvB5vB,QAAQ6vB,EAAmB,GAChC,C,kBCTO,SAAS/J,EAAuBJ,EAAuBqK,GAC5D,MAAM,wBAAEnE,GAA4BlG,EACpC,IAAIsK,EAAiCpE,EACjCqE,EAAa,EACjB,KAAOD,GAAcA,EAAWzkD,KAAOwkD,GAAWE,EANxB,GAOxBD,EAAaA,EAAWrE,cACxBsE,IAGF,OAAOjjD,QAAQgjD,GAAcA,EAAWzkD,KAAOwkD,EACjD,C,2LCOA,MACMG,EAAmB,IAAIC,OAAQ,IAAGC,EAAAA,EAAAA,WAAyB,KAC3DC,EAAuB,IAAIF,OAAQ,GAAEG,EAAAA,IAAAA,UAA2B,KAEvD,SAASC,EACtBC,EACArR,EACAsR,EACAC,EACAphC,EACA8yB,GAEA,MAAM,wBAAEuO,EAAuB,yBAAEC,IAA6B5kD,EAAAA,EAAAA,OAEvD6kD,EAAkBC,EAAoBC,IAAwB3gD,EAAAA,EAAAA,IAAQ,GAEvE4gD,GAA4BC,EAAAA,EAAAA,IAAqB,KACrD,MAAM19B,EAAO4rB,IACb,GAAKqR,GAAcj9B,GAASm9B,KAAqBQ,WAEhC39B,EAAKoZ,MAAM8a,EAAAA,GAAqB2I,EAAAA,EAAeE,EAAAA,KAKhE,OAF4Ba,EAAAA,EAAAA,GAAuB7hC,EAAS5gB,SAEjCi+B,MAAM8a,EAAAA,GAAqByI,EAAmBG,KAAwB,EAAE,GAClG,CAAClR,EAASuR,EAAmBphC,EAAUkhC,GA1B3B,KA4BTY,GAAeC,EAAAA,EAAAA,GACnBL,EAA2B,CAACA,EAA2B7R,EAASuR,IAAoB,GAGhFxlD,GAAWo8C,EAAAA,EAAAA,IAAgB,IAAMt6C,QAAQokD,MAAiB,CAACA,IAC3DE,EAAkBtkD,QAAQo1C,GAAc5zC,SAE9CvB,EAAAA,EAAAA,KAAU,KACR,IAAKujD,EAAW,OAEhB,MAAMe,EAAYH,IACdG,EACGD,GACHX,EAAwB,CACtB7xB,MAAO2oB,EAAAA,GAAqB8J,EAAYA,EAAU5kB,MAAM,kBAAkB,KAI9EikB,GACF,GACC,CAACJ,EAAWY,EAAcE,EAAiBV,EAA0BD,IAExE,MAAMa,GAAoBplD,EAAAA,EAAAA,KAAa0yB,IACrC,MAAMyyB,EAAYH,IAClB,IAAKZ,IAAce,EAAW,OAE9B,MAAME,EAAUniC,EAAS5gB,QACnBgjD,GAAsBP,EAAAA,EAAAA,GAAuBM,GAC7CE,EAAYlK,EAAAA,GACd8J,EAEAA,EAAUvxB,QAAQ,wBAAyB,QACzC4xB,EAAQ,IAAIzB,OAAQ,IAAGwB,UAAmB,IAE1CE,EADUH,EAAoB/kB,MAAMilB,GAAQ,GAC5BpjD,OAAS+iD,EAAU/iD,OACnCsjD,EAAUJ,EAAoB1xB,QAAQ4xB,GAAOG,EAAAA,EAAAA,IAAqBjzB,GAAOkzB,OAAOH,IAChFI,EAAqBR,EAAQ7M,UAAUsN,UAAUR,EAAoBljD,QAE3EiiD,EAAS,GAAEqB,IAAUG,KAErBliC,uBAAsB,MACpBg1B,EAAAA,EAAAA,GAAqB0M,GAAS,GAAM,EAAK,GACzC,GACD,CAACL,EAAcZ,EAAWlhC,EAAUmhC,IAIvC,OAFAxjD,EAAAA,EAAAA,IAAU8jD,EAAsB,CAACA,EAAsB5R,IAEhD,CACLgT,yBAA0BnlD,QAAQ9B,GAAYomD,IAAoBT,GAClEuB,wBAAyBtB,EACzBU,oBAEJ,C,4MCnEA,IAAIa,EACAC,EACAC,EAEAC,EACAC,EACJ,MAKMC,GAA0BC,EAAAA,EAAAA,IAiJhC,SAA6B5nD,EAA6B6nD,EAA0BC,GAClF,OAAK9nD,GAAS6nD,EAAepkD,OAItBhC,OAAOC,QAAOqmD,EAAAA,EAAAA,IAAW/nD,EAAM6nD,IAAiBh7B,MAAM,EAAGi7B,GAHvD77B,EAAAA,CAIX,IAtJM+7B,GAAqBJ,EAAAA,EAAAA,IAwJ3B,SACE5nD,EACAioD,EACAC,GAEA,MAAMC,EAAS1mD,OAAOC,OAAO1B,GAEvBooD,GAAWC,EAAAA,EAAAA,IAA4BF,EAAQ,UAC/CG,EAAsBL,GACxB/c,EAAAA,EAAAA,IAAU+c,GAAoBM,GACvB9mD,OAAOC,QAAOqmD,EAAAA,EAAAA,IAAWK,EAAUG,MAE1C,CAAC,EACCC,EAAkBN,GACpBhd,EAAAA,EAAAA,IAAUgd,GAAgBK,GACnB9mD,OAAOC,QAAOqmD,EAAAA,EAAAA,IAAWK,EAAUG,MAE1C,CAAC,EAECE,EAAY,IAAKH,KAAwBE,GACzCE,EAAY,GAAgB9W,OAAOnwC,OAAOm1C,KAAK0R,GAAsB7mD,OAAOm1C,KAAK4R,IAEjFG,EAASR,EAAOnd,QAAO,CAACl+B,EAAQinB,KACpCA,EAAM60B,MAAMz6C,SAASmO,IACdxP,EAAOwP,KACVxP,EAAOwP,GAAQ,IAGjBxP,EAAOwP,GAAM5Y,KAAKqwB,EAAM,IAGnBjnB,IACN,CAAC,GAEE87C,EAAQnnD,OAAOm1C,KAAK+R,GACpBE,EAAeH,EAAS1d,QAAO,CAACz8B,EAAKu6C,IAAYx9C,KAAKiD,IAAIA,EAAKu6C,EAAQrlD,SAAS,GAEtF,MAAO,CACLglD,YACAC,WACAC,SACAC,QACAC,eAEJ,IAnMME,GAAsBnB,EAAAA,EAAAA,IAqM5B,SAAyBoB,EAAkBrnD,EAAgBmmD,GACzD,MAAM,UACJW,EAAS,SAAEC,EAAQ,OAAEC,EAAM,MAAEC,EAAK,aAAEC,GAClCG,EAEJ,IAAIC,EAAmB,GAEvB,GAAItnD,EAAO8B,OAASolD,EAClB,OAAO58B,EAAAA,EAGT,MAAMi9B,EAAkBR,EAAS/mD,QAAQmnD,GAAYA,EAAQpnB,WAAW//B,KAASwnD,OACjFF,EAAUA,EAAQrX,OAAOnwC,OAAOC,QAAOqmD,EAAAA,EAAAA,IAAWU,EAAYS,IAAkBE,QAGhF,MAAMC,EAAeT,EAAMjnD,QAAQ2a,GAASA,EAAKolB,WAAW//B,KAK5D,OAJAsnD,EAAUA,EAAQrX,OAAOnwC,OAAOC,QAAOqmD,EAAAA,EAAAA,IAAWY,EAAQU,IAAeD,QAEzEH,GAAUK,EAAAA,EAAAA,IAAOL,GAEZA,EAAQxlD,OAINwlD,EAAQp8B,MAAM,EAAGi7B,GAHf77B,EAAAA,CAIX,IA5NA,IACEw7B,EAAkB,wCAClBC,EAAoB,SAKtB,CAJE,MAAOz3C,GAEPw3C,EAAkB,yCAClBC,EAAoB,aACtB,CAEe,SAAS6B,EACtB9D,EACArR,EACAsR,EACAV,EAAUhK,EAAAA,IACV6M,EACAI,EACAC,GAEA,MAAOpC,EAAkBC,EAAoBC,IAAwB3gD,EAAAA,EAAAA,IAAQ,IAEtErF,EAAMwpD,IAAWpgD,EAAAA,EAAAA,OACjBqgD,EAAgBC,IAAqBtgD,EAAAA,EAAAA,IAAkB6iB,EAAAA,IACvD09B,EAAsBC,IAA2BxgD,EAAAA,EAAAA,IAAuB6iB,EAAAA,IAG/E/pB,EAAAA,EAAAA,KAAU,KAGR,SAASw3C,IACP8P,EAAQhC,EAAUW,OACpB,CAJK1C,IAMD+B,EACF9N,IAiGNpI,iBAQE,OAPKgW,IACHA,EAAmB,qCACnBC,SAAsBD,GAAkBuC,QAExCrC,GAAYsC,EAAAA,EAAAA,IAAgBvC,IAGvBD,CACT,CAxGMyC,GAAkBC,KAAKtQ,GACzB,GACC,CAAC+L,IAEJ,MAAMwE,GAA2B/D,EAAAA,EAAAA,IAAqB,KACpD,MAAM19B,EAAO4rB,IACb,OAAOqR,GAAaj9B,EAAKzB,SAAS,MAAOg+B,EAAAA,EAAAA,GAAiBv8B,GAAMoZ,MAAM6lB,KAAmB,GAAGvyB,YAASr1B,CAAS,GAC7G,CAACu0C,EAASqR,GAhDE,KAkDTyE,GAAe5D,EAAAA,EAAAA,GACnB2D,EAA0B,CAACA,EAA0B7V,IAAU,GAG3D+V,GAAiB9oD,EAAAA,EAAAA,KAAa8mD,IAGlC,GAFAuB,EAAkBvB,GAEdA,IAAWl8B,EAAAA,EAEb,YADA29B,EAAwB39B,EAAAA,GAI1B,MAAMm+B,EAAejC,EAAOrmD,KAAKiyB,GAAUA,EAAMs2B,SAC3ChT,GAAeiT,EAAAA,EAAAA,KACnBC,EAAAA,EAAAA,KAA2BlnD,EAAAA,EAAAA,MAAa+mD,GACxC,MAEFR,EAAwBvS,EAAa,GACpC,IAEGmT,GAAcnpD,EAAAA,EAAAA,KAAY,CAAC0yB,EAA4B02B,GAAU,KACrE,MAAMjiC,EAAO4rB,IACb,IAAK5rB,EAAM,OAEX,MAAMkiC,EAAUliC,EAAKmiC,YAAY,IAAKF,EAAUjiC,EAAKmiC,YAAY,KAAO,OAAI9qD,GAE5E,IAAiB,IAAb6qD,EAAgB,CAClB,MAAME,EAA6B,iBAAV72B,GAAqBliB,EAAAA,EAAAA,GAAWkiB,EAAO,CAAC,gBAAiBizB,EAAAA,EAAAA,IAAqBjzB,GACvG2xB,EAAS,GAAEl9B,EAAK2+B,UAAU,EAAGuD,KAAWE,KAExC,MAAM7L,EAAeiG,IAAYhK,EAAAA,IAC7BlgC,SAAS0S,cAA8ByxB,EAAAA,KACvCnkC,SAAS+vC,eAAe7F,GAE5BhgC,uBAAsB,MACpBg1B,EAAAA,EAAAA,GAAqB+E,GAAc,GAAM,EAAK,GAElD,CAEAoL,EAAel+B,EAAAA,EAAiB,GAC/B,CAACmoB,EAASsR,EAASV,EAASmF,IAqC/B,OAnCAjoD,EAAAA,EAAAA,KAAU,KACR,MAAM4oD,EAAYZ,IAClB,IAAKY,IAAc9qD,EAEjB,YADAmqD,EAAel+B,EAAAA,GAIjB,MAAM8+B,EAAsBD,EAAUrnD,OAAS,GAAKqnD,EAAUE,SAAS,KAEjErpD,EAASmpD,EAAU3D,UAAU,EAAG4D,EAAsB,EAAID,EAAUrnD,OAAS,OAAI5D,GACvF,IAAIopD,EAAmBh9B,EAAAA,EAEvB,GAAKtqB,GAEE,GAAuB,IAAlBA,EAAO8B,QAAgBikD,EAAkBuD,KAAKtpD,IAAYA,EAAO8B,QA5GvD,EA4GoF,CACxG,MAAMulD,EAAUhB,EAAmBhoD,EAAMioD,EAAmBC,GAC5De,EAAUF,EAAoBC,EAASrnD,EAAO0hD,cA/G/B,GAgHjB,OAJE4F,EAAUtB,EAAwB3nD,EAAM6nD,EA5GzB,IAkHZoB,EAAQxlD,OAKTsnD,EACFP,EAAYvB,EAAQ,GAAGoB,QAAQ,GAE/BF,EAAelB,GAPfkB,EAAel+B,EAAAA,EAQjB,GACC,CACDg8B,EAAmBjoD,EAAMkqD,EAAchC,EAAesC,EAAa3C,EAAgBsC,KAGrFjoD,EAAAA,EAAAA,IAAU8jD,EAAsB,CAACA,EAAsB5R,IAEhD,CACL8W,mBAAoBjpD,QAAQwnD,EAAehmD,QAAUkmD,EAAqBlmD,UAAYqiD,EACtFqF,kBAAmBpF,EACnB0D,iBACAE,uBACAa,cAEJ,C,+JCzJA,IAAIY,EACJ,IACEA,EAAqB,iCAIvB,CAHE,MAAOn7C,GAEPm7C,EAAqB,6BACvB,CAEe,SAASC,EACtB5F,EACArR,EACAsR,EACAC,EACAphC,EACA+mC,EACAC,EACA5yC,GAEA,MAAO6yC,EAAeC,IAAoBriD,EAAAA,EAAAA,OACnC08C,EAAkBC,EAAoBC,IAAwB3gD,EAAAA,EAAAA,IAAQ,GAEvEqmD,GAA8BxF,EAAAA,EAAAA,IAAqB,KACvD,MAAM19B,EAAO4rB,IACb,IAAKqR,IAAcE,KAAqBQ,YAAc39B,EAAKzB,SAAS,KAAM,OAE1E,MAAM4/B,GAAsBP,EAAAA,EAAAA,GAAuB7hC,EAAS5gB,SAE5D,OAAOohD,EAAAA,EAAAA,GAAiB4B,GAAqB/kB,MAAMwpB,KAAsB,GAAGl2B,MAAM,GACjF,CAACuwB,EAAWrR,EAASuR,EAAmBphC,GA9B5B,KAgCTonC,GAAiBrF,EAAAA,EAAAA,GACrBoF,EAA6B,CAACA,EAA6BtX,EAASuR,IAAoB,GAGpFiG,GAAoBtF,EAAAA,EAAAA,IAAiB,IAClCb,GAAarR,IAAU1S,WAAW,MACxC,CAAC0S,EAASqR,KAEbvjD,EAAAA,EAAAA,KAAU,KACR,MAAM2pD,EAAcF,IAEpB,IAAKE,IAAiBP,IAAoBC,EAExC,YADAE,OAAiB5rD,GAKnB,MAAMC,GAAYuD,EAAAA,EAAAA,MAAYtD,MAAMC,KACpC,IAAKF,EAEH,YADA2rD,OAAiB5rD,GAInB,MAAMisD,EAAYR,GAAkBtgB,QAAO,CAAC3S,EAAe0zB,KACrDA,EAAOh3C,SAAW4D,GACpB0f,EAAI30B,KAAKqoD,EAAOh3C,QAGXsjB,IACN,IAEG12B,EAASkqD,EAAY1E,UAAU,GAC/B6E,GAAcC,EAAAA,EAAAA,KAAkB3C,EAAAA,EAAAA,IAAO,IACtCsC,KAAuBL,GAAoB,MAC5CO,GAAa,KACfhsD,EAAW6B,GAEf8pD,EAAiBhqD,OAAOC,QAAOqmD,EAAAA,EAAAA,IAAWjoD,EAAWksD,IAAc,GAClE,CAACrzC,EAAe2yC,EAAkBC,EAAiBI,EAAgBC,IAEtE,MAAMM,GAAgB7qD,EAAAA,EAAAA,KAAY,CAACW,EAAemqD,GAAa,KAC7D,IAAKnqD,EAAKiT,aAAcoD,EAAAA,EAAAA,IAAuBrW,GAC7C,OAGF,MAAM6U,GAAemK,EAAAA,EAAAA,IAAgBhf,GAC/BoqD,EAAev1C,EAChB,IAAGA,IACH,uEAEqBogB,EAAAA,GAAAA,yCACJj1B,EAAKxB,2EAGpB6X,EAAAA,EAAAA,IAAuBrW,SAExB0kD,EAAUniC,EAAS5gB,QAEnB0oD,EAA2BC,GADLlG,EAAAA,EAAAA,GAAuBM,IAE7CgE,EAAU2B,EAAyB1B,YAAY,KAErD,IAAiB,IAAbD,EAAgB,CAClB,MAAM3D,EAAW,GAAEsF,EAAyBE,OAAO,EAAG7B,KAAW0B,UAC3DlF,EAAqBoF,EAAoB5F,EAAQ7M,WAAWsN,UAAUkF,EAAyB5oD,QAErGiiD,EAAS,GAAEqB,IAAUG,KAErBliC,uBAAsB,MACpBg1B,EAAAA,EAAAA,GAAqB0M,EAASyF,EAAW,GAE7C,CAEAV,OAAiB5rD,EAAU,GAC1B,CAAC0kB,EAAUmhC,IAId,OAFAxjD,EAAAA,EAAAA,IAAU8jD,EAAsB,CAACA,EAAsB5R,IAEhD,CACLoY,qBAAsBvqD,QAAQupD,GAAe/nD,SAAWqiD,GACxD2G,oBAAqB1G,EACrBmG,gBACAQ,qBAAsBlB,EAE1B,CAIA,SAASc,EAAoB9jC,GAC3B,OAAOA,EAAKyM,QAAQ,kCAAmC,OACzD,C,wECxIe,SAAS03B,EAAmCC,EAAiBC,GAC1E,MAAMC,OAAuBjtD,IAAVgtD,EACbrmB,GAAkBrjC,EAAAA,EAAAA,IAAO2pD,GACzBC,GAAa5pD,EAAAA,EAAAA,MACbH,GAAcC,EAAAA,EAAAA,KAkCpB,OAhCA+pD,EAAAA,EAAAA,IAAc,KACRF,IAIJtmB,EAAgB7iC,SAAU,EAEtBopD,EAAWppD,UACb0uC,aAAa0a,EAAWppD,SACxBopD,EAAWppD,aAAU9D,GACvB,GAEC+sD,IAEH1qD,EAAAA,EAAAA,KAAU,KACR,GAAI4qD,GAActmB,EAAgB7iC,QAChC,OAGF,MAAM+1C,EAAOA,KACXlT,EAAgB7iC,SAAU,EAC1BX,GAAa,EAGX6pD,EAAS,EACXE,EAAWppD,QAAU2C,OAAOsgB,WAAW8yB,EAAMmT,GAE7CnT,GACF,GAECkT,GAEIpmB,EAAgB7iC,OACzB,C,6DCrBA,MA0CA,GAAe1E,EAAAA,EAAAA,KA1CqBguD,EAClCzsD,KACAqvB,UACAC,WAAW,GACX/J,WACApjB,QACAuqD,iBACAxnC,eAEA,MAAOhkB,EAAQyrD,IAAa/jD,EAAAA,EAAAA,IAAmB0mB,GAAY,IAErDs9B,GAAe/rD,EAAAA,EAAAA,KAAa8jB,IAChC,MAAM,MAAEhY,EAAK,QAAE4a,GAAY5C,EAAMrC,cACjC,IAAIuqC,EAEFA,EADEtlC,EACU,IAAIrmB,EAAQyL,GAEZzL,EAAOC,QAAQ2rD,GAAMA,IAAMngD,IAGzCggD,EAAUE,GACV3nC,EAAS2nC,EAAU,GAClB,CAAC3nC,EAAUhkB,IAEd,OACEU,EAAAA,GAAAA,cAAA,OAAK5B,GAAIA,EAAIK,UAAU,eACpBgvB,EAAQ/tB,KAAKyrD,GACZnrD,EAAAA,GAAAA,cAACylB,EAAAA,EAAQ,CACPC,MAAOylC,EAAOzlC,MACd0lC,SAAUD,EAAOC,SACjBrgD,MAAOogD,EAAOpgD,MACd4a,SAA6C,IAApC+H,EAAS7I,QAAQsmC,EAAOpgD,OACjC4Y,SAAUwnC,EAAOxnC,UAAYA,EAC7BpjB,MAAOA,EACP8gB,UAAWypC,GAA2D,IAA1CA,EAAejmC,QAAQsmC,EAAOpgD,YAAgBtN,EAC1E6lB,SAAU0nC,MAGV,G,kHC7CV,MAAMK,EAAiE,CACrEnoC,KAAM,OACNooC,QAAS,EACTC,OAAQ,OACRC,QAAQ,EACR/nD,KAAM,CAAEiI,MAAO,KAAMC,OAAQ,OAI/B,IAAI8/C,EACAC,EAWAC,EAwCJ,MAwDA,GAAe9uD,EAAAA,EAAAA,KAxDiB+uD,EAAG/J,OAAMv+B,WAAU5M,cACjD,MAAOm1C,EAAgBC,IAAqB9kD,EAAAA,EAAAA,KAAS,IAErDlH,EAAAA,EAAAA,KAAU,KACH+hD,IAIAgK,EA9CT3c,eAA2B6c,GACzB,IACE,MAAMC,EAAgBtzC,SAAS+vC,eAAe,eAC9C,IAAKuD,EACH,OAGF,MAAM,YAAE/kB,EAAW,aAAEglB,GAAiBD,EAEtCL,EAAU,IAAIF,EAAQO,EAAe,CACnCE,YAAY,EACZC,SAAU,CACRzgD,MAAOu7B,EACPt7B,OAAQsgD,GAEVG,SAAU,CACR1gD,MAAOu7B,EAAc,GACrBt7B,OAAQsgD,EAAe,GACvB/oC,KAAM,YAIV,MAAM/gB,QAAgBkqD,EAAAA,EAAAA,IAAcN,SAC9BJ,EAAQW,KAAK,CAAEl5B,IAAKjxB,GAM5B,CALE,MAAOoqD,GACHC,EAAAA,KAEFC,QAAQlrC,MAAMgrC,EAElB,CACF,CAsBIG,CAAY7K,GA/DhB3S,iBAME,OALKwc,IACHA,EAAiB,yDACjBD,SAAiBC,GAAgBjE,SAG5BiE,CACT,CAmDMiB,GAAgB/E,MAAK,IAAMkE,GAAkB,KAK9B,GAChB,CAACjK,EAAMgK,IAEV,MAAM/sD,GAAOC,EAAAA,EAAAA,KAEP6tD,GAAkB3tD,EAAAA,EAAAA,KAAYiwC,UAClC,IAAKyc,EACH,OAGF,MAAMjhD,QAA8BihD,EAAQjhD,OAAO2gD,GAC7CwB,EAA+B,iBAAXniD,EAAsBA,GAASoiD,EAAAA,EAAAA,IAAWpiD,EAAQ,cAE5E4Y,EAASupC,EAAW,GACnB,CAACvpC,IAEJ,OACEtjB,EAAAA,GAAAA,cAAC2X,EAAAA,EAAK,CACJlB,OAAQ5W,QAAQgiD,GAChBnrC,QAASA,EACTxH,MAAM,qBACNzQ,UAAU,YACVsuD,gBAAc,GAEblB,EACC7rD,EAAAA,GAAAA,cAAA,OAAK5B,GAAG,gBAER4B,EAAAA,GAAAA,cAAC6lB,EAAAA,EAAO,MAEV7lB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL7B,UAAU,iBACV8B,OAAK,EACLyP,MAAM,UACN9P,QAAS0sD,EACT18C,UAAWpR,EAAK,cAEhBkB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,gBAET,G,iFC3GZ,MAiCA,EAjC2CuuD,EACzC32B,UACA53B,YACAuR,QAAQ,UACRE,YACAyT,WACAzjB,UACA+sD,eAEA,MAAMnuD,GAAOC,EAAAA,EAAAA,KAEP0+B,GAAkBx9B,EAAAA,EAAAA,GACtB,uBACAo2B,GAAW,WACX53B,GAGF,OACEuB,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL7B,UAAWg/B,EACXztB,MAAOA,EACPzP,OAAK,EACLojB,SAAUA,EACVzjB,QAASm2B,IAAY1S,EAAWzjB,OAAUzC,EAC1CyS,UAAWA,EACXiT,UAAW,EACXzhB,MAAO5C,EAAK4C,OAEXurD,EACM,C,oLCab,MA+NA,EA/N+B93C,EAC7B1Q,MACAyoD,YACA93C,OACA+3C,cACA1vB,kBACA2vB,gBACAC,eACA5uD,YACAiF,QACAupD,WACAtpC,WACA2pC,qBACAv9C,SACAuF,SACAi4C,WACA5qC,QACA+f,cACArtB,YACAE,WACA6lB,iBACAK,oBACAxmB,OACA2c,cACA1xB,UACAmlB,WACAmoC,uBACAl0B,kBAGA,IAAItH,GAAejxB,EAAAA,EAAAA,IAAuB,MACtC0D,IACFutB,EAAevtB,GAEjB,MAAOy1C,EAAWuT,EAAeC,IAAmBzqD,EAAAA,EAAAA,MAE9C,kBACJusB,EAAiB,oBAAEC,EAAmB,wBACtCC,EAAuB,kBAAEC,EAAiB,uBAC1CC,EAAsB,sBAAEC,IACtBC,EAAAA,EAAAA,GAAuBkC,GAAeoJ,GAEpCpL,GAAoB/wB,EAAAA,EAAAA,KAAY,IAAM+yB,EAAazwB,SAAS,IAE5D0uB,GAAiBhxB,EAAAA,EAAAA,KACrB,IAAM+yB,EAAazwB,QAAS2uB,QAAQ,mBACpC,IAGIC,GAAiBlxB,EAAAA,EAAAA,KACrB,KAAOw8B,EAAoB/iB,SAAS0S,cAAc,YAAc4G,EAAazwB,SAC1E6pB,cAAc,mCACjB,CAACqQ,IAGG/K,GAAYzxB,EAAAA,EAAAA,KAChB,KAAM,CAAG0xB,WAAY8K,KACrB,CAACA,KAGG,UACJrL,GAAS,UAAEC,GAAS,iBAAEC,GAAgB,iBAAEC,GAAkB7sB,MAAO8sB,KAC/DC,EAAAA,EAAAA,GACFhB,EACAO,EACAC,EACAE,EACAO,GAGIi9B,IAAmB1uD,EAAAA,EAAAA,KAAa4O,IACbA,EAAEwxB,SAAWxxB,EAAEuxB,SAAWvxB,EAAE2/B,UAC5B3/B,EAAEQ,SAAWu/C,EAAAA,GAAAA,MAClC//C,EAAEmV,gBACJ,GACC,IAEGhJ,IAAc/a,EAAAA,EAAAA,KAAa4O,IAC/B,KAAK8V,GAAa2pC,IAAwBptD,EAA1C,CAIA,GAAI+U,EAAM,CAGR,IADuBpH,EAAEwxB,SAAWxxB,EAAEuxB,SAAWvxB,EAAE2/B,WAC5B3/B,EAAEQ,SAAWu/C,EAAAA,GAAAA,MAAqB//C,EAAEQ,SAAWu/C,EAAAA,GAAAA,UACpE,OAGF//C,EAAEmV,gBACJ,CAEA9iB,EAAQ2N,EAAGwX,GAEP3C,EAAAA,KAAiB3S,IACnB09C,KACAllB,EAAAA,EAAAA,IAAQmlB,GAhBV,CAiBA,GACC,CAACJ,EAAoBjoC,EAAU1B,EAAU8pC,EAAevtD,EAAS6P,EAAQ29C,EAAiBz4C,IAEvF44C,GAA4BhgD,IAC3B8V,IAAa2pC,GAAoC,IAAbz/C,EAAEQ,SAAkBm/C,IAAyBpyB,IACtFvtB,EAAEM,kBACEq/C,EACFA,EAAqB3/C,GAErB8hB,EAAkB9hB,GACpB,EAGIigD,IAAkB7uD,EAAAA,EAAAA,KAAa4O,IAC/B0/C,GAAY7qC,EAAAA,MAGZ0Y,GAAmBvtB,EAAEQ,SAAWu/C,EAAAA,GAAAA,WAA0B1tD,GAC5DwvB,EAAwB7hB,GAEtBA,EAAEQ,SAAWu/C,EAAAA,GAAAA,OACV1tD,EAGH8Z,GAAYnM,GAFZ8hB,EAAkB9hB,IAItB,GACC,CAAC0/C,EAAUnyB,EAAgBl7B,EAASwvB,EAAyBC,EAAmB3V,KAE7Elb,IAAOC,EAAAA,EAAAA,KAEPqQ,IAAgBnP,EAAAA,EAAAA,GACpB,WACAxB,GACC8W,GAAY,eACbxF,GAAU,aACVuF,GAAU,SACVqO,GAAY,WACZ2pC,GAAsB,gBACtBC,GAAY,WACZ99B,GAAuB,gBACvB9M,GAAS,QACT+f,GAAe,cACfrtB,GAAa,YACbE,GAAY,aAGRw4C,GAAmB94C,EAAO,IAAM,MAEtC,OACEjV,EAAAA,GAAAA,cAAA,OACEyE,IAAKutB,EACLvzB,UAAW2Q,GACX3N,IAAK3C,GAAK4C,MAAQ,WAAQjE,EAC1BiG,MAAOA,EACPkuB,YAAaA,EACb0H,YAAaA,GAEbt5B,EAAAA,GAAAA,cAAC+tD,GAAgB,CACftvD,WAAWwB,EAAAA,EAAAA,GAAe,kBAAmBi6C,GAAa,SAAUzc,GACpE/Z,KAAOnO,OAAsB9X,EAAX,SAClBwX,KAAMA,EACNxQ,IAAKyoD,EACL/pC,SAAW5N,OAAe9X,EAAJ,EACtByC,SAAWqtD,GAAY7qC,EAAAA,GAAgB1I,GAAc2zC,GACrD/7B,YAAak8B,GACb1tC,eAAiBmtC,GAAYnyB,EAAkBzL,OAAoBlyB,GAElE0vD,EACA/3C,GACCpV,EAAAA,GAAAA,cAAA,KAAGvB,UAAY,QAAO2W,MAEvBC,GAAcrV,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,kBAAkBwuD,IAC9C53C,GAAa43C,GACbtpC,IAAa4pC,GAAYx9C,GACzB/P,EAAAA,GAAAA,cAACguD,EAAAA,EAAY,MAEdZ,GACCptD,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL7B,UAAU,iBACV8B,OAAK,EACLyP,MAAM,cACNvM,KAAK,UACLvD,QAASwiB,EAAAA,GAAemrC,QAA2BpwD,EACnDm0B,YAAclP,EAAAA,QAA0CjlB,EAA3BowD,IAE7B7tD,EAAAA,GAAAA,cAAA,KAAGvB,UAAY,QAAO2uD,OAGzBC,GAEFjyB,QAA0C39B,IAAxBgyB,GACjBzvB,EAAAA,GAAAA,cAACsyB,EAAAA,EAAI,CACH7b,OAAQ+Y,EACRc,iBAAkBA,GAClBC,iBAAkBA,GAClBH,UAAWA,GACXC,UAAWA,GACX3sB,MAAO8sB,GACP/xB,UAAU,wBACV8zB,WAAS,EACT7b,QAASkZ,EACTjZ,oBAAqBkZ,EACrBc,WAAY8K,GAEXL,EAAe17B,KAAKojB,GAClB,gBAAiBA,EAChB9iB,EAAAA,GAAAA,cAACiuD,EAAAA,EAAa,CAAC5tD,IAAKyiB,EAAOziB,KAAO,cAElCL,EAAAA,GAAAA,cAAC0xB,EAAAA,EAAQ,CACPrxB,IAAKyiB,EAAO5T,MACZkG,KAAM0N,EAAO1N,KACbstB,YAAa5f,EAAO4f,YACpB/e,UAAWb,EAAOsa,QAClBl9B,QAAS4iB,EAAOsa,SAEfta,EAAO5T,UAMd,C,6DC1RV,MCiBA,EANoC++C,EAAGxvD,eAEnCuB,EAAAA,GAAAA,cAAA,OAAKvB,WAAWwB,EAAAA,EAAAA,GDbG,uBCayBxB,I,6HCmBhD,MA8EA,EA3EmCyvD,EACjCh/C,QAAOzQ,YACPqG,UAASqD,WALc,IAKe2nC,cAAaqe,YACnDrrC,SAAQsrC,iBAER,MAAMC,GAAUxvD,EAAAA,EAAAA,OAET4X,EAAQ63C,IAAatnD,EAAAA,EAAAA,KAAS,GAE/BunD,GAAWxtD,EAAAA,EAAAA,IAA2B,OACtC,qBAAEoC,IAAyBoK,EAAAA,EAAAA,GAAkBkJ,GAE7C+3C,GAAkBvvD,EAAAA,EAAAA,KAAY,KAClCqvD,GAAU,GACV9pC,WAAW2pC,EAhBY,IAgBoBzlB,EAAAA,IAAoB,GAC9D,CAACylB,IAEEn0C,GAAc/a,EAAAA,EAAAA,KAAY,KAC1B6jB,GAEFurC,EAAQvrC,EAAOA,QAAQA,EAAOqZ,SAEhCqyB,GAAiB,GAChB,CAAC1rC,EAAQurC,EAASG,KAErB1uD,EAAAA,EAAAA,KAAU,IAAO2W,GAAS+tB,EAAAA,EAAAA,GAAsBgqB,QAAmB/wD,GAAY,CAACgZ,EAAQ+3C,KAExF1uD,EAAAA,EAAAA,KAAU,KACRyuD,EAAShtD,QAAU2C,OAAOsgB,WAAWgqC,EAAiBrmD,GAE/C,KACDomD,EAAShtD,UACX0uC,aAAase,EAAShtD,SACtBgtD,EAAShtD,aAAU9D,EACrB,IAED,CAAC0K,EAAUqmD,IAEd,MAAMC,GAAmBxvD,EAAAA,EAAAA,KAAY,KAC/BsvD,EAAShtD,UACX0uC,aAAase,EAAShtD,SACtBgtD,EAAShtD,aAAU9D,EACrB,GACC,IAEGixD,GAAmBzvD,EAAAA,EAAAA,KAAY,KACnCsvD,EAAShtD,QAAU2C,OAAOsgB,WAAWgqC,EAAiBrmD,EAAS,GAC9D,CAACA,EAAUqmD,IAEd,OACExuD,EAAAA,GAAAA,cAAC6vC,EAAAA,EAAM,CAACpxC,UAAU,yBAAyBqxC,YAAaA,GACtD9vC,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GAAe,eAAgBkD,EAAsB1E,GAChEyB,QAAS8Z,EACT20C,aAAcF,EACdG,aAAcF,GAEd1uD,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,WACZyQ,GAASlP,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,sBAAsByQ,GAC9CpK,GAEFge,GAAUsrC,GACTpuD,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACL0P,MAAM,oBACN9P,QAAS8Z,EACTvb,UAAU,uBAET2vD,IAIA,C,6DCpGb,MAAMS,EAAW,CACfh6C,EAAG,GAAImsC,EAAG,GAAIp2C,EAAG,GAAIkkD,GAAI,IA2E3B,GAAejyD,EAAAA,EAAAA,KA9DVuT,EACH7E,WAAW,EACX9H,OAAO,IACPsrD,SACA1+C,cACAC,UACApQ,cAEA,MAAMoM,EAASuiD,EAASprD,GAClBurD,EAAe1iD,EAAS2iD,EACxBC,EAAe5iD,EAAS,EACxB6iD,EAA+B,EAAfH,EAAmB9lD,KAAKkmD,GAExC9e,GAAYvvC,EAAAA,EAAAA,IAAuB,OAEzCjB,EAAAA,EAAAA,KAAU,KACR,IAAKwwC,EAAU/uC,QACb,OAGF,MAAM8tD,EAAM/e,EAAU/uC,QAAQ+tD,kBACxBC,EAAmBJ,EAAgBjmD,KAAKC,IAAID,KAAKiD,IA/BtC,IA+BwDZ,GA9BxD,GA8BmF4jD,EAE/FE,EAmBFA,EAAIC,kBAAiCvuC,aAAa,oBAAqBwuC,EAAiB7W,YAlBzFpI,EAAU/uC,QAAQk2C,UAAa,8BACC,EAAfyX,KAAmC,EAAfA,uBACV,EAAfA,sBACc,EAAfA,+IAMaC,KAAiBA,qCAChBI,qDAEjBP,mBACCE,mBACAA,6BAKX,GACC,CAAC5e,EAAW6e,EAAeD,EAAcF,EAAczjD,IAE1D,MAAM9M,GAAYwB,EAAAA,EAAAA,GACf,wBAAuBwD,IACxB4M,GAAe,cACf0+C,GAAU,SACVz+C,GAAW,YAGb,OACEtQ,EAAAA,GAAAA,cAAA,OACEyE,IAAK6rC,EACL7xC,UAAWA,EACXyB,QAASA,GACT,G,mFCvDN,MAwCA,GAAerD,EAAAA,EAAAA,KAxCa2yD,EAC1BpxD,KACAsnB,QACA0lC,WACArgD,QACAmP,OACAyL,UACAhC,WACA8rC,SACApuC,YACAiC,eAEA,MAAMxkB,GAAOC,EAAAA,EAAAA,KACPN,GAAYwB,EAAAA,EAAAA,GAChB,QACA0jB,GAAY,WACZ8rC,GAAU,gBACVpuC,GAAa,WAGf,OACErhB,EAAAA,GAAAA,cAAA,SAAOvB,UAAWA,EAAWgD,IAAK3C,EAAK4C,MAAQ,WAAQjE,GACrDuC,EAAAA,GAAAA,cAAA,SACEkjB,KAAK,QACLhJ,KAAMA,EACNnP,MAAOA,EACP3M,GAAIA,EACJunB,QAASA,EACTrC,SAAUA,EACVK,SAAUA,GAAY8rC,IAExBzvD,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,cACbuB,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,QAAQgD,IAAK3C,EAAK4C,MAAQ,YAASjE,GAAYioB,GAC9D0lC,GAAYprD,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,WAAWgD,IAAK3C,EAAK4C,MAAQ,YAASjE,GAAY2tD,IAEhF/pC,GAAarhB,EAAAA,GAAAA,cAACqpB,EAAAA,EAAO,MAChB,ICJZ,GAAexsB,EAAAA,EAAAA,KAjCkB2wB,EAC/BpvB,KACA8b,OACAuT,UACAC,WACA/J,WACA+rC,gBACApsC,eAEA,MAAM0nC,GAAe/rD,EAAAA,EAAAA,KAAa8jB,IAChC,MAAM,MAAEhY,GAAUgY,EAAMrC,cACxB4C,EAASvY,EAAOgY,EAAM,GACrB,CAACO,IAEJ,OACEtjB,EAAAA,GAAAA,cAAA,OAAK5B,GAAIA,EAAIK,UAAU,eACpBgvB,EAAQ/tB,KAAKyrD,GACZnrD,EAAAA,GAAAA,cAACwvD,EAAK,CACJt1C,KAAMA,EACNwL,MAAOylC,EAAOzlC,MACd0lC,SAAUD,EAAOC,SACjBrgD,MAAOogD,EAAOpgD,MACd4a,QAASwlC,EAAOpgD,QAAU2iB,EAC1B+hC,OAAQtE,EAAOsE,OACf9rC,SAAUA,EACVtC,UAAWquC,EAAgBA,IAAkBvE,EAAOpgD,WAAQtN,EAC5D6lB,SAAU0nC,MAGV,G,wEC7BV,MA2EA,GAAenuD,EAAAA,EAAAA,KA3EmB8yD,EAChCliC,UACAtkB,MAAM,EACNgD,OAAMshB,EAAUA,EAAQpsB,OAAS,EAAI,KACrCuuD,OAAO,EACPlqC,QACA3a,QACA4Y,WACAw8B,OACA1hD,YACAoxD,cACAvsC,eAEA,MAAMxkB,GAAOC,EAAAA,EAAAA,KACPisD,GAAe/rD,EAAAA,EAAAA,KAAa8jB,IAChCO,EAASsc,OAAO7c,EAAMrC,cAAc3V,OAAO,GAC1C,CAACuY,IAEEwsC,GAAgB7vD,EAAAA,EAAAA,GACpBxB,EACA,cACAklB,GAAY,WACZw8B,GAAQ,QAGJ4P,GAAa3wD,EAAAA,EAAAA,KAAQ,IACrBquB,EACM1iB,GAAS0iB,EAAQpsB,OAAS,GAAM,KAG/B0J,EAAQ5B,KADagD,EAAMhD,GAAOymD,GACK,KAEjD,CAACniC,EAAS1iB,EAAOoB,EAAKhD,EAAKymD,IAE9B,OACE5vD,EAAAA,GAAAA,cAAA,OAAKvB,UAAWqxD,GACbpqC,GACC1lB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,iBAAiBgD,IAAK3C,EAAK4C,MAAQ,WAAQjE,GACxDuC,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,QAAQgD,IAAI,QAAQikB,IAClC+H,GACAztB,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,QAAQgD,IAAI,QAAQouD,EAAcA,EAAY9kD,GAASA,IAI7E/K,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,eACbuB,EAAAA,GAAAA,cAAA,OACEvB,UAAU,oBACViF,MAAQ,UAASqsD,OAEnB/vD,EAAAA,GAAAA,cAAA,SACEmJ,IAAKA,EACLgD,IAAKA,EACLpB,MAAOA,EACP6kD,KAAMA,EACN1sC,KAAK,QACLzkB,UAAU,qBACV6kB,SAAU0nC,IAEXv9B,GACCztB,EAAAA,GAAAA,cAAA,OAAKvB,UAAU,kBACZgvB,EAAQ/tB,KAAI,CAACyrD,EAAQ6E,IACpBhwD,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GAAe,6BAA8B+vD,IAAUjlD,GAAS,UAC3E7K,QAASA,IAAMojB,EAAS0sC,IAEvB7E,OAMP,G,6HCtDV,MAiHA,GAAetuD,EAAAA,EAAAA,KAjHmBozD,EAChCxrD,MACAwoD,WACAiD,2BACAnlD,QACA63C,UACAnkD,YACA0xD,UACA9uC,YACA+uC,eACAC,yBACA5uC,cACAkC,WACAV,eACAmC,WACAkrC,kBACAhtC,WACAitC,UACAC,UACAC,SACAC,qBAGA,IAAIvuC,GAAWphB,EAAAA,EAAAA,IAAyB,MACpC0D,IACF0d,EAAW1d,GAGb,MAAOksD,EAAgBC,EAAkBC,IAAsB5tD,EAAAA,EAAAA,GAAQktD,IAEvEW,EAAAA,EAAAA,GAAoB3uC,EAAUmuC,EAAiBO,IAE/C/wD,EAAAA,EAAAA,KAAU,KACHqiB,EAAS5gB,UAIV4uD,EACFhuC,EAAS5gB,QAAQohB,QAEjBR,EAAS5gB,QAAQ04C,OACnB,GACC,CAACkW,EAAS1uC,IAEb,MAAM3iB,GAAOC,EAAAA,EAAAA,KAqBPkgC,GAAgBhgC,EAAAA,EAAAA,KAAa4O,IACjC,GAAc,cAAVA,EAAExN,KAAiC,UAAVwN,EAAExN,IAAiB,CAC9C,MAAM8qB,EAAUzS,SAAS0S,cAAe,IAAG8kC,sBACvC/kC,GACFA,EAAQxI,OAEZ,IACC,CAACutC,IAEJ,OACElwD,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GAAe,cAAexB,EAAWkyD,GAAkB,aACtElvD,IAAK3C,EAAK4C,MAAQ,WAAQjE,GAEzBwvD,EACDjtD,EAAAA,GAAAA,cAAA,SACEyE,IAAK0d,EACL/jB,GAAIwkD,EACJ1/B,KAAK,OACLzhB,IAAI,OACJggB,YAAaA,GAAe3iB,EAAK,UACjCL,UAAU,eACVsM,MAAOA,EACP4Y,SAAUA,EACVV,aAAcA,EACdK,SA5CN,SAAsBP,GACpB,MAAM,cAAErC,GAAkBqC,EAC1BO,EAAS5C,EAAc3V,MACzB,EA0CMylD,QAxCN,WACEI,IACIJ,GACFA,GAEJ,EAoCMC,OAlCN,WACEI,IACIJ,GACFA,GAEJ,EA8BMrtC,UAAW6b,IAEbj/B,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,gBACbuB,EAAAA,GAAAA,cAACu2B,EAAAA,EAAc,CAAC9f,OAAQ5W,QAAQwhB,GAAY5iB,UAAU,QACpDuB,EAAAA,GAAAA,cAAC6lB,EAAAA,EAAO,CAAC7V,MAAOogD,EAAcW,gBAAiBV,EAAwBnwD,QAASwwD,MAEhFrvC,IAActW,GAASqa,IAAamrC,GACpCvwD,EAAAA,GAAAA,cAACM,EAAAA,EAAM,CACLC,OAAK,EACLkD,KAAK,OACLuM,MAAM,cACN9P,QAASqwD,GAETvwD,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,gBAGhB,G,mFClIV,MAuCA,EAvCqC83B,EACnC9f,SACA8mB,WACAxR,WACA3tB,KACAK,YACAyB,UACA+sD,WACA+D,oBACAC,+BAEA,MAAMC,GAAavwD,EAAAA,EAAAA,GAAY8V,GACzB06C,GAAexwD,EAAAA,EAAAA,GAAYssD,GAC3BmE,GAAkBrwD,EAAAA,EAAAA,MAClBswD,OAA+B5zD,IAAfyzD,GAChB,aACJ9jD,EAAY,qBACZjK,IACEoK,EAAAA,EAAAA,GACFkJ,IAAW8mB,OACX9/B,EACA4zD,IAAkBJ,GAClBllC,QAAmBtuB,EACnBuzD,GAOF,OAJIE,IAAez6C,IACjB26C,EAAgB7vD,QAAU4vD,IAIzB/jD,GAAgBmwB,IACfv9B,EAAAA,GAAAA,cAAA,OAAK5B,GAAIA,EAAIK,WAAWwB,EAAAA,EAAAA,GAAexB,EAAW0E,GAAuBjD,QAASA,GAC/EuW,EAASw2C,EAAWmE,EAAgB7vD,QAExC,C,wECpCL,MAkBA,EAlB+B+vD,EAC7BC,UAAU,cACVnc,YAAY,OACZ1pC,QACAC,SACA6lD,mBACAC,SACAhzD,gBAEA,MAAMizD,GAAazxD,EAAAA,EAAAA,GAAe,WAAYsxD,EAASnc,EAAW32C,EAAWgzD,GAAU,UAEjF/tD,EAAQ8tD,EADO9lD,GAASC,EAAW,iBAAgBD,KAASC,SAAWlO,GAEzEkG,EAAAA,EAAAA,GAAW9D,QAAQ6L,IAAW,UAASA,MAAW7L,QAAQ8L,IAAY,WAAUA,OACpF,OACE3L,EAAAA,GAAAA,cAAA,OAAKvB,UAAWizD,EAAYhuD,MAAOA,GAAQ+tD,GAAU,IAAe,C,6DCXxE,MA6CA,GAAe50D,EAAAA,EAAAA,KA7CgB80D,EAC7BvzD,KACA8b,OACAnP,QACA2a,QACAC,WAAU,EACVhC,WACA4pC,WACAhiB,cACAjoB,WACAsuC,cAEA,MAAM5G,GAAe/rD,EAAAA,EAAAA,KAAa4O,IAC5ByV,GACFA,EAASzV,GAGP+jD,GACFA,EAAQ/jD,EAAE6S,cAAciF,QAC1B,GACC,CAACrC,EAAUsuC,IAERnzD,GAAYwB,EAAAA,EAAAA,GAChB,WACA0jB,GAAY,WACZ4pC,GAAY,WACZhiB,GAAe,gBAGjB,OACEvrC,EAAAA,GAAAA,cAAA,SAAOvB,UAAWA,EAAWyQ,MAAOwW,GAClC1lB,EAAAA,GAAAA,cAAA,SACEkjB,KAAK,WACL9kB,GAAIA,EACJ8b,KAAMA,EACNnP,MAAOA,EACP4a,QAASA,EACThC,SAAUA,EACVL,SAAU0nC,IAEZhrD,EAAAA,GAAAA,cAAA,QAAMvB,UAAU,WACV,G,qJCzCZ,MAAMizD,EACI,cA0EV,GAAe70D,EAAAA,EAAAA,KAtEWg1D,EACxBpzD,YACAyQ,QACAnR,WACA+zD,YACAC,aACAC,gBACAC,oBACA/xD,UACAmlB,eAGA,MAAM6sC,GAASnxD,EAAAA,EAAAA,IAAuB,MAwCtC,OAtCAjB,EAAAA,EAAAA,KAAU,KAMR,GAJI/B,QAAkCN,IAAtBw0D,GAAmCC,EAAO3wD,SACxD2wD,EAAO3wD,QAAQinC,UAAUhlC,IAAIkuD,IAG1B3zD,QAAkCN,IAAtBw0D,EACf,OAGF,MAAME,EAAQD,EAAO3wD,QACf6wD,EAAYD,EAAM3T,cAAeyO,SAASgF,GAChD,IAAKG,EAKH,YAHIr0D,IAAao0D,EAAM3pB,UAAU6pB,SAASX,IACxCS,EAAM3pB,UAAUhlC,IAAIkuD,IAKxB,MAAMY,EAAaH,EAAM/mC,cAA2B,aAC9CmnC,EAAiBH,EAAUhnC,cAA2B,aAGtDonC,EAAYD,EAAe/T,cAAeiU,WAAaH,EAAW9T,cAAeiU,WACjFC,EAAcH,EAAeI,YAAcL,EAAWK,YAE5DJ,EAAe/pB,UAAUC,OAAO,WAChC6pB,EAAW9pB,UAAUC,OAAO,WAC5B6pB,EAAW5uD,MAAMkhC,UAAa,eAAc4tB,sBAA8BE,YAC1EE,EAAAA,EAAAA,GAAYN,GACZA,EAAW9pB,UAAUhlC,IAAI,WACzB8uD,EAAW5uD,MAAMkhC,UAAY,OAE7BwtB,EAAU5pB,UAAUC,OAAOipB,GAC3BS,EAAM3pB,UAAUhlC,IAAIkuD,EAAkB,GACrC,CAAC3zD,EAAUk0D,IAGZjyD,EAAAA,GAAAA,cAAA,OACEvB,WAAWwB,EAAAA,EAAAA,GAAe,MAAOxB,GACjCyB,QAASA,IAAMA,EAAQmlB,GACvB5gB,IAAKytD,GAELlyD,EAAAA,GAAAA,cAAA,aACGyP,EAAAA,EAAAA,GAAWP,GACXrP,QAAQkyD,IACP/xD,EAAAA,GAAAA,cAAA,QAAMvB,WAAWwB,EAAAA,EAAAA,GAAe,QAAS+xD,GAhEpC,uBAgE+ED,GAErFD,GAAa9xD,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,4BAC3BuB,EAAAA,GAAAA,cAAA,KAAGvB,UAAU,cAEX,IC3DJo0D,EAAkBza,EAAAA,GAAS,IAAME,EAAAA,GAAa,IAAM,IA6D1D,GAAez7C,EAAAA,EAAAA,KA3Dei2D,EAC5BC,OAAMC,aAAYC,YAAW9sC,MAAK+sC,kBAGlC,MAAMlhC,GAAejxB,EAAAA,EAAAA,IAAuB,MACtCkxD,GAAoBtxD,EAAAA,EAAAA,GAAYsyD,IAEtCE,EAAAA,EAAAA,GAAoBnhC,OAAcv0B,GAAW,IAG7CqC,EAAAA,EAAAA,KAAU,KACR,MAAMwwC,EAAYte,EAAazwB,SACzB,YAAEi+C,EAAW,YAAEvY,EAAW,WAAEwY,GAAenP,EACjD,GAAIkP,GAAevY,EACjB,OAGF,MAAMmsB,EAAmB9iB,EAAU+iB,WAAWJ,GAC9C,IAAKG,EACH,OAGF,MAAQX,WAAYa,EAAqBrsB,YAAassB,GAAyBH,EACzEI,EAAUF,EAAuBrsB,EAAc,EAAMssB,EAAuB,EAG9ErqD,KAAKi+B,IAAIqsB,EAAU/T,GA9BK,KAkC5BgU,EAAAA,EAAAA,GAA2BnjB,EAAWkjB,EAASX,EAAgB,GAC9D,CAACI,IAEJ,MAAMn0D,GAAOC,EAAAA,EAAAA,KAEb,OACEiB,EAAAA,GAAAA,cAAA,OACEvB,UAAY,sCAAoC0nB,EAAM,MAAQ,IAC9D1hB,IAAKutB,EACLvwB,IAAK3C,EAAK4C,MAAQ,WAAQjE,GAEzBs1D,EAAKrzD,KAAI,CAACg0D,EAAKj0D,KAAC,IAAAk0D,EAAA,OACf3zD,EAAAA,GAAAA,cAAC6xD,EAAG,CACFxxD,IAAW,QAARszD,EAAED,EAAIt1D,UAAE,IAAAu1D,EAAAA,EAAID,EAAIxkD,MAEnBA,MAAS8jD,GAAcU,EAAIt1D,KAAO+/B,EAAAA,IAAmCu1B,EAAIxkD,MAAtBpQ,EAAK40D,EAAIxkD,OAC5DnR,SAAU0B,IAAMwzD,EAChBnB,UAAW4B,EAAI5B,UACfC,WAAY2B,EAAI3B,WAChBC,cAAe0B,EAAI1B,cACnBC,kBAAmBA,EACnB/xD,QAASgzD,EACT7tC,SAAU5lB,GACV,IAEA,G,yFC3EH,MAAMm0D,EAAwC,CACnD,CAAEx+C,KAAM,OAAQlG,MAAO,iBAAkB7O,IAAK,YAC9C,CAAE+U,KAAM,eAAgBlG,MAAO,oBAAqB7O,IAAK,eACzD,CAAE+U,KAAM,QAASlG,MAAO,eAAgB7O,IAAK,UAC7C,CAAE+U,KAAM,UAAWlG,MAAO,iBAAkB7O,IAAK,YACjD,CAAE+U,KAAM,OAAQlG,MAAO,aAAc7O,IAAK,SAG/BwzD,EAAwC,CACnD,CAAEz+C,KAAM,OAAQlG,MAAO,cAAe7O,IAAK,gBAC3C,CAAE+U,KAAM,UAAWlG,MAAO,iBAAkB7O,IAAK,mBACjD,CAAE+U,KAAM,YAAalG,MAAO,aAAc7O,IAAK,gBAG3CyzD,EAA2D,CAC/D,kBAAmB,OAAQ,WAAY,SAAU,WAAY,eAEzDC,EAA2D,CAC/D,kBAAmB,kBAAmB,eAAgB,eAGjD,SAASC,EAAkBC,EAAqBC,EAA+BC,GACpF,IAAIC,EAA4B,GAC5BC,EAA6C,GAEjD,GAAa,aAATH,EAAqB,CACvB,MAAM,gBACJI,KACGC,GACDJ,EACAF,EAAMM,gBAAkB,CAAC,GACzBC,EAAAA,EAAAA,IACAP,EAAMQ,OACNX,GAGJM,EAAkBE,GAAmB,GACrCD,EAAqBh1D,OAAOm1C,KAAK+f,GAC9Bh1D,QAAQc,GAAQR,QAAQ00D,EAAel0D,KAC5C,KAAO,CACL,MAAM,gBACJq0D,KACGC,GACDR,EACAF,EAAMU,gBAAkB,CAAC,GACzBH,EAAAA,EAAAA,IACAP,EAAMQ,OACNV,GAGJK,EAAkBM,GAAmB,GACrCL,EAAqBh1D,OAAOm1C,KAAKmgB,GAC9Bp1D,QAAQc,GAAQR,QAAQ80D,EAAet0D,KAC5C,CAEA,MAAO,CACL+zD,kBACAC,oBAEJ,CAEA,SAASO,EAAuBL,GAC9B,GAAIA,EAAgB,CAClB,MAAM,gBACJD,KACGO,GACDN,EAEJ,GACEl1D,OAAOC,OAAOu1D,GAASt1D,OAAOM,SAASwB,OAAS,GAC5CizD,GAAiBjzD,OAErB,MAAO,GAGT,GAAIwzD,EAAQC,KACV,MAAO,OACF,GAAID,EAAQE,OACjB,MAAO,SACF,GAAIF,EAAQG,SACjB,MAAO,WACF,GAAIH,EAAQI,SACjB,MAAO,WACF,GAAIJ,EAAQK,YACjB,MAAO,cAEX,CAEA,MAAO,EACT,CAwBA,MAAMC,EAA8B,CAClCjB,KAAM,SACNkB,WAAY,GACZX,OAAQ,CACNvlD,MAAO,GACPolD,gBAAiB,GACjBI,gBAAiB,KAIfW,EAA6DA,CACjEpB,EACAnxC,KAEA,OAAQA,EAAOI,MACb,IAAK,WACH,MAAO,IACF+wC,EACHQ,OAAQ,IACHR,EAAMQ,OACTvlD,MAAO4T,EAAOqZ,SAEhB+d,WAAW,GAEf,IAAK,qBACH,MAAO,IACF+Z,EACHM,gBAAgBC,EAAAA,EAAAA,IACdP,EAAMQ,OACNX,IAGN,IAAK,qBACH,MAAO,IACFG,EACHU,gBAAgBH,EAAAA,EAAAA,IACdP,EAAMQ,OACNV,IAGN,IAAK,oBACH,MAAO,IACFE,EACHM,eAAgBzxC,EAAOqZ,QACvBi5B,WAAY,IAEhB,IAAK,oBACH,MAAO,IACFnB,EACHU,eAAgB7xC,EAAOqZ,QACvBi5B,WAAY,IAEhB,IAAK,cACH,OAAInB,EAAMM,eACD,IACFN,EACHQ,OAAQ,KACHa,EAAAA,EAAAA,IAAKrB,EAAMQ,OAAQX,GACtB5kD,MAAO+kD,EAAMQ,OAAOvlD,MAAQ+kD,EAAMQ,OAAOvlD,MAAQ0lD,EAAuBX,EAAMM,mBAC3EN,EAAMM,gBAEXA,oBAAgB92D,EAChB23D,WAAY,GACZlb,WAAW,GAEJ+Z,EAAMU,eACR,IACFV,EACHQ,OAAQ,KACHa,EAAAA,EAAAA,IAAKrB,EAAMQ,OAAQV,MACnBE,EAAMU,gBAEXA,oBAAgBl3D,EAChB23D,WAAY,GACZlb,WAAW,GAGN+Z,EAEX,IAAK,aAAc,CACjB,MAAQ71D,GAAI86B,EAAQ,YAAE/kB,KAAgBsgD,GAAW3xC,EAAOqZ,QAExD,MAAO,CACL+3B,KAAM,OACNh7B,WACAu7B,SACAW,WAAY,GAEhB,CACA,IAAK,gBACH,MAAO,IACFnB,EACHmB,WAAYtyC,EAAOqZ,SAGvB,IAAK,eACH,MAAO,IACF83B,EACH5yC,UAAWyB,EAAOqZ,SAGtB,IAAK,WACH,MAAO,IACF83B,EACH1yC,MAAOuB,EAAOqZ,SAGlB,IAAK,QACH,OAAOg5B,EACT,QACE,OAAOlB,EAAM,EAQnB,EAJ0BsB,KACjBC,EAAAA,EAAAA,GAAWH,EAAgBF,E,oEChP7B,SAASrR,EAAwB2R,EAAmBC,EAAaC,EAAYC,GAAU,GAC5F,OAAOvf,EAAAA,EAAAA,IAAsBwf,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMC,EAAIC,EACf,CAEO,SAASE,EAAwBL,EAAmBC,EAAaC,EAAYC,GAAU,EAAOG,GAAS,GAC5G,OAAO31B,EAAAA,EAAAA,IAAsBy1B,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMC,EAAIC,EAASG,EACxB,C,wIC+OA,QAxOuB3tD,CACrB4tD,EACAC,EACAC,EACAtyD,EACAuyD,EACAC,EACAC,EACA9mC,GAAa,EACb+mC,EACAC,EACAC,GAAa,EACbC,GAAoB,KAGpB,MAAMC,GAAgB31D,EAAAA,EAAAA,IAAoC,OAEnDiH,EAAW2uD,IAAgB3vD,EAAAA,EAAAA,KAAS,GAC3C,IAAI4vD,EAAgB5uD,EAEpB,MAAO1D,EAAcuyD,IAAmB7vD,EAAAA,EAAAA,IAAiB,GAEnDW,GAAoB1I,EAAAA,EAAAA,KAAY,KACpC03D,GAAa,GACTJ,GAAeA,GAAe,GACjC,CAACA,KAEJ3L,EAAAA,EAAAA,IAAc,KACZ8L,EAAcn1D,SAAUu1D,EAAAA,EAAAA,IAASd,EAASE,GAAW,CAACa,EAAWlpD,KAC/D,OAAQkpD,GACN,IAAK,SAAU,CACb,MAAM,UACJC,EAAS,gBAAEC,EAAe,YAAEC,EAAW,MAAEC,GACvCT,EAAcn1D,QAClBo1D,GAAa,IAEbS,EAAAA,EAAAA,GAAqBhB,EAqJ/B,SAA2BM,GACzB,IAAIW,EAAsC,CAAC,EAC3C,GAAIX,GAAiBA,EAAcn1D,QAAS,CAC1C,MAAM,KACJuvC,EAAI,MAAEG,EAAK,eAAE/oC,EAAc,MAAEivD,EAAK,iBAAEG,EAAgB,qBAAEC,EAAoB,QAAEltC,EAAO,OAAEC,GACnFosC,EAAcn1D,QAClB81D,EAAgB,CACdvmB,KAAMA,KACJA,EAAKqmB,EAAMvzD,IAAI,EAEjBqtC,MAAOA,KACLA,GAAO,EAETumB,KAAMA,KACJvmB,IACA/oC,EAAe,IACfrJ,EAAAA,EAAAA,MAAa44D,kBAAkB,EAEjCC,aAAe30C,IACb,MAAM40C,EAAW50C,EAAM60C,YA9ML,GA+MlB1vD,EAAegB,KAAKiD,IAAIgrD,EAAMxuC,YAAcgvC,EAAU,GAAG,EAE3DE,YAAc90C,IACZ,MAAM40C,EAAW50C,EAAM60C,YAlNL,GAmNlB1vD,EAAegB,KAAKC,IAAIguD,EAAMxuC,YAAcgvC,EAAUR,EAAMhvD,UAAU,EAExE2vD,OAAS/0C,IACHA,EAAMg1C,UACR7vD,EAAe6a,EAAMg1C,SACvB,GAICztC,MACH+sC,EAAcW,UAAY,KACxBV,GAAkB,GAGjBjtC,MACHgtC,EAAcY,cAAgB,KAC5BV,GAAsB,EAG5B,CACA,OAAOF,CACT,CAlMyCa,CAAkBxB,KACjDyB,EAAAA,EAAAA,IAAiB,WACjB,MAAM,YAAEC,IAAgB96D,EAAAA,EAAAA,KAAe2D,EAAAA,EAAAA,OACvC+1D,EAAUoB,EAAYC,QACtBnB,EAAYr3D,QAAQu4D,EAAY1mD,UAChC,MAAMvJ,EAAWgvD,EAAMhvD,UAAYy3B,OAAO04B,SAASnB,EAAMhvD,UAAYgvD,EAAMhvD,SAAW8tD,GACpE,UAAdC,GAAyB/tD,EAAWowD,EAAAA,MACtCtB,EAAgBmB,EAAYI,eAG9BC,EAAAA,EAAAA,IAAiB,CACftwD,SAAUgvD,EAAMhvD,UAAY,EAC5BqwD,aAAcrB,EAAMqB,aACpB74B,SAAUw3B,EAAMxuC,cAElB,KACF,CACA,IAAK,eAAgB,CACnB,MAAM,MAAEwuC,GAAUT,EAAcn1D,SAChCk3D,EAAAA,EAAAA,IAAiB,CACftwD,SAAUgvD,EAAMhvD,UAAY,EAC5BqwD,aAAcrB,EAAMqB,aACpB74B,SAAUw3B,EAAMxuC,cAElB,KACF,CACA,IAAK,UACHguC,GAAa,IACbwB,EAAAA,EAAAA,IAAiB,UACjB,MACF,IAAK,eAAgB,CACnB,MAAM,MAAEhB,GAAUT,EAAcn1D,QAC1B4G,EAAWgvD,EAAMhvD,UAAYy3B,OAAO04B,SAASnB,EAAMhvD,UAAYgvD,EAAMhvD,SAAW8tD,EACjFQ,GAAmBI,EAAgBM,EAAMxuC,YAAcxgB,GAC5D,KACF,CACA,IAAK,WACHgwD,EAAAA,EAAAA,IAAiB,UAKrBhC,IAAWY,KAAalpD,EAAE,GACzByoD,EAAa3uD,GAEhB,MAAM,MAAEwvD,GAAUT,EAAcn1D,QAE3ByG,GAAcmvD,EAAMpmB,SACvB4lB,GAAa,GAGbC,GAAgB,GAGdP,GACFA,EAAOc,EACT,GACC,CAACnB,KAEJl2D,EAAAA,EAAAA,KAAU,KACJkI,GAAaouD,IAAUsC,EAAAA,EAAAA,IAAetC,EAAS,GAClD,CAACA,EAAUpuD,IAEd,MAAM,KACJ8oC,EAAI,MACJG,EAAK,eACL/oC,EAAc,MACdivD,EAAK,QACLjmB,EAAO,UACP8lB,EAAS,KACTQ,EAAI,QACJntC,EAAO,OACPC,EAAM,iBACNgtC,EAAgB,qBAChBC,EAAoB,gBACpBN,EAAe,YACfC,GACER,EAAcn1D,QACZ4G,EAAWgvD,EAAMhvD,UAAYy3B,OAAO04B,SAASnB,EAAMhvD,UAAYgvD,EAAMhvD,SAAW8tD,GAGtFn2D,EAAAA,EAAAA,KAAU,MACJqI,IAAawwD,EAAAA,EAAAA,GAAwBxB,IAAWV,GAClDI,EAAgBM,EAAMxuC,YAAcxgB,EACtC,GACC,CAACA,EAAU7D,EAAc6yD,EAAOV,KAGnC32D,EAAAA,EAAAA,KAAU,IAAM,KACdoxC,EAAQslB,EAAW,GAClB,CAACtlB,EAASslB,KAGbtgB,EAAAA,EAAAA,IAAsB,EAAE0iB,EAAgBC,MAClCD,IAAmBrpC,GAAc3rB,IAAQi1D,GAKzC1B,EAAMvzD,KAAOuzD,EAAMpmB,QAInBxhB,GAAc3rB,IAAQoE,GACxB8oC,EAAKltC,EACP,GACC,CAAC2rB,EAAY3rB,EAAKoE,EAAW8oC,EAAMqmB,EAAMvzD,IAAKuzD,EAAMpmB,SAEvD,MAAM+nB,GAAgB75D,EAAAA,EAAAA,KAAY,KAC5B2E,GACFktC,EAAKltC,EACP,GACC,CAACA,EAAKktC,IAEH7oC,GAAYhJ,EAAAA,EAAAA,KAAY,KACxB+I,EACFipC,IAEA6nB,GACF,GACC,CAAC7nB,EAAO6nB,EAAe9wD,IAEpB+wD,GAAU95D,EAAAA,EAAAA,KAAa+5D,IAC3B9wD,EAAe8wD,GACX7wD,GACF0uD,EAAgBM,EAAMxuC,YAAcxgB,EACtC,GACC,CAACA,EAAUgvD,EAAOjvD,IAErB,MAAO,CACLF,UAAW4uD,EACXtyD,eACA2D,YACAgpC,QACAH,KAAMgoB,EACNtB,OACAtvD,eAAgB6wD,EAChB/B,YACAiC,WAAY9B,EACZhvD,WACAmvD,mBACAC,uBACAltC,UACAC,SACA2sC,kBACAC,cACD,C,mFCnMY,SAASr8C,EACtB1Y,EACAuoD,GAAa,EACbwO,EACA5sD,EAPa,EAQb6sD,EACAC,GAGA,MAAMxwD,GAAY7H,EAAAA,EAAAA,IAA0B,MACtCs4D,GAAYt4D,EAAAA,EAAAA,MA+ClB,OA7CA6pD,EAAAA,EAAAA,IAAc,KACPF,IACH2O,EAAU93D,SAAU,EACtB,GACC,CAACY,EAASuoD,KAEb5qD,EAAAA,EAAAA,KAAU,KACR,MAAMwL,EAAS1C,EAAUrH,QAEzB,IAAKY,IAAYmJ,GAAUo/C,GAAc2O,EAAU93D,QACjD,OAGF83D,EAAU93D,SAAU,EAEpB,MAAM+3D,EAAM,IAAIC,MAEVC,EAAcA,KAClBluD,EAAOI,MAAQytD,GAAkBG,EAAI5tD,MACrCJ,EAAOK,OAASytD,GAAmBE,EAAI3tD,OAEvC,MAAMC,EAAMN,EAAOO,WAAW,KAAM,CAAE4tD,OAAO,IAEzC3+C,EAAAA,KACFlP,EAAIrM,OAAU,QAAO+M,QAGvBV,EAAI8tD,UAAUJ,EAAe,GAAThtD,EAAsB,GAATA,EAAYhB,EAAOI,MAAiB,EAATY,EAAYhB,EAAOK,OAAkB,EAATW,GAEnFwO,EAAAA,KACH6+C,EAAAA,EAAAA,GAAS/tD,EAAK,EAAG,EAAGN,EAAOI,MAAOJ,EAAOK,OAAQW,EA5CtC,EA6Cb,EAGFgtD,EAAIM,OAAS,KACPV,EACFt2C,sBAAsB42C,GAEtBA,GACF,EAGFF,EAAI11D,IAAMzB,CAAO,GAChB,CAACA,EAASuoD,EAAY0O,EAAiBD,EAAgB7sD,EAAQ4sD,IAE3DtwD,CACT,C,4GCrDA,MA8HA,EA9H8ByyB,EAC5Bp+B,OACA2C,OACAs5B,WACA1D,WACA9jB,UACAknB,kBACAsC,eACAC,yBACAjO,gBAWC2sC,GAAa,MACD96D,EAAAA,EAAAA,KAAb,MAEM,OAAEgU,GAAWnT,GAAQ,CAAC,EAE5B,OAD+BA,GAAMxB,GAAO07D,EAAAA,IACrC,IAkGL,C,6DC9HJ,SAAS5kD,EAAUrH,GACjBA,EAAEksD,2BACFlsD,EAAEmV,iBACFnV,EAAEM,iBACJ,CAEA,MAyIA,EAzI+B2hB,CAC7BrV,EACAu/C,EACAC,EACAC,KAEA,MAAO1qC,EAAmB2qC,IAAwBnzD,EAAAA,EAAAA,KAAS,IACpDyoB,EAAqB8sB,IAA0Bv1C,EAAAA,EAAAA,SAAsCvJ,GAEtFiyB,GAA0BzwB,EAAAA,EAAAA,KAAa4O,IACtCmsD,GAA+B,IAAbnsD,EAAEQ,QACtBR,EAAE0V,OAAuBilB,UAAUhlC,IAAI,eAC1C,GACC,CAACw2D,IAEErqC,GAAoB1wB,EAAAA,EAAAA,KAAa4O,IACpCA,EAAE0V,OAAuBilB,UAAUC,OAAO,gBAEvCuxB,GAAmBC,GAAwBpsD,EAAE0V,OAAuBha,QAAQ,aAGhFsE,EAAEmV,iBAEEyM,IAIJ0qC,GAAqB,GACrB5d,EAAuB,CAAEnwC,EAAGyB,EAAEG,QAAS3B,EAAGwB,EAAE8S,WAAU,GACrD,CAACq5C,EAAgBC,EAAqBxqC,IAEnCG,GAAyB3wB,EAAAA,EAAAA,KAAY,KACzCk7D,GAAqB,EAAM,GAC1B,IAEGtqC,GAAwB5wB,EAAAA,EAAAA,KAAY,KACxCs9C,OAAuB9+C,EAAU,GAChC,IA0FH,OAvFAqC,EAAAA,EAAAA,KAAU,KACR,GAAIk6D,IAAmBt3C,EAAAA,IAAgBw3C,EACrC,OAGF,MAAM/uC,EAAU1Q,EAAWlZ,QAC3B,IAAK4pB,EACH,OAGF,IAAIivC,EAEJ,MAAMC,EAAsBA,KACtBD,IACFnqB,aAAamqB,GACbA,OAAQ38D,EACV,EA+CI68D,EAAuBzsD,IACvBmsD,IAGJK,IAEAD,EAAQl2D,OAAOsgB,YAAW,IAlDK+1C,KAC/BF,IAEA,MAAM,QAAErsD,EAAO,QAAE2S,EAAO,OAAE4C,GAAWg3C,EAAcC,QAAQ,GAEvD/qC,GAAwBwqC,GAAwB12C,EAAuBha,QAAQ,aAKnF4hB,EAAQ6T,iBAAiB,YAAanxB,IAEhCuqC,EAAAA,IAAUrZ,EAAAA,IACZva,YAAW,KACT2G,EAAQ+T,oBAAoB,YAAahqB,EAAW,CAClDulD,SAAS,IAEXtvC,EAAQ+T,oBAAoB,QAAShqB,EAAW,CAC9CulD,SAAS,GACT,GAtFwB,KAyF9BvlD,EAAUrH,EAAE,GACX,CACD4sC,MAAM,EACNggB,SAAS,IAIP17B,EAAAA,IAAUqZ,EAAAA,KACZjtB,EAAQ6T,iBAAiB,YAAa9pB,EAAW,CAC/CulC,MAAM,EACNggB,SAAS,IAEXtvC,EAAQ6T,iBAAiB,QAAS9pB,EAAW,CAC3CulC,MAAM,EACNggB,SAAS,KAIbN,GAAqB,GACrB5d,EAAuB,CAAEnwC,EAAG4B,EAAS3B,EAAGsU,IAAU,EASlB+5C,CAAwB7sD,IAtHjC,KAsH0D,EASnF,OALAsd,EAAQ6T,iBAAiB,aAAcs7B,EAAqB,CAAEK,SAAS,IACvExvC,EAAQ6T,iBAAiB,cAAeq7B,GAAqB,GAC7DlvC,EAAQ6T,iBAAiB,WAAYq7B,GAAqB,GAC1DlvC,EAAQ6T,iBAAiB,YAAaq7B,EAAqB,CAAEM,SAAS,IAE/D,KACLN,IACAlvC,EAAQ+T,oBAAoB,aAAco7B,GAC1CnvC,EAAQ+T,oBAAoB,cAAem7B,GAAqB,GAChElvC,EAAQ+T,oBAAoB,WAAYm7B,GAAqB,GAC7DlvC,EAAQ+T,oBAAoB,YAAam7B,EAAoB,CAC9D,GACA,CAAC5qC,EAAqBuqC,EAAgBE,EAAwBz/C,EAAYw/C,IAEtE,CACLzqC,oBACAC,sBACAC,0BACAC,oBACAC,yBACAC,wBACD,C,kDC5IH,MAEM+qC,EAAa,CACjBlvD,MAAO,EAAGoC,KAAM,EAAGnC,OAAQ,EAAGiV,IAAK,GAGtB,SAAS6P,EACtBgd,EACAzd,EACAC,EACAE,EACAO,GAEA,MAAON,EAAWyqC,IAAgB7zD,EAAAA,EAAAA,IAA2B,UACtDqpB,EAAWyqC,IAAgB9zD,EAAAA,EAAAA,IAA2B,WACtDspB,EAAkByqC,IAAuB/zD,EAAAA,EAAAA,OACzCupB,EAAkByqC,IAAuBh0D,EAAAA,EAAAA,OACzCi0D,EAAYC,IAAiBl0D,EAAAA,EAAAA,KAAS,IACtCtD,EAAOy3D,IAAYn0D,EAAAA,EAAAA,IAAS,KAC5BwpB,EAAW4qC,IAAgBp0D,EAAAA,EAAAA,IAAS,eAmG3C,OAjGAlH,EAAAA,EAAAA,KAAU,KACR,MAAM28C,EAAYzsB,IAClB,IAAKyd,IAAWgP,EACd,OAGF,IAAI,EAAErwC,EAAC,EAAEC,GAAMohC,EACf,MAAM4tB,EAAUjvD,EACVkvD,EAAUjvD,EAEVkvD,EAASprC,IACTqrC,EAASvrC,KAET,cACJwrC,EAAgB,EAAC,gBACjBC,EAAkB,EAAC,YACnBC,EAAc,EAAC,eACfC,EAAiB,EAAC,WAClBjrC,GAAa,GACXD,OAAiB,CAAC,EAEhBmrC,EAAYN,EAASO,SAASC,iBAAiBR,GAAQM,UAAW,IAAMD,OAAiBn+D,EAEzFu+D,EAAWT,EAAS,CACxB7vD,MAAO6vD,EAAOt0B,YACdt7B,OAAQ4vD,EAAOtP,aAAe4P,GAC5BjB,EAEEqB,EAAWT,EAASA,EAAOztD,wBAA0B6sD,EAE3D,IAAIsB,EACAC,EACA/vD,EAAI4vD,EAAStwD,MAAQ+vD,EAAgBQ,EAASvwD,MAAQuwD,EAASnuD,MACjE1B,GAAK,EACL8vD,EAAqB,QACZ9vD,EAAI4vD,EAAStwD,MAAQuwD,EAASnuD,KAAO,GAC9CouD,EAAqB,QACrB9vD,GAAK,IAEL8vD,EAAqB,OACrB9vD,EAAI,IAENyuD,EAAaqB,GAETP,GACwB,UAAvBO,GAAmC9vD,EAAIqvD,EAAgBE,GAAeM,EAASvwD,MAAQuwD,EAASnuD,OACnG1B,GAAKuvD,GAGHA,GAAsC,SAAvBO,IACb9vD,EAAIqvD,EAAgBE,EAAcK,EAAStwD,OAASuwD,EAASvwD,MAAQuwD,EAASnuD,KAChF1B,GAAKuvD,EACIvvD,EAAIuvD,GAAe,IAC5BvvD,GAAKuvD,IAILtvD,EAAI2vD,EAASrwD,OAASswD,EAAStwD,OAASswD,EAASr7C,IACnDu7C,EAAmB,OAEnBA,EAAmB,SAEf9vD,EAAI2vD,EAASrwD,OAASswD,EAASr7C,IAAM86C,IACvCrvD,EAAI4vD,EAASr7C,IAAMq7C,EAAStwD,SAGhCmvD,EAAaqB,GAEb,MAAMC,EAAc3f,EAAU1uC,wBAExBsuD,EAA8B1rC,EAAayrC,EAAYx7C,IAAM,EAC7D07C,EAA8B3rC,EAAayrC,EAAYtuD,KAAO,EAE9DyuD,EAA2BrzD,KAAKC,IACpCiD,EAAIgwD,EAAYtuD,KAChBmuD,EAASvwD,MAAQswD,EAAStwD,MAhGc,IAkGpCoC,GAA+B,SAAvBouD,EACTvrC,EACCznB,KAAKiD,IApG+B,GAoGYowD,GAChDA,EACDnwD,EAAIgwD,EAAYtuD,MAASwuD,EACxB17C,EAAMvU,EAAI+vD,EAAYx7C,IAAMy7C,EAE5BG,EAAgBP,EAAStwD,OAxGC,IAwGuCkwD,GAAa,GAEpFX,EAAcsB,EAAgBR,EAASrwD,QACvCyvD,EAAc,eAAcoB,QAC5BrB,EAAU,SAAQrtD,aAAgB8S,OAClC,MAAM67C,EAAWpB,EAAUiB,EAA6BF,EAAYtuD,KAAQA,EACtE4uD,EAAWpB,EAAUe,EAA6BD,EAAYx7C,IAAOA,GAAOi7C,GAAa,GAC/Fd,EAA2C,SAAvBmB,EAAgCO,EAAUT,EAAStwD,MAAQ+wD,GAC/EzB,EAAyC,WAArBmB,EAAgCH,EAASrwD,OAAS+wD,EAAUA,EAAQ,GACvF,CACDjvB,EAAQtd,EAAgBF,EAAgBD,EAAmBU,IAGtD,CACLN,YACAC,YACAC,mBACAC,mBACA7sB,QACA8sB,YACAyqC,aAEJ,C,mFChGA,QAzBA,SAA6B0B,EAAuCnS,EAA+BoS,GAAU,GAAO,IAAAC,EAClH,MAAMpH,EAAWjL,EAAemS,EAAsC,IAAOA,EACjE,QAAZE,EAAArS,SAAY,IAAAqS,IAAZrS,EAAiB,CAACmS,IAElB,MAAOG,EAAUjH,IAAYkH,EAAAA,EAAAA,KACvBC,GAAcC,EAAAA,EAAAA,GAAYxH,GAEhC,SAASyH,IACP,MAAMC,EAAkBH,EAAYz7D,QAChCq7D,EACDO,EAAqCtH,GAEtCA,EAAUsH,IAEd,CAQA,OALAvS,EAAAA,EAAAA,GAAcsS,EAAoB1S,IAGlC4S,EAAAA,EAAAA,GAAgBF,EAAoB1S,GAE7BsS,CACT,C,8FCmBA,QAxCA,SAA4BO,EAAmC7S,EAA+BoS,GAAU,GAAO,IAAAC,EAC7G,MAAMpH,EAAWjL,EAAe6S,EAAkC,IAAQA,IAC9D,QAAZR,EAAArS,SAAY,IAAAqS,IAAZrS,EAAiB,CAAC6S,IAElB,MAAMC,GAAWv8D,EAAAA,EAAAA,MACXH,GAAcC,EAAAA,EAAAA,KACdm8D,GAAcC,EAAAA,EAAAA,GAAYxH,GAEhC,SAASyH,EAAmBK,GAAS,GACnC,MAAMJ,EAAkBH,EAAYz7D,QACpC,GAAIq7D,EACDO,GAAsCK,IACjCF,EAAS/7D,UAAYi8D,IACvBF,EAAS/7D,QAAUi8D,EACnB58D,IACF,QAEG,CACL,MAAM48D,EAAYL,IACdG,EAAS/7D,UAAYi8D,IACvBF,EAAS/7D,QAAUi8D,EAEdD,GACH38D,IAGN,CACF,CAUA,OARAgqD,EAAAA,EAAAA,IAAc,KACZsS,GAAmB,EAAK,GAEvB1S,IAGH4S,EAAAA,EAAAA,GAAgBF,EAAoB1S,GAE7B8S,EAAS/7D,OAClB,C,wEClDA,MAqBA,EArByB+lC,CACvBtqC,EACAyR,EACA3J,EACA24D,KAEA,MAAM,YAAEC,IAAgB7+D,EAAAA,EAAAA,MAClB8+D,GAAuBv+D,EAAAA,EAAAA,KAAQ,KACnC,MAAMw+D,GAAYC,EAAAA,EAAAA,IAASH,EAAa,KAAK,GAC7C,MAAO,KACLE,EAAU,CAAE5gE,SAAQyR,UAAWA,EAAYgvD,iBAAkBA,GAAoB,CAClF,GACA,CAACC,EAAa1gE,EAAQyR,EAAWgvD,KAEpC39D,EAAAA,EAAAA,KAAU,KACJ2O,IAAc3J,GAChB64D,GACF,GACA,C,2FCbG,SAAS/gC,EAA8B1D,GAC5C,MAAMt4B,GAAcC,EAAAA,EAAAA,KAIpB,OAFAf,EAAAA,EAAAA,KAAU,KAAMg+D,EAAAA,EAAAA,IAAsB5kC,EAAUt4B,IAAc,CAACs4B,EAAUt4B,KAElEm9D,EAAAA,EAAAA,IAAc7kC,EACvB,CAEO,SAAS6D,IACd,MAAMn8B,GAAcC,EAAAA,EAAAA,KAIpB,OAFAf,EAAAA,EAAAA,KAAU,KAAMk+D,EAAAA,EAAAA,IAA0Bp9D,IAAc,CAACA,KAElDq9D,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAMt9D,GAAcC,EAAAA,EAAAA,KAIpB,OAFAf,EAAAA,EAAAA,KAAU,KAAMq+D,EAAAA,EAAAA,IAAsBv9D,IAAc,CAACA,KAE9Cw9D,EAAAA,EAAAA,KACT,C,wEC7Be,SAASC,EAAoBzgC,GAAmB,GAC7D,MAAM0gC,GAA4Bv9D,EAAAA,EAAAA,IAAO68B,GACnCh9B,GAAcC,EAAAA,EAAAA,MAEpB+pD,EAAAA,EAAAA,IAAc,KACRhtB,IACF0gC,EAA0B/8D,SAAU,EACtC,GACC,CAACq8B,IAEJ,MAAM2gC,GAA+Bt/D,EAAAA,EAAAA,KAAY,KAC/Cq/D,EAA0B/8D,SAAU,EACpCX,GAAa,GACZ,CAACA,IAEJ,MAAO,CACL49D,uBAAwBF,EAA0B/8D,QAClDg9D,+BAEJ,C,6DCpBe,SAASE,EAAqBC,GAC3C,MAAOC,EAAUC,IAAY7B,EAAAA,EAAAA,KA+B7B,OA7BAj9D,EAAAA,EAAAA,KAAU,KACR,SAAS++D,IACP,MAAM/mB,EAAY5zC,OAAO6zC,eACzB,IAAKD,GAAWO,WAAY,OAE5B,MAAMymB,EAAQhnB,EAAUU,WAAW,GACnC,IAAKsmB,EACH,OAIF,IADgBpmD,SAAS0S,cAAcszC,GAErC,OAGF,MAAM,wBAAEjgB,GAA4BqgB,GACpBrgB,aAAmCsgB,QAC/CtgB,EACAA,EAAwBD,eAChBtuB,QAAQwuC,IAClBE,EAASE,EAEb,CAIA,OAFApmD,SAASsmB,iBAAiB,kBAAmB6/B,GAEtC,IAAMnmD,SAASwmB,oBAAoB,kBAAmB2/B,EAAkB,GAC9E,CAACH,EAAeE,IAEZD,CACT,C,kDCnCA,MA4BA,EA5B4BxL,CAC1BnhC,EACA04B,EACAsU,GAAuB,MAEvBl/D,EAAAA,EAAAA,KAAU,KACR,GAAI4qD,EACF,OAGF,MAAMpa,EAAYte,EAAazwB,QAE/B,SAAS09D,EAAapxD,GAEfA,EAAEqxD,SACL5uB,EAAWmP,YAAc5xC,EAAEsxD,OAAS,EAChCH,GAAsBnxD,EAAEmV,iBAEhC,CAIA,OAFAstB,EAAUtR,iBAAiB,QAASigC,EAAc,CAAEtE,SAAUqE,IAEvD,KACL1uB,EAAUpR,oBAAoB,QAAS+/B,EAAa,CACrD,GACA,CAACjtC,EAAc04B,EAAYsU,GAAsB,C,iECvBtD,MAAMI,EAAc,IAAIt8D,IAAI,CAAC,QAAS,WAAY,WAE5CqzD,GAAWkJ,EAAAA,EAAAA,KAGV,SAASxgC,EAAWygC,IACzBx/D,EAAAA,EAAAA,KAAU,KACR,IAAKw/D,EACH,OAGF,MAAMrd,EAAU5iD,OAAO4iD,QAAQqd,GAc/B,OAAOnJ,EAASoJ,aAZhB,SAAuB1xD,IAgB3B,SAAyBA,GACvB,QAAIA,EAAE0V,kBAAkBi8C,eACdJ,EAAYl8D,IAAI2K,EAAE0V,OAAOi2B,QAIrC,EArBWimB,CAAgB5xD,IAIrBo0C,EAAQl2C,SAAQ,EAAE2zD,EAAQtiC,OCoDzB,SAA0BsiC,GAC/B,OAAQ38C,GAlCV,SAAuB28C,EAAgB38C,GACrC,MAAM,IACJ3H,EAAG,KAAEukD,EAAI,KAAEC,EAAI,IAAEC,EAAG,MAAEngC,EAAK,IAAEr/B,GAC3Bq/D,GACE,OACJllB,EAAM,QAAEnb,EAAO,QAAED,EAAO,SAAEoO,EAAUntC,IAAKy/D,GACvC/8C,EAEJ,GAAI3H,IAAQo/B,EACV,OAAO,EAGT,GAAIqlB,GACF,IAAKxgC,IAAYD,EACf,OAAO,MAEJ,CACL,GAAIugC,IAAStgC,EACX,OAAO,EAET,GAAIugC,IAASxgC,EACX,OAAO,CAEX,CACA,OAAIM,IAAU8N,GAIP3tC,QAAQQ,IACTy/D,EAAW7e,gBAAkB5gD,EAAI4gD,eAChCl+B,EAAMM,KAAKwP,QAAQ,MAAO,IAAIouB,gBAAkB5gD,EAAI4gD,eAC7D,CAGoB8e,CA1Db,SAAqBL,GAC1B,MAAMlrB,EAAOkrB,EACVze,cACArsC,MAAM,KACNlV,KAAKsgE,GAASA,EAAKltC,SAEhBmtC,EAA+B,CACnC7kD,IAAKo5B,EAAK7vB,SAAS,OACnBg7C,KAAMnrB,EAAK7vB,SAAS,QACpBi7C,KAAMprB,EAAK7vB,SAAS,QACpBk7C,IAAKrrB,EAAK7vB,SAAS,OACnB+a,MAAO8U,EAAK7vB,SAAS,UAGjBu7C,EAAe,CAAC,MAAO,OAAQ,OAAQ,QAAS,OAItD,MAAO,IACFD,EACH5/D,IAJcm0C,EAAKvoB,MAAM5rB,IAAS6/D,EAAav7C,SAAStkB,KAM5D,CAoCkC8/D,CAAYT,GAAS38C,EACvD,EDrDYq9C,CAAiBV,EAAjBU,CAAyBvyD,IAC3BuvB,EAAQvvB,EACV,GAEJ,GAE0C,GACzC,CAACyxD,GACN,CAxBA5mD,SAAS2nD,gBAAgBrhC,iBAAiB,UAAWm3B,EAASmK,a,6DEC/C,SAASxP,EACtB3uC,EACA1L,EACAC,GAEA,MAAM,SAAE9P,IAAaC,EAAAA,EAAAA,OAErB/G,EAAAA,EAAAA,KAAU,KACJ2W,EACG7P,GACH4d,YAAW,KACT5B,uBAAsB,KAChBT,EAAS5gB,SAASg/D,aACpBp+C,EAAS5gB,QAAQohB,OACnB,GACA,GAlBW,MAsBbR,EAAS5gB,SAASg/D,aACpBp+C,EAAS5gB,QAAQ04C,OAGfvjC,GACF8N,WAAW9N,EA1BS,KA4BxB,GACC,CAACyL,EAAUvb,EAAU6P,EAAQC,GAClC,C,mHCjCA,MAAMuP,EAAiC,CAAC,ECYzB,SAASxe,EACtB+4D,EACA3+D,GAAS,EACT4+D,EAAcj+D,EAAAA,GAAAA,QACdk+D,EACAjW,EACAkW,GAAgB,GAEhB,MAAMt5D,EAAYm5D,EAAY91C,EAAAA,GAA0B81C,QAAa/iE,EAC/DmjE,EAAcH,IAAgBj+D,EAAAA,GAAAA,QAClCq+D,EAAAA,IAA4BJ,IAAgBj+D,EAAAA,GAAAA,YAExC5B,GAAcC,EAAAA,EAAAA,KACdzC,EDvBY0iE,MAClB,MAAMC,GAAQhgE,EAAAA,EAAAA,MAOd,OALKggE,EAAMx/D,UACTw/D,EAAMx/D,SAAU8kB,EAAAA,EAAAA,GAAcJ,GAC9BA,EAAM86C,EAAMx/D,UAAW,GAGlBw/D,EAAMx/D,OAAO,ECeTu/D,IACJv5D,EAAcy5D,IAAmBh6D,EAAAA,EAAAA,IAASK,IAAcu5D,EAAc,EAAI,GAC3EK,GAAelgE,EAAAA,EAAAA,MAEfmgE,GAAiB9hE,EAAAA,EAAAA,KAAQ,KACtBy+D,EAAAA,EAAAA,KAAUtyD,IACX01D,EAAa1/D,WAAakpD,GAAUp5B,KAAKC,MAAQ2vC,EAAa1/D,QAAUkpD,IAC1EuW,EAAgBz1D,EAClB,GAvBoB,KAwBA,IACrB,CAACk/C,IAkDJ,OAhDA3qD,EAAAA,EAAAA,KAAU,MACH+B,GAAU2+D,IACRn5D,EAmBMu5D,GACTp8C,YAAW,KACTw8C,EApDiB,IAoDkB,GAnDnB,OA+BlBA,EAAgB,GAEZC,EAAa1/D,SACfmpB,EAAAA,GAA2Bw2C,GAG7BD,EAAa1/D,QAAU8vB,KAAKC,MAE5B5G,EAAAA,GAAkB81C,EAAWC,EAAaE,EAAeO,EAAgB9iE,GAAIwpD,MAAK,KAChF,MAAMuZ,EAAY9vC,KAAKC,MAAQ2vC,EAAa1/D,QAC5C0/D,EAAa1/D,aAAU9D,GAElBgtD,GAAS0W,GAAa1W,EACzB7pD,IAEA4jB,WAAW5jB,EAAa6pD,EAAQ0W,EAClC,KAON,GACC,CACDt/D,EAAQ2+D,EAAWn5D,EAAWo5D,EAAaC,EAAa9/D,EAAaggE,EAAanW,EAAOyW,EACzFP,EAAeviE,KAGjB0B,EAAAA,EAAAA,KAAU,KACJ+B,GAAUo/D,EAAa1/D,UACzBmpB,EAAAA,GAA2Bw2C,GAC3BF,EAAgB,GAChBC,EAAa1/D,aAAU9D,EACzB,GACC,CAACyjE,EAAgBr/D,KAEpB/B,EAAAA,EAAAA,KAAU,IACD,KACD0gE,GACF91C,EAAAA,GAA2B81C,EAAWpiE,EACxC,GAED,CAACA,EAAIoiE,IAED,CAAEn5D,YAAWE,eACtB,C,6DCpFA,IAAI65D,EAEW,SAASC,EACtB5qD,EAAiBC,EAA6B4qD,EAJrB,IAI4D5W,GAAa,GAElG,MAAM6W,GAAgBxgE,EAAAA,EAAAA,KAAO,GAEvBygE,GAAkBviE,EAAAA,EAAAA,KAAY,KAClCsiE,EAAchgE,SAAU,CAAI,GAC3B,IAoCH,OAlCAzB,EAAAA,EAAAA,KAAU,KACJshE,IACFnxB,aAAamxB,GACbA,OAAe3jE,IAGbgZ,GAAWiM,EAAAA,IAAiBgoC,IAC9B0W,EAAel9D,OAAOsgB,YAAW,KAC1B+8C,EAAchgE,SACjBmV,GACF,GACoB,EAAnB4qD,GACL,GACC,CAAC5W,EAAYj0C,EAAQ6qD,EAAkB5qD,IAqBnC,EAnBkBzX,EAAAA,EAAAA,KAAY,KACnCsiE,EAAchgE,SAAU,CAAI,GAC3B,KAEsBtC,EAAAA,EAAAA,KAAY,KACnCsiE,EAAchgE,SAAU,EAEpB6/D,IACFnxB,aAAamxB,GACbA,OAAe3jE,GAGjB2jE,EAAel9D,OAAOsgB,YAAW,KAC1B+8C,EAAchgE,SACjBmV,GACF,GACC4qD,EAAiB,GACnB,CAACA,EAAkB5qD,IAEsB8qD,EAC9C,C,mFC7Ce,SAASC,EAAuBlgE,EAAc4G,GAC3D,MAAMu5D,GAAO/gE,EAAAA,EAAAA,GAAYY,GAAS,GAC5BopD,GAAa5pD,EAAAA,EAAAA,MACbH,GAAcC,EAAAA,EAAAA,KAEd8gE,EAAmBpgE,QAEnBqgE,EAAgBF,QAiBtB,OAfIC,GAAoBhX,EAAWppD,UACjC0uC,aAAa0a,EAAWppD,SACxBopD,EAAWppD,aAAU9D,IAGvBmtD,EAAAA,EAAAA,IAAc,KAERziD,IAAaw5D,GAAoBC,IAAkBjX,EAAWppD,UAChEopD,EAAWppD,QAAU2C,OAAOsgB,YAAW,KACrCmmC,EAAWppD,aAAU9D,EACrBmD,GAAa,GACZuH,GACL,GACC,CAACA,EAAUvH,EAAa+gE,EAAkBC,IAErCjX,EAAWppD,SAAY4G,IAAYw5D,EAA6BD,EAAVngE,CAChE,C,6DCvBe,SAASi0D,EACtBqM,EACAC,GAEA,MAAMlhE,GAAcC,EAAAA,EAAAA,KACdkhE,GAAahhE,EAAAA,EAAAA,IAAO8gE,GACpB5N,GAAQlzD,EAAAA,EAAAA,IAAO+gE,GAEfrpD,GAAWxZ,EAAAA,EAAAA,KAAa6jB,IAC5BmxC,EAAM1yD,QAAUwgE,EAAWxgE,QAAQ0yD,EAAM1yD,QAASuhB,GAClDliB,GAAa,GACZ,IAEH,MAAO,CACLqzD,EAAM1yD,QACNkX,EAEJ,C,kDCvBe,SAASupD,EAAgBrM,EAAYC,EAAmBG,EAAkBL,EAAY,IACnG,OAAOt1B,EAAAA,EAAAA,IAAsBlvB,IAC3BA,GAAI,GAEHwkD,EAAMC,EAAIC,EAASG,EACxB,C,uGCAA,MAQA,GAAel5D,EAAAA,EAAAA,KAR2B8E,IACxC,MAAM,OAAE8U,GAAW9U,EACbsgE,GAAgB5sC,EAAAA,EAAAA,GAAgBC,EAAAA,GAAAA,MAAe,iBAAkB7e,GAGvE,OAAOwrD,EAAgBjiE,EAAAA,GAAAA,cAACiiE,EAAkBtgE,QAAYlE,CAAS,I,eCDjE,MAqDA,EArDoBykE,CAClBC,EACAC,EACAC,KAEA,MAAMvjE,GAAOC,EAAAA,EAAAA,MACNujE,EAAaC,IAAkBv7D,EAAAA,EAAAA,MAEhCw7D,GAAwBvjE,EAAAA,EAAAA,KAAY,CAACiG,EAAYu9D,GAAe,KAEpE,MAAMC,EAAcx5D,KAAK3I,MAAM2I,KAAKiD,IAAIjH,EAAKy9D,UAAWtxC,KAAKC,MAAQ,KAAa,MAC7EmxC,EAAe,GAAIlxC,EAAAA,EAAAA,OACxB+wC,IAAcI,GACdH,OAAe9kE,EAAU,GACxB,CAAC6kE,IAEEM,GAAmC3jE,EAAAA,EAAAA,KAAY,KACnDujE,EAAsB,IAAInxC,KAA6B,IAAxBwxC,EAAAA,MAA+B,EAAK,GAClE,CAACL,IAEEM,GAAsB7jE,EAAAA,EAAAA,KAAY,KACtCsjE,OAAe9kE,GACf2kE,KAAY,GACX,CAACA,IAEEW,GAAkB9jE,EAAAA,EAAAA,KAAa+jE,IACnCT,GAAe,IAAMS,GAAc,GAClC,IAEGC,EAAuBZ,EAAS,IAAIhxC,KAAc,IAATgxC,GAAiB,IAAIhxC,KACpE4xC,EAAqBC,WAAW,GAChCD,EAAqBE,gBAAgB,GAErC,MAAMC,EAAmB,IAAI/xC,KAiB7B,OAhBA+xC,EAAiBC,YAAYD,EAAiBE,cAAgB,GAgBvD,CAACP,EAbN/iE,EAAAA,GAAAA,cAACiiE,EAAa,CACZxrD,OAAQ5W,QAAQyiE,GAChBiB,gBAAc,EACdC,WAAYP,EAAqBN,UACjCc,OAAOC,EAAAA,EAAAA,IAAcN,GACrBO,cAAY,EACZC,kBAAmBzB,EAAyBrjE,EAAK,gCAA6BrB,EAC9EiZ,QAASosD,EACT5gD,SAAUsgD,EACVqB,oBAAqB1B,EAAyBS,OAAmCnlE,IAInD,C,mFCrDpC,MASA,EAT6BqmE,CAAC9mE,EAAiB8U,KACtC1S,EAAAA,EAAAA,KAAQ,KACNy+D,EAAAA,EAAAA,KAAU/6C,IACV9lB,GAAW8U,IAChBjT,EAAAA,EAAAA,MAAaklE,kBAAkB,CAAE/mE,SAAQ8U,WAAUgR,UAAS,GAC3DkhD,EAAAA,MACF,CAAChnE,EAAQ8U,G,6DCXC,SAASirD,EAAakH,GAAa,IAAAC,EAChD,MAAMC,GAAYpjE,EAAAA,EAAAA,MAElB,OADiB,QAAjBmjE,EAAAC,EAAU5iE,eAAO,IAAA2iE,IAAjBC,EAAU5iE,SAAY6iE,EAAAA,EAAAA,IAAgBH,IAC/BE,EAAU5iE,OACnB,C,uECHO,SAAS67D,EAAgBiH,EAA4B7Z,GAE1D,MAAM8Z,GAAavjE,EAAAA,EAAAA,KAAO,GACtBujE,EAAW/iE,UACb+iE,EAAW/iE,SAAU,EAErBipD,GAAcz+C,SAASw4D,KACjBC,EAAAA,EAAAA,IAASD,IACXA,EAAWE,UAAUJ,EACvB,MAIJK,EAAAA,EAAAA,IAAc,IACL,MACLC,EAAAA,EAAAA,IAAcN,EAAO,GAG3B,C,6DChBO,SAASpH,EAAelyD,GAC7B,MAAMtG,GAAM1D,EAAAA,EAAAA,IAAUgK,GAMtB,OAJA6/C,EAAAA,EAAAA,IAAc,KACZnmD,EAAIlD,QAAUwJ,CAAK,GAClB,CAACA,IAEGtG,CACT,C,kDCIA,QAhBA,SAAoBmgE,EAAsBna,GACxC,MAAMoa,GAAgB9jE,EAAAA,EAAAA,IAAO6jE,IAE7Bv5D,EAAAA,EAAAA,KAAgB,KACdw5D,EAActjE,QAAUqjE,CAAQ,GAC/B,CAACA,KAEJ9kE,EAAAA,EAAAA,KAAU,KACR,GAAqB,iBAAV2qD,EACT,OAEF,MAAMrsD,EAAKomB,YAAW,IAAMqgD,EAActjE,WAAWkpD,GACrD,MAAO,IAAMxa,aAAa7xC,EAAG,GAC5B,CAACqsD,GACN,C,mCCkCA,MAAMqa,EAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,EAAG,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAE5qlgC,SAASC,EAAiBC,EAASC,EAAOC,EAAOz5D,EAAOC,EAAQW,EAAQw2C,GACrF,GAAIljB,OAAOwlC,MAAM94D,IAAWA,EAAS,EAAG,OAExCA,GAAU,EAENszB,OAAOwlC,MAAMtiB,KAAaA,EAAa,IAC3CA,GAAc,GACG,IAAGA,EAAa,GAC7BA,EAAa,IAAGA,EAAa,GAEjC,MAAMuiB,EAAYJ,EAAQK,aAAaJ,EAAOC,EAAOz5D,EAAOC,GAEtD45D,EAASF,EAAUx8D,KAEzB,IAAI28D,EACAC,EACAC,EACAt5D,EACAC,EACA5M,EACAU,EACAwlE,EACAC,EACAC,EACAC,EACAC,EACAC,EAAKt6D,EAAQ,EACbu6D,EAAKt6D,EAAS,EACdu6D,EAAO55D,EAAS,EAEhB65D,EAAI,GACJC,EAAI,GACJrlB,EAAI,GAEJslB,EAAUvB,EAAUx4D,GACpBg6D,EAAUvB,EAAUz4D,GAEpBi6D,EAAO,GACPC,EAAO,GAEX,KAAO1jB,KAAe,GAAG,CAGvB,IAFAijB,EAAKD,EAAK,EAELz5D,EAAI,EAAGA,EAAIV,EAAQU,IAAK,CAK3B,IAJAm5D,EAAOD,EAAOQ,GAAMG,EACpBT,EAAOF,EAAOQ,EAAK,GAAKG,EACxBR,EAAOH,EAAOQ,EAAK,GAAKG,EAEnBzmE,EAAI,EAAGA,GAAK6M,EAAQ7M,IACvBU,EAAI4lE,IAAQtmE,EAAIumE,EAAKA,EAAKvmE,IAAO,GACjC+lE,GAAQD,EAAOplE,KACfslE,GAAQF,EAAOplE,KACfulE,GAAQH,EAAOplE,KAGjB,IAAKiM,EAAI,EAAGA,EAAIV,EAAOU,IACrB+5D,EAAEL,GAAMN,EACRY,EAAEN,GAAML,EACR1kB,EAAE+kB,GAAMJ,EAEC,GAALr5D,IACFk6D,EAAKn6D,KAAOjM,EAAIiM,EAAI85D,GAAQF,EAAK7lE,EAAI6lE,IAAO,EAC5CQ,EAAKp6D,IAAOjM,EAAIiM,EAAIE,GAAU,EAAInM,GAAK,EAAI,GAG7CwlE,EAAKI,EAAKQ,EAAKn6D,GACfw5D,EAAKG,EAAKS,EAAKp6D,GAEfo5D,GAAQD,EAAOI,KAAQJ,EAAOK,KAC9BH,GAAQF,EAAOI,KAAQJ,EAAOK,KAC9BF,GAAQH,EAAOI,KAAQJ,EAAOK,KAE9BE,IAEFC,GAAOr6D,GAAS,CAClB,CAEA,IAAKU,EAAI,EAAGA,EAAIV,EAAOU,IAAK,CAM1B,IALAy5D,EAAKz5D,EACLo5D,EAAOW,EAAEN,GAAMK,EACfT,EAAOW,EAAEP,GAAMK,EACfR,EAAO3kB,EAAE8kB,GAAMK,EAEVzmE,EAAI,EAAGA,GAAK6M,EAAQ7M,IACvBomE,GAAOpmE,EAAIwmE,EAAK,EAAIv6D,EACpB85D,GAAQW,EAAEN,GACVJ,GAAQW,EAAEP,GACVH,GAAQ3kB,EAAE8kB,GAIZ,IADAC,EAAK15D,GAAK,EACLC,EAAI,EAAGA,EAAIV,EAAQU,IACtBk5D,EAAOO,GAAON,EAAOa,IAAaC,EAClCf,EAAOO,EAAK,GAAML,EAAOY,IAAaC,EACtCf,EAAOO,EAAK,GAAMJ,EAAOW,IAAaC,EAE7B,GAALl6D,IACFm6D,EAAKl6D,KAAOlM,EAAIkM,EAAI65D,GAAQD,EAAK9lE,EAAI8lE,GAAMv6D,EAC3C86D,EAAKn6D,IAAOlM,EAAIkM,EAAIC,GAAU,EAAInM,EAAIuL,EAAQ,GAGhDi6D,EAAKv5D,EAAIm6D,EAAKl6D,GACdu5D,EAAKx5D,EAAIo6D,EAAKn6D,GAEdm5D,GAAQW,EAAER,GAAMQ,EAAEP,GAClBH,GAAQW,EAAET,GAAMS,EAAER,GAClBF,GAAQ3kB,EAAE4kB,GAAM5kB,EAAE6kB,GAElBE,GAAMp6D,GAAS,CAEnB,CACF,CAEAu5D,EAAQwB,aAAapB,EAAWH,EAAOC,EACzC,C,ghBCtJA,MAAMuB,EAAUC,OAAO,WAOjBC,EAAyBtuB,EAAAA,IAAcF,EAAAA,GAAU,IAAO,EACxDyuB,EAAuBvuB,EAAAA,GAAa,GAAM,IAC1CwuB,EAAsC,GACtCC,EAA6BC,EAAAA,GAAY,EAAI,EAG7CC,EAAgB,IAAIjzB,IAEpBkzB,EAAU,IAAIj+D,MATA,GASmBG,UAAK3L,GAAWiC,KACrD,KAAMynE,EAAAA,EAAAA,GAA4B,IAAIC,OAAO,IAAIC,IAAI,sBAEvD,IAAIC,GAAmB,EAEvB,MAAM/xB,EAqDJgyB,eAAeC,GACb,MAAOl3B,EAAWhlC,EAAQxH,EAAQ1F,EAAG,CAAGqpE,GAAUD,EAClD,IAAIE,EAAWT,EAAc7yB,IAAIh2C,GAUjC,OARKspE,EAKHA,EAASC,aAAar3B,EAAWhlC,EAAQxH,EAAQ2jE,GAAQjyB,SAHzDkyB,EAAW,IAAInyB,KAAWiyB,GAC1BP,EAAclxB,IAAI33C,EAAIspE,IAKjBA,CACT,CAEAt3B,YACEN,EACAQ,EACAxsC,EACQ1F,EACAqE,EACAglE,EAAiB,CAAE,EACnBx4C,EACA24C,EACAC,GACR,KANQzpE,GAAAA,EAAU,KACVqE,OAAAA,EAAc,KACdglE,OAAAA,EAAc,KACdx4C,YAAAA,EAAsC,KACtC24C,QAAAA,EAAyC,KACzCC,OAAAA,EAAmBt3B,EAAA,kBA1ER,IAAIyD,KAQrBzD,EAAA,uBAAAA,EAAA,yBAAAA,EAAA,kBAMiB,IAAO,IAAEA,EAAA,oBAEP,GAACA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,cAME,IAAEA,EAAA,2BAAAA,EAAA,oBAMN,GAAKA,EAAA,kBAEP,GAAIA,EAAA,gBAEN,GAAKA,EAAA,oBAED,GAAKA,EAAA,yBAEA,GAAKA,EAAA,wBAEL,GAACA,EAAA,uBAEF,GAACA,EAAA,sBAED,GAACA,EAAA,aAEX,GAACA,EAAA,iBAEW,GAACA,EAAA,4BA8B3BC,KAAKm3B,aAAa73B,EAAaQ,EAAWxsC,EAAQ2jE,EAAOjyB,QACzDhF,KAAKs3B,aACLt3B,KAAKu3B,cACP,CAEOryB,gBAAgB5F,GACrB,MAAM,OACJxkC,EAAM,IAAEM,EAAG,eAAEo8D,EAAc,OAAExyB,GAC3BhF,KAAKy3B,WAAW7zB,IAAItE,GAEpBk4B,EACFp8D,EAAIs8D,UAAU1yB,EAAQppC,EAAGopC,EAAQnpC,EAAGmkC,KAAK23B,QAAS33B,KAAK23B,SAEvD78D,EAAOm9B,SAGT+H,KAAKy3B,WAAW5zB,OAAOvE,GAElBU,KAAKy3B,WAAWxkE,MACnB+sC,KAAKU,SAET,CAEAlpC,YACE,OAAOwoC,KAAK43B,aAAe53B,KAAK63B,SAClC,CAEAv3B,KAAKw3B,GAAe,EAAOx4B,GACrBA,IACFU,KAAKy3B,WAAW7zB,IAAItE,GAAcy4B,UAAW,GAG3C/3B,KAAKg4B,SAAWF,IAClB93B,KAAKi4B,iBAAmBv/D,KAAKkB,MAAM,IAGrComC,KAAKk4B,oBAAiBjrE,EACtB+yC,KAAKjlB,UAAY,EACjBilB,KAAKm4B,QACP,CAEA13B,MAAMnB,GACAA,IACFU,KAAKy3B,WAAW7zB,IAAItE,GAAcy4B,UAAW,GAEdt/D,MAAMwmC,KAAKe,KAAKy3B,WAAW3oE,UAAUspE,OAAM,EAAGL,cAAeA,OAM1F/3B,KAAK63B,UACP73B,KAAKk4B,eAAiBl4B,KAAKi4B,iBAE3Bj4B,KAAK43B,aAAc,EAGhB53B,KAAKi3B,OAAOhyB,gBACfjF,KAAKq4B,OAASr4B,KAAKq4B,OAAOnpE,KAAI,CAACopE,EAAOrpE,IAChCA,IAAM+wC,KAAKu4B,eACND,OAEHA,GAASA,IAAUpC,GACrBoC,EAAME,YAOhB,CAEAC,aAAaC,EAAiBR,IAC5Bl4B,KAAKi4B,iBAAmBv/D,KAAKkB,MAAM8+D,EAAkB14B,KAAK24B,cAC1D34B,KAAKk4B,eAAiBx/D,KAAKkB,MAAMs+D,EAAiBl4B,KAAK24B,cACvD34B,KAAKjlB,UAAY29C,EAAkBR,EAAiB,GAAK,EACzDl4B,KAAKm4B,QACP,CAEAS,SAASC,GACP74B,KAAK64B,MAAQA,CACf,CAEAC,UAAU34B,GACRH,KAAKi3B,OAAO92B,OAASA,CACvB,CAEAgF,sBAAsB7F,EAAqBy5B,GACzC,MAAMC,EAAgBh5B,KAAKy3B,WAAW7zB,IAAItE,IACpC,OACJxkC,EAAM,IAAEM,GACN49D,EAEJ,IAAKl+D,EAAOopC,QAAQ+0B,eAAkD,UAAjCn+D,EAAOopC,QAAQ+0B,cAA2B,CAC7E,MAAMC,EAAal5B,KAAKm5B,iBACxBC,EAAiBt+D,EAAQo+D,GACzB99D,EAAIs8D,UAAU,EAAG,EAAG58D,EAAOI,MAAOJ,EAAOK,QACzCL,EAAOopC,QAAQ+0B,cAAgB,QAC/BlhC,EAAAA,EAAAA,KAAQ,KACNj9B,EAAOopC,QAAQ+0B,cAAgB,OAAO,GAE1C,CAEAD,EAAch0B,OAAS,CACrBppC,EAAGlD,KAAK3I,OAAOgpE,GAAWn9D,GAAK,GAAKd,EAAOI,OAC3CW,EAAGnD,KAAK3I,OAAOgpE,GAAWl9D,GAAK,GAAKf,EAAOK,SAG7C,MAAMm9D,EAAQt4B,KAAKq5B,SAASr5B,KAAKu4B,iBAAmBv4B,KAAKq5B,SAAS3gE,KAAK3I,MAAMiwC,KAAKi4B,mBAE9EK,GAASA,IAAUpC,GACrB96D,EAAI8tD,UAAUoP,EAAOU,EAAch0B,OAAOppC,EAAGo9D,EAAch0B,OAAOnpC,EAEtE,CAEQs7D,aACN73B,EACAQ,EACAxsC,EACA0xC,GAEA,MAAMk0B,EAAal5B,KAAKm5B,iBAExB,IAAIxB,EAEJ,GAAI73B,aAAqBw5B,eAAgB,CACvC,KAAMx5B,EAAUuS,sBAAsB2c,aACpC,MAAM,IAAI3pB,MAAM,sCAGlB,IAAI,KAAEpyC,GAAS+sC,KAAKi3B,OAEpB,IAAKhkE,IACHA,EACE6sC,EAAUrJ,aACP60B,SAASxrB,EAAU5sC,MAAMgI,MAAO,KAChC4kC,EAAUuS,WAAW5b,aAGrBxjC,GACH,MAAM,IAAIoyC,MAAM,mDAIpB,MAAMvqC,EAASoN,SAAS+3B,cAAc,UAChC7kC,EAAMN,EAAOO,WAAW,MAE9BP,EAAO5H,MAAMgI,MAAS,GAAEjI,MACxB6H,EAAO5H,MAAMiI,OAAU,GAAElI,MAEzB0kE,EAAUj/D,KAAK3I,MAAMkD,EAAOimE,GAE5Bp+D,EAAOI,MAAQy8D,EACf78D,EAAOK,OAASw8D,EAEhB73B,EAAUM,YAAYtlC,GAEtBklC,KAAKy3B,WAAWlyB,IAAIjG,EAAa,CAC/BxkC,SAAQM,MAAK9H,UAEjB,KAAO,CACL,IAAKwsC,EAAUiwB,YACb,MAAM,IAAI1qB,MAAM,0CAGlB,MAAMvqC,EAASglC,EACT1kC,EAAMN,EAAOO,WAAW,MAE9B+9D,EAAiBt+D,EAAQo+D,GAEzBvB,EAAUj/D,KAAK3I,MAAMiwC,KAAKi3B,OAAOhkE,KAAQimE,GAEzCl5B,KAAKy3B,WAAWlyB,IAAIjG,EAAa,CAC/BxkC,SACAM,MACAo8D,gBAAgB,EAChBxyB,OAAQ,CACNppC,EAAGlD,KAAK3I,OAAOi1C,GAAQppC,GAAK,GAAKd,EAAOI,OACxCW,EAAGnD,KAAK3I,OAAOi1C,GAAQnpC,GAAK,GAAKf,EAAOK,SAE1C7H,UAEJ,CAEK0sC,KAAK23B,UACR33B,KAAK23B,QAAUA,EACf33B,KAAK60B,UAAY,IAAI0E,UAAU5B,EAASA,IAGtC33B,KAAKw5B,kBACPx5B,KAAKm4B,QAET,CAEQgB,iBACN,MAAM,cACJl0B,EAAa,KACbhyC,EAAI,QAEJ6nD,GAAU7V,KAAmBhyC,GAAQA,EAAOqjE,GACxCD,EAAuBD,IACzBp2B,KAAKi3B,OAGT,OAAOv+D,KAAKiD,IAAI89D,EAAAA,GAAM3e,EAAS,EACjC,CAEQpa,UACNV,KAAK05B,aAAc,EACnB15B,KAAKS,QACLT,KAAK25B,aACL35B,KAAK45B,kBAELnD,EAAc5yB,OAAO7D,KAAKpyC,GAC5B,CAEQ+rE,aACN35B,KAAKq4B,OAAO98D,SAAS+8D,IACfA,GAASA,IAAUpC,GACrBoC,EAAME,OACR,IAIFx4B,KAAK60B,eAAY5nE,EACjB+yC,KAAKq4B,OAAS,EAChB,CAEQf,aACN,MAAM,cAAEryB,GAAkBjF,KAAKi3B,OAE/Bj3B,KAAK65B,YAAc50B,EA/TW,EA+TiCsxB,CACjE,CAEAuD,SAASC,GACP/5B,KAAKvhB,YAAcs7C,CACrB,CAEQxC,eACNv3B,KAAKg6B,aAAcC,EAAAA,EAAAA,GA5UH,IA4UgCnD,GAEhDJ,EAAQ12B,KAAKg6B,aAAaE,QAAQ,CAChCxwD,KAAM,OACNstD,KAAM,CACJh3B,KAAKpyC,GACLoyC,KAAK/tC,OACL+tC,KAAK23B,QACL33B,KAAKi3B,OAAOhyB,gBAAiB,EAC7BjF,KAAKvhB,YACLuhB,KAAKm6B,eAAere,KAAK9b,QAG/B,CAEQ45B,kBACNlD,EAAQ12B,KAAKg6B,aAAaE,QAAQ,CAChCxwD,KAAM,UACNstD,KAAM,CAACh3B,KAAKpyC,KAEhB,CAEQusE,eAAexB,EAAsByB,EAAoBC,GAC/Dr6B,KAAKw5B,kBAAmB,EACxBx5B,KAAK24B,aAAeA,EACpB34B,KAAKo6B,WAAaA,EAClBp6B,KAAKq6B,YAAcA,EAEfr6B,KAAK63B,WACP73B,KAAKm4B,QAET,CAEAmC,WAAWroE,GACT+tC,KAAKS,QACLT,KAAK/tC,OAASA,EACd+tC,KAAKs3B,aAELZ,EAAQ12B,KAAKg6B,aAAaE,QAAQ,CAChCxwD,KAAM,aACNstD,KAAM,CACJh3B,KAAKpyC,GACLoyC,KAAK/tC,OACL+tC,KAAKi3B,OAAOhyB,gBAAiB,EAC7BjF,KAAKu6B,aAAaze,KAAK9b,QAG7B,CAEQu6B,aAAa5B,EAAsByB,EAAoBC,GAC7Dr6B,KAAK24B,aAAeA,EACpB34B,KAAKo6B,WAAaA,EAClBp6B,KAAKq6B,YAAcA,EACnBr6B,KAAK63B,WAAY,EACjB73B,KAAK43B,aAAc,EAEnB53B,KAAKm4B,QACP,CAEQA,SACDn4B,KAAKq6B,cAINr6B,KAAK05B,aAIL15B,KAAK43B,cAIJ53B,KAAK63B,YACR73B,KAAKw6B,kBAAevtE,GAGtB+yC,KAAKg4B,SAAU,EACfh4B,KAAK43B,aAAc,EACnB53B,KAAK63B,WAAY,GAEjB4C,EAAAA,EAAAA,KAAQ,KACN,GAAIz6B,KAAK05B,YACP,OAAO,EAIT,IAAK15B,KAAK43B,aACan/D,MAAMwmC,KAAKe,KAAKy3B,WAAW3oE,UAAUspE,OAAM,EAAG3qE,cAAeA,IAEhF,OAAO,EAIX,MAAMitE,EAAahiE,KAAK3I,MAAMiwC,KAAKi4B,kBAC7BK,EAAQt4B,KAAKq5B,SAASqB,GAC5B,IAAKpC,GAASA,IAAUpC,EAOtB,OANKoC,GACHt4B,KAAK26B,aAAaD,GAGpB16B,KAAK43B,aAAc,EACnB53B,KAAK63B,WAAY,GACV,EAGL73B,KAAK65B,aAAea,EAAa16B,KAAK65B,aAAgB,GACxD75B,KAAK46B,iBAAiBF,GAGpBA,IAAe16B,KAAKu4B,iBACtBv4B,KAAKy3B,WAAWl8D,SAASs/D,IACvB,MAAM,IACJz/D,EAAG,SAAE3N,EAAQ,SAAEsqE,EAAU/yB,QAAQ,EAAEppC,EAAC,EAAEC,GAAM,CAAC,EAAC,OAAEvI,GAC9CunE,EAECptE,GAAasqE,IAChB38D,EAAIs8D,UAAU97D,GAAK,EAAGC,GAAK,EAAGmkC,KAAK23B,QAAS33B,KAAK23B,SACjDv8D,EAAI8tD,UAAUoP,EAAO18D,GAAK,EAAGC,GAAK,IAG/BpO,IACHotE,EAAcptE,UAAW,EACzB6F,MACF,IAGF0sC,KAAKu4B,eAAiBmC,GAGxB,MAAM55C,EAAMD,KAAKC,MACXg6C,EAAe96B,KAAKw6B,aAAex6B,KAAKo6B,YAAct5C,EAAMkf,KAAKw6B,cAAgB,EACjFO,EAAQriE,KAAKC,IAAI,EAAIqnC,KAAKjlB,UAAYilB,KAAK64B,MAASiC,GACpDE,EAAyBtiE,KAAK3I,MAAMiwC,KAAKi4B,iBAAmB8C,GAKlE,GAHA/6B,KAAKw6B,aAAe15C,EAGhBi6C,EAAQ,IAAML,IAAe16B,KAAKq6B,YAAe,GAAKW,EAAyBh7B,KAAKq6B,YAAe,GAAI,CACzG,GAAIr6B,KAAKi3B,OAAO92B,OAId,OAHAH,KAAK43B,aAAc,EACnB53B,KAAKg4B,SAAU,EACfh4B,KAAKo3B,aACE,EAETp3B,KAAKq3B,WAELr3B,KAAKi4B,iBAAmB,CAG1B,MAAO,GAAI8C,EAAQ,IAAqB,IAAfL,GAAoBM,EAAyB,GAAI,CACxE,GAAIh7B,KAAKi3B,OAAO92B,OAId,OAHAH,KAAK43B,aAAc,EACnB53B,KAAKg4B,SAAU,EACfh4B,KAAKo3B,aACE,EAETp3B,KAAKq3B,WAELr3B,KAAKi4B,iBAAmBj4B,KAAKq6B,YAAe,CAG9C,KAAO,SACmBptE,IAAxB+yC,KAAKk4B,iBACDwC,IAAe16B,KAAKk4B,gBAEnB6C,EAAQ,GAAKC,EAAyBh7B,KAAKk4B,gBACxC6C,EAAQ,GAAKC,EAAyBh7B,KAAKk4B,gBAKnD,OAFAl4B,KAAKk4B,oBAAiBjrE,EACtB+yC,KAAK43B,aAAc,GACZ,EAIP53B,KAAKi4B,kBAAoB8C,CAC3B,CAEA,MAAME,EAAiBviE,KAAK3I,MAAMiwC,KAAKi4B,kBAEvC,QAAKj4B,KAAKq5B,SAAS4B,KACjBj7B,KAAK26B,aAAaM,GAClBj7B,KAAK63B,WAAY,EACjB73B,KAAK43B,aAAc,GACZ,EAGE,KAEf,CAEQyB,SAASqB,GACf,OAAO16B,KAAKq4B,OAAOqC,EACrB,CAEQC,aAAaD,GACnB16B,KAAKq4B,OAAOqC,GAAcxE,EAE1BQ,EAAQ12B,KAAKg6B,aAAaE,QAAQ,CAChCxwD,KAAM,eACNstD,KAAM,CAACh3B,KAAKpyC,GAAI8sE,EAAY16B,KAAKk7B,YAAYpf,KAAK9b,QAEtD,CAEQ46B,iBAAiBF,GACvB,GAAI16B,KAAKq6B,YAAe,EACtB,OAGF,MAAM9B,GAAiB0B,EAAAA,EAAAA,GAAcj6B,KAAKq6B,YAAcK,EAAa,GACrE16B,KAAKq4B,OAAOE,QAAkBtrE,CAChC,CAEQiuE,YAAYR,EAAoBS,GAClCn7B,KAAKq4B,OAAOqC,KAAgBxE,IAIhCl2B,KAAKq4B,OAAOqC,GAAcS,EAEtBn7B,KAAK63B,WACP73B,KAAKm4B,SAET,EAGF,SAASiB,EAAiBt+D,EAA2Bo+D,GACnD,MAAMkC,EAAgB1iE,KAAK3I,MAAM+K,EAAO27B,YAAcyiC,GAChDmC,EAAiB3iE,KAAK3I,MAAM+K,EAAO2gD,aAAeyd,GACpDp+D,EAAOI,QAAUkgE,GAAiBtgE,EAAOK,SAAWkgE,IACtDvgE,EAAOI,MAAQkgE,EACftgE,EAAOK,OAASkgE,EAEpB,CAEA,S,0dC3fA,MAAMC,EAKJ17B,YACS7sB,EACCgvB,EACAw5B,GACR,KAHOxoD,OAAAA,EAAc,KACbgvB,SAAAA,EAAsC,KACtCw5B,QAAAA,EAAgBx7B,EAAA,qBAPF,IAAIyD,KAA4BzD,EAAA,+BAEtB,IAAIyD,IAOtC,CAGO9C,UACP,CAEA86B,QAAQxE,GACNh3B,KAAKy7B,YAAY,CACf/oD,KAAM,OACNskD,QAEJ,CAEAkD,QAAQwB,GACN,MAAM,cAAEC,EAAa,wBAAEC,GAA4B57B,KAE7C/hC,GAAY4X,EAAAA,EAAAA,GAAc8lD,GAC1BhwC,EAA0B,CAC9BjZ,KAAM,aACNzU,eACGy9D,GAGCG,EAAe,CAAE59D,aAGjB69D,EAAwB,IAAI9qB,SAAQ,CAACC,EAAS8qB,KAClDltE,OAAOmtE,OAAOH,EAAc,CAAE5qB,UAAS8qB,UAAS,IAGlD,GAAqD,mBAA1CpwC,EAAQqrC,KAAKrrC,EAAQqrC,KAAKnmE,OAAS,GAAmB,CAC/D86B,EAAQswC,cAAe,EAEvB,MAAM7H,EAAWzoC,EAAQqrC,KAAKkF,MAC9BL,EAAazH,SAAWA,EACxBwH,EAAwBr2B,IAAI6uB,EAAUyH,EACxC,CAeA,OAbAF,EAAcp2B,IAAItnC,EAAW49D,GAC7BC,EACGK,OAAM,KAAe,IACrBC,SAAQ,KACPT,EAAc93B,OAAO5lC,GAEjB49D,EAAazH,UACfwH,EAAwB/3B,OAAOg4B,EAAazH,SAC9C,IAGJp0B,KAAKy7B,YAAY9vC,GAEVmwC,CACT,CAEAO,eAAeC,GACbA,EAAiBC,YAAa,EAE9B,MAAM,UAAEt+D,GAAc+hC,KAAK47B,wBAAwBh4B,IAAI04B,IAAqB,CAAC,EACxEr+D,GAIL+hC,KAAKy7B,YAAY,CACf/oD,KAAM,iBACNzU,aAEJ,CAEAu+D,UAAUnkE,GACR,MAAM,cAAEsjE,EAAa,QAAEJ,GAAYv7B,KACnC,GAAI3nC,EAAKkjE,UAAYA,EAOrB,GAHkB,WAAdljE,EAAKqa,MAAqBstB,KAAK+B,UACjC/B,KAAK+B,SAAS1pC,EAAKokE,QAEH,mBAAdpkE,EAAKqa,KAA2B,CAClC,MAAMmpD,EAAeF,EAAc/3B,IAAIvrC,EAAK4F,WACxC49D,IACExjE,EAAK0Y,MACP8qD,EAAaE,OAAO1jE,EAAK0Y,OAEzB8qD,EAAa5qB,QAAQ54C,EAAKqkE,UAGhC,MAAO,GAAkB,mBAAdrkE,EAAKqa,KACOipD,EAAc/3B,IAAIvrC,EAAK4F,YAC9Bm2D,cAAc/7D,EAAKskE,mBAC5B,GAAkB,mBAAdtkE,EAAKqa,KACd,MAAM,IAAI2yB,MAAMhtC,EAAK0Y,OAAOzc,QAEhC,CAEQmnE,YAAYpjE,GAClBA,EAAKkjE,QAAUv7B,KAAKu7B,QAEpBv7B,KAAKjtB,OAAO0oD,YAAYpjE,EAC1B,EAGK,SAASs+D,EACdiG,EACA76B,EACAw5B,GAEA,MAAMsB,EAAY,IAAIvB,EAAkBsB,EAAQ76B,EAAUw5B,GAE1D,SAASuB,GAAc,KAAEzkE,IACvBwkE,EAAUL,UAAUnkE,EACtB,CAQA,OANAukE,EAAOpuC,iBAAiB,UAAWsuC,GAEnCD,EAAUn8B,QAAU,KAClBk8B,EAAOluC,oBAAoB,UAAWouC,EAAc,EAG/CD,CACT,C,kJC5LA,MAAME,EAAS,IAAIv5B,IACnB,IAGIw5B,EAHAC,EAAwB,GACxBC,EAAwB,GA0D5B,SAASC,EAAS3X,EAAkB4X,GAClC,MAAMC,EAAeL,GAAkBD,EAAOn5B,IAAIo5B,GAC9CK,IACFA,EAAavnE,MAAM2qC,QACnB48B,EAAavnE,MAAMqiB,YAAc,EAC7BklD,EAAatX,eAAesX,EAAatX,iBAG/C,MAEMuX,EAAcC,EAAgB/X,GAFrB14D,EAAAA,EAAAA,KAAe2D,EAAAA,EAAAA,OAAam3D,YAAYnzD,QAAUoK,EAAAA,GAAAA,OAEZu+D,GACrD,IAAKE,EACH,OAGF,IAAKP,EAAOrqE,IAAI4qE,GAId,YAFAjvE,EAAAA,EAAAA,MAAamvE,iBAAgBC,EAAAA,EAAAA,IAAgBC,EAAaJ,GAAaK,aAKzE,MAAMC,EAAYb,EAAOn5B,IAAI05B,GAEzBM,EAAU9X,aACZ8X,EAAU9X,cAGZkX,EAAiBM,EAEbM,EAAU9nE,MAAM1C,MAClBotC,EAAAA,EAAAA,GAASo9B,EAAU9nE,MAEvB,CAEO,SAAS+nE,IACd,MAAMR,EAAeL,GAAkBD,EAAOn5B,IAAIo5B,GAC9CK,GACFA,EAAavnE,MAAM2qC,OAEvB,CAEO,SAAS6lB,EACdd,EACAE,EACA94B,EACAk5B,EACAC,GAEA,IAAKgX,EAAOrqE,IAAI8yD,GAAU,CACxB,MAAMsY,EAxGV,SACEtY,EACA9yC,EACAozC,EACAC,GAEA,MAAMjwD,EAAQ,IAAI1B,MAElB,SAAS2pE,EAAYxX,GACnB,OAAQlpD,IACD0/D,EAAOrqE,IAAI8yD,MAIZ2C,EAAAA,EAAAA,GAAwBryD,IAI5BinE,EAAOn5B,IAAI4hB,GAAUG,SAASpqD,SAASqxB,IACrCA,EAAQ25B,EAAWlpD,EAAE,IACrB,CAEN,CAoBA,OAlBAvH,EAAM04B,iBAAiB,aAAcuvC,EAAY,iBACjDjoE,EAAM04B,iBAAiB,OAAQuvC,EAAY,WAC3CjoE,EAAM04B,iBAAiB,QAASuvC,EAAY,YAC5CjoE,EAAM04B,iBAAiB,YAAauvC,EAAY,gBAChDjoE,EAAM04B,iBAAiB,aAAcuvC,EAAY,iBACjDjoE,EAAM04B,iBAAiB,UAAWuvC,EAAY,cAC9CjoE,EAAM04B,iBAAiB,SAAS,KACzBuuC,EAAOrqE,IAAI8yD,MAIZ2C,EAAAA,EAAAA,GAAwBryD,IAI5BqnE,EAAS3X,GAAQ,IAGZ,CACL1vD,QACA4c,OACAi0C,MAAO,IAAIqX,MAAMloE,EAAO,CACtB8tC,IAAKA,CAAC7wB,EAAQljB,IAAgCkjB,EAAOljB,KAEvD81D,SAAU,GACVG,cACAC,gBAEJ,CAoDkBkY,CAAYzY,EAASE,EAAWI,EAAaC,GAC3DgX,EAAOx3B,IAAIigB,EAASsY,GAwIxB,SAAyBA,EAActY,GAClB,UAAfsY,EAAMprD,MAAqBwqD,EAAW/oD,SAASqxC,KACjD0X,EAAWpsE,KAAK00D,GAChB0X,EAAW3mB,KAAK2nB,IAGC,UAAfJ,EAAMprD,MAAqBuqD,EAAW9oD,SAASqxC,KACjDyX,EAAWnsE,KAAK00D,GAChByX,EAAW1mB,KAAK2nB,GAEpB,CAjJIC,CAAgBL,EAAOtY,EACzB,CACA,MAAM,MAAE1vD,EAAK,MAAE6wD,EAAK,SAAEhB,GAAaoX,EAAOn5B,IAAI4hB,GAI9C,OAFAG,EAAS70D,KAAK87B,GAEP,CACL0T,KAAKltC,GACH,IAAK0C,EAAMyqC,OAAQ,OACnB,MAAM88B,EAAeL,GAAkBD,EAAOn5B,IAAIo5B,GAC9CK,GAAgBL,IAAmBxX,IACrC6X,EAAavnE,MAAM2qC,QACnB48B,EAAavnE,MAAMqiB,YAAc,GAC7BgwC,EAAAA,EAAAA,GAAwBkV,EAAavnE,SACvCunE,EAAavnE,MAAMouC,QAAQk6B,sBAAwB,QAEjDf,EAAatX,eAAesX,EAAatX,iBAG/CiX,EAAiBxX,EAEZ1vD,EAAM1C,MACT0C,EAAM1C,IAAMA,EACZ0C,EAAMuoE,QAAU,OAEZjrE,EAAI+gB,SAAS,kBAAoBqiD,EAAAA,YAC5B1gE,EAAMouC,QAAQk6B,uBACrBE,EAAAA,EAAAA,GAA4BxoE,MAIhC0qC,EAAAA,EAAAA,GAAS1qC,GA+Hf,SAAsB4c,EAAqB8yC,GACzC,IAAI14D,EAAAA,EAAAA,KAAe2D,EAAAA,EAAAA,OAAa8tE,aAAaC,iBAAmBC,EAAAA,GAAAA,MAA2B,OAC3F,MAAM,OAAEjyE,IAAWixE,EAAAA,EAAAA,IAAgBC,EAAalY,GAASmY,YACnDe,GAAen9D,EAAAA,EAAAA,KAAyB9Q,EAAAA,EAAAA,QAAcjE,OACtDmyE,EAAe/wE,GACnBA,EAAGkhC,WAAY,MAAKtiC,MAAckyE,GAAgB9wE,EAAGkhC,WAAY,MAAK4vC,KAG3D,UAAThsD,IACFwqD,EAAaA,EAAWnuE,OAAO4vE,IAGpB,UAATjsD,IACFuqD,EAAaA,EAAWluE,OAAO4vE,GAEnC,CA7IMC,CAAalZ,EAAWF,EAC1B,EAEA/kB,QACMu8B,IAAmBxX,GACrB1vD,EAAM2qC,OAEV,EAEAumB,OACE,GAAIgW,IAAmBxX,EAAS,CAE9B,MAAM6C,EAAUvyD,EAAM1C,IACtB0C,EAAM2qC,SAEN1I,EAAAA,EAAAA,KAAQ,KACNjiC,EAAM1C,IAAM,GACZ0C,EAAM1C,IAAMi1D,CAAO,GAEvB,CACF,EAEA3wD,eAAe8wD,GACTwU,IAAmBxX,IACjB1vD,EAAM+oE,SACR/oE,EAAM+oE,SAASrW,GAEf1yD,EAAMqiB,YAAcqwC,EAG1B,EAEAhC,UAAUqB,GACJmV,IAAmBxX,IACrB1vD,EAAM+xD,OAASA,EACf/xD,EAAMwiB,OAAQ,EAElB,EAEAmuC,gBAAgBqY,GACV9B,IAAmBxX,IACrB1vD,EAAMkyD,aAAe8W,EAEzB,EAEApY,YAAYpuC,GAERxiB,EAAMwiB,WADMrrB,IAAVqrB,GACaxiB,EAAMwiB,MAEPA,CAElB,EAEAquC,QAEAG,mBACEqW,EAAS3X,EACX,EAEA1rC,OAAMA,KACIyjD,EAAgB/X,GAAS14D,EAAAA,EAAAA,KAAe2D,EAAAA,EAAAA,OAAam3D,YAAYnzD,QAG3EolB,QAAOA,KACG0jD,EAAgB/X,GAAS14D,EAAAA,EAAAA,KAAe2D,EAAAA,EAAAA,OAAam3D,YAAYnzD,QAAQ,GAGnFsyD,uBACEoW,EAAS3X,GAAS,EACpB,EAEA9kB,QAAQq+B,GAAwB,GAC9B,MAAMjB,EAAQf,EAAOn5B,IAAI4hB,GACpBsY,IAILA,EAAMnY,SAAWmY,EAAMnY,SAAS52D,QAAQiwE,GAAMA,IAAMpyC,IAE/CkxC,EAAMnY,SAAS90D,SAClBitE,EAAMhoE,MAAM2qC,QACZs8B,EAAOl5B,OAAO2hB,GAEVuZ,GAgCZ,SAAyBjB,EAActY,GACrC,MAAMyZ,EAAiBtwB,GAAgBA,IAAO6W,EAC3B,UAAfsY,EAAMprD,OACRwqD,EAAaA,EAAWnuE,OAAOkwE,IAGd,UAAfnB,EAAMprD,OACRuqD,EAAaA,EAAWluE,OAAOkwE,GAEnC,CAxCUC,CAAgBpB,EAAOtY,GAGrBA,IAAYwX,IACdA,OAAiB/vE,IAGvB,EAEJ,CAkDA,SAASswE,EAAgB4B,EAAoB1qE,EAASoK,EAAAA,GAAAA,OAAoBu+D,GACxE,MACMgC,EAlDR,SAAuBtB,GACrB,OAAQA,EAAMprD,MACZ,IAAK,QAAS,OAAOwqD,EACrB,IAAK,QAAS,OAAOD,EACrB,QAAS,OAEb,CA4CgBoC,CADAtC,EAAOn5B,IAAIu7B,IAEzB,IAAKC,EAAO,OAEZ,GAAI3qE,IAAWoK,EAAAA,GAAAA,OAAoB,CACjC,MAAM2gD,EAAQ4f,EAAM/qD,QAAQ8qD,GAC5B,GAAI3f,EAAQ,EAAG,OAEf,OAAO4f,EAAM5f,GADK4d,GAAkB,EAAI,GAE1C,CAEA,MAAM,OAAE5wE,IAAWixE,EAAAA,EAAAA,IAAgBC,EAAayB,GAAWxB,YACrD2B,EAAYF,EAAMrwE,QAAQnB,GAAOA,EAAGkhC,WAAY,MAAKtiC,OACrDgzD,EAAQ8f,EAAUjrD,QAAQ8qD,GAChC,GAAI3f,EAAQ,EAAG,OACf,IAAIzkC,EAAYtmB,IAAWoK,EAAAA,GAAAA,QAAsB,EAAI,EAErD,OADIu+D,IAAgBriD,IAAc,GAC3BukD,EAAU9f,EAAQzkC,EAC3B,CAEO,SAASljB,EAAYvD,GAC1B,MAAQ,IAAEirE,EAAAA,EAAAA,IAAcjrE,MAAYA,EAAQI,MAC9C,CAEA,SAASgpE,EAAalY,GAGpB,MAAO,CACLmY,WAHiBnY,EAAQx2B,MAAM,qBAAsB,GAIrDt6B,KAHW06B,OAAOo2B,EAAQphD,MAAM,KAAK83D,OAKzC,CAGA,SAASgC,EAAkBsB,EAAeC,GACxC,IAAKD,IAAQC,EAAK,OAAO,EACzB,MAAQ/qE,KAAMgrE,EAAS/B,WAAYgC,GAAWjC,EAAa8B,IACnD9qE,KAAMkrE,EAASjC,WAAYkC,GAAWnC,EAAa+B,GACrDtqC,EAAOyqC,EAAUF,EACvB,OAAgB,IAATvqC,EAAa0qC,EAAOC,cAAcH,GAAUxqC,CACrD,C,ugBC5VO,IAAKna,GAKX,SALWA,GAAAA,EAAAA,EAAc,WAAdA,EAAAA,EAAc,eAAdA,EAAAA,EAAc,eAAdA,EAAAA,EAAc,iBAKzB,CALWA,IAAAA,EAAc,KA+DnB,MAAM+kD,EAA4B,GAMzC,SAASC,EAAYC,EAAU1vB,GAC7B,OAAKA,EACE73C,KAAKwnE,MAAO3vB,EAAE4vB,MAAQF,EAAEE,MAAS5vB,EAAE6vB,MAAQH,EAAEG,OADrC,CAEjB,CAEA,SAASC,EAAeJ,EAAU1vB,GAChC,MAAO,CACL30C,GAAIqkE,EAAEE,MAAQ5vB,EAAE4vB,OAAS,EACzBtkE,GAAIokE,EAAEG,MAAQ7vB,EAAE6vB,OAAS,EAE7B,CAEA,IAAIE,EAAgB,EACpB,MAAMC,EAAW,IC5DV,MAeL3gC,aAAY,UACV4gC,EAAY,EAAC,YACbC,EAAc,IAAG,UACjBC,EAAY,IAAG,MACfzmB,EAAQ,KACU,CAAC,GAAGla,EAAA,yBAAAA,EAAA,2BAAAA,EAAA,yBAAAA,EAAA,qBAAAA,EAAA,4BAAAA,EAAA,8BAAAA,EAAA,+BACtBC,KAAKwgC,UAAYA,EACjBxgC,KAAKygC,YAAcA,EACnBzgC,KAAK0gC,UAAYA,EACjB1gC,KAAKia,MAAQA,EACbja,KAAK2gC,aAAe,IAAIloE,MAAuB,EAAjBunC,KAAKwgC,WAAe5nE,KAAK,GACvDonC,KAAK4gC,eAAiB,IAAInoE,MAAuB,EAAjBunC,KAAKwgC,WAAe5nE,KAAK,GACzDonC,KAAK6gC,gBAAkB,IAAIpoE,MAAuB,EAAjBunC,KAAKwgC,WAAe5nE,KAAK,EAC5D,CAEAkoE,MAAMzjE,GACJ,IAAI0jE,EAWJ,YATqB9zE,KADrBoQ,EAAIA,EAAE0sD,eAAiB1sD,GACjB2jE,WACJD,EAAY1jE,EAAE2jE,gBACQ/zE,IAAboQ,EAAEsxD,OACXoS,GAAwB,GAAZ1jE,EAAEsxD,YACQ1hE,IAAboQ,EAAE4jE,QAAqC,IAAb5jE,EAAE4jE,SACrCF,GAAwB,GAAZ1jE,EAAE4jE,QAEhBjhC,KAAK6gC,gBAAgB/vE,KAAK+vB,KAAKC,OAC/Bkf,KAAK6gC,gBAAgB3xC,QACjB6xC,EAAY,GACd/gC,KAAK2gC,aAAa7vE,KAAKiwE,GACvB/gC,KAAK2gC,aAAazxC,QACX8Q,KAAKkhC,UAAU,KAEtBlhC,KAAK4gC,eAAe9vE,KAAKiwE,GACzB/gC,KAAK4gC,eAAe1xC,QACb8Q,KAAKkhC,WAAW,GAE3B,CAEAA,UAAUnmD,GACR,MAAMomD,GAA4B,IAAfpmD,EAAmBilB,KAAK4gC,eAAiB5gC,KAAK2gC,aACjE,QAAsB1zE,IAAlBk0E,EAAW,GAAkB,OAAOpmD,EACxC,GACEilB,KAAK6gC,gBAAiC,EAAjB7gC,KAAKwgC,UAAgB,GAAKxgC,KAAKia,MAAQp5B,KAAKC,OAC9DqgD,EAAW,KAAOA,EAA4B,EAAjBnhC,KAAKwgC,UAAgB,GAErD,OAAO,EAET,MAAMY,EAAgBD,EAAWlnD,MAAM,EAAG+lB,KAAKwgC,WACzCa,EAAgBF,EAAWlnD,MAAM+lB,KAAKwgC,UAA4B,EAAjBxgC,KAAKwgC,WACtDc,EAASF,EAAchpC,QAAO,CAACmpC,EAAGl9D,IAAMk9D,EAAIl9D,IAC5Cm9D,EAASH,EAAcjpC,QAAO,CAACmpC,EAAGl9D,IAAMk9D,EAAIl9D,IAC5Co9D,EAAaH,EAASF,EAAcvwE,OACpC6wE,EAAaF,EAASH,EAAcxwE,OAC1C,OAAO6H,KAAKi+B,IAAI8qC,GAAc/oE,KAAKi+B,IAAI+qC,EAAa1hC,KAAK0gC,YACpD1gC,KAAKygC,YAAc/nE,KAAKi+B,IAAI+qC,EACnC,GDV4B,CAC5BlB,UAAW,EACXC,YAAa,GACbC,UAAW,GACXzmB,MAAO,MAGF,SAAS/7C,EAAcyc,EAAsBsC,GAAyB,IAAA0kD,EAAAC,EAAAC,EAC3E,IAAIC,EAkBAC,EAjBAC,GAAW,EACXC,GAAY,EACZC,GAAY,EACZC,EAAkB,EAClBC,EAA+B,QAAtBT,EAAG1kD,EAAQolD,mBAAW,IAAAV,EAAAA,EAAI,EACnCW,EAAoB,CACtB1mE,EAAG,EACHC,EAAG,GAED0mE,EAAiB,CACnB3mE,GAAG,EACHC,GAAG,GAED2mE,EAAqB,CACvB5mE,EAAGlI,OAAO+uE,WAAa,EACvB5mE,EAAGnI,OAAOgvE,YAAc,GAG1B,MAAMC,EAAyB,QAAlBf,EAAG3kD,EAAQ0lD,eAAO,IAAAf,EAAAA,EAAI,EAC7BgB,EAAyB,QAAlBf,EAAG5kD,EAAQ2lD,eAAO,IAAAf,EAAAA,EAAI,EAEnC,SAAS1jE,EAAUd,GACjB,IAAI4f,EAAQ4lD,0BACTxlE,EAAE0V,OAAuBha,QAAQkkB,EAAQ4lD,2BACtCxlE,EAAE0V,OAAuB2M,QAAQzC,EAAQ4lD,yBAF/C,CASA,GAFAf,EAAezkE,EAEA,cAAXA,EAAEqV,MACCuK,EAAQ6lD,gBAAkB7lD,EAAQ5e,QACrChB,EAAEmV,iBAGJtK,SAASsmB,iBAAiB,YAAau0C,GACvC76D,SAASsmB,iBAAiB,UAAWpwB,QAChC,GAAe,eAAXf,EAAEqV,KAAuB,CAGlC,MAAMK,EAAS1V,EAAE0V,OACjBA,EAAOyb,iBAAiB,YAAau0C,EAAQ,CAAE5Y,SAAS,IACxDp3C,EAAOyb,iBAAiB,WAAYpwB,GACpC2U,EAAOyb,iBAAiB,cAAepwB,GAEnC,YAAaf,SACCpQ,IAAZoQ,EAAE8iE,QACJ9iE,EAAE8iE,MAAQ9iE,EAAE2sD,QAAQ,GAAGmW,YAGTlzE,IAAZoQ,EAAE+iE,QACJ/iE,EAAE+iE,MAAQ/iE,EAAE2sD,QAAQ,GAAGoW,OAGA,IAArB/iE,EAAE2sD,QAAQn5D,SACZsxE,EAAkBnC,EAAY3iE,EAAE2sD,QAAQ,GAAI3sD,EAAE2sD,QAAQ,IACtDwY,EAAqBnC,EAAehjE,EAAE2sD,QAAQ,GAAI3sD,EAAE2sD,QAAQ,KAGlE,CAEI/sC,EAAQ+lD,YACV96D,SAAS+6D,KAAKjrC,UAAUhlC,IAAI,mBAG1BiqB,EAAQ9e,WACV8e,EAAQ9e,UAAUd,EAxCpB,CA0CF,CAEA,SAASe,EAAUf,GACbykE,IACE7kD,EAAQ+lD,YACV96D,SAAS+6D,KAAKjrC,UAAUC,OAAO,mBAGjC/vB,SAASwmB,oBAAoB,UAAWtwB,GACxC8J,SAASwmB,oBAAoB,YAAaq0C,GACzCjB,EAAa/uD,OAAuB2b,oBAAoB,cAAetwB,GACvE0jE,EAAa/uD,OAAuB2b,oBAAoB,WAAYtwB,GACpE0jE,EAAa/uD,OAAuB2b,oBAAoB,YAAaq0C,GAElEn7B,EAAAA,IAAU3qB,EAAQpC,yBACpBpiB,MAAMwmC,KAAK/2B,SAAS+7B,iBAA8BhnB,EAAQpC,0BACvDtf,SAAS2nE,IACRA,EAAWhwE,MAAMiwE,SAAW,EAAE,IAIhC9lE,IACE2kE,EACE/kD,EAAQ7e,WACV6e,EAAQ7e,UAAUf,GAEA,YAAXA,EAAEqV,OACPuK,EAAQmmD,eAAiBviD,KAAKC,MAAQw/C,EAAgB,IACxDrjD,EAAQmmD,cAAc/lE,EAAG,CACvBgmE,QAASvB,EAAc3B,MACvBmD,QAASxB,EAAc1B,SAEhBnjD,EAAQvtB,SAAc,WAAY2N,GAAmB,IAAbA,EAAEQ,QACnDof,EAAQvtB,QAAQ2N,GAElBijE,EAAgBz/C,KAAKC,SAK3BkhD,GAAW,EACXC,GAAY,EACZC,GAAY,EACZC,EAAkB,EAClBC,GAAYmB,EAAAA,EAAAA,IAAMnB,EAAWO,EAASC,GACtCb,OAAmB90E,EACnBq1E,EAAoB,CAClB1mE,EAAG,EACHC,EAAG,GAEL0mE,EAAiB,CACf3mE,GAAG,EACHC,GAAG,GAEL2mE,EAAqB,CACnB5mE,EAAGlI,OAAO+uE,WAAa,EACvB5mE,EAAGnI,OAAOgvE,YAAc,GAE1BZ,OAAe70E,CACjB,CAEA,SAAS81E,EAAO1lE,GACd,GAAIykE,EAAc,CAChB,GAAe,cAAXzkE,EAAEqV,MAAyB,YAAarV,SAC1BpQ,IAAZoQ,EAAE8iE,QACJ9iE,EAAE8iE,MAAQ9iE,EAAE2sD,QAAQ,GAAGmW,YAGTlzE,IAAZoQ,EAAE+iE,QACJ/iE,EAAE+iE,MAAQ/iE,EAAE2sD,QAAQ,GAAGoW,OAGrBnjD,EAAQumD,QAAUrB,EAAkB,GAA0B,IAArB9kE,EAAE2sD,QAAQn5D,QAAc,CACnE,MAAM4yE,EAAczD,EAAY3iE,EAAE2sD,QAAQ,GAAI3sD,EAAE2sD,QAAQ,IAClD0Z,EAAcrD,EAAehjE,EAAE2sD,QAAQ,GAAI3sD,EAAE2sD,QAAQ,IACrD2Z,EAAcD,EAAY9nE,EAAI4mE,EAAmB5mE,EACjDgoE,EAAcF,EAAY7nE,EAAI2mE,EAAmB3mE,EACjDgoE,EAAaJ,EAActB,EACjCllD,EAAQumD,OAAOnmE,EAAG,CAChBwmE,aACAC,eAAgBtB,EAAmB5mE,EACnCmoE,eAAgBvB,EAAmB3mE,EACnC8nE,cACAC,cACAI,eAAgBN,EAAY9nE,EAC5BqoE,eAAgBP,EAAY7nE,IAEX,IAAfgoE,IAAkB7B,GAAW,EACnC,CAGF,MAAM2B,EAActmE,EAAE8iE,MAAS2B,EAAa3B,MACtCyD,EAAcvmE,EAAE+iE,MAAS0B,EAAa1B,OAExC1nE,KAAKi+B,IAAIgtC,IA9LK,IA8L8BjrE,KAAKi+B,IAAIitC,IA9LvC,MA+LhB5B,GAAW,GAGb,IAAIkC,GAAsB,EAEtBjnD,EAAQ5e,SACV4e,EAAQ5e,OAAOhB,EAAGykE,EAAc,CAC9B6B,cACAC,gBAEFM,GAAsB,GAGpBjnD,EAAQnC,UAAYmnD,IACtBA,EAaN,SAAiB5kE,EAAgCsmE,EAAqBC,GAEpE,GAAIh8B,EAAAA,GAAQ,CACV,MAAMhsC,EAAKyB,EAAqB2sD,QAAQ,GAAGmW,MAC3C,GAAIvkE,GAAKmkE,GAA6BnkE,GAAKlI,OAAO+uE,WAAa1C,EAC7D,OAAO,CAEX,CAEA,MAAMoE,EAAOzrE,KAAKi+B,IAAIgtC,GAChBS,EAAO1rE,KAAKi+B,IAAIitC,GAEtB,GAAID,GAAeC,GACHlrE,KAAKiD,IAAIwoE,EAAMC,GAAQ1rE,KAAKC,IAAIwrE,EAAMC,GAExC,EACV,OAAO,EAIX,IAAIC,EAOJ,GANIF,GA9OgB,GA+OlBE,EAAO,IACED,GAhPS,KAiPlBC,EAAO,MAGJA,EACH,OAAO,EAGT,GAAKtC,GAEE,GAAIA,IAAqBsC,EAE9B,OAAO,OAHPtC,EAAmBsC,EAMrB,OAkGJ,SACEhnE,EACAinE,EACAX,EACAC,EACA9oD,GAEA,MAAyB,MAArBwpD,EAEOxpD,EAAQzd,EADbsmE,EAAc,EACE3oD,EAAeupD,KAEfvpD,EAAewpD,OAEL,MAArBF,GAEAxpD,EAAQzd,EADbumE,EAAc,EACE5oD,EAAeypD,GAEfzpD,EAAe0pD,KAKvC,CAxHWC,CAAatnE,EAAGgnE,EAAMV,EAAaC,EAAa3mD,EAAQnC,QACjE,CApDkBA,CAAQzd,EAAGsmE,EAAaC,GACpCM,EAAsBjC,GAGpBr6B,EAAAA,IAAUs8B,GAAuBjnD,EAAQpC,yBAC3CpiB,MAAMwmC,KAAK/2B,SAAS+7B,iBAA8BhnB,EAAQpC,0BACvDtf,SAAS2nE,IACRA,EAAWhwE,MAAMiwE,SAAW,QAAQ,GAG5C,CACF,CA2CA,MAAMyB,GAAmBnkE,EAAAA,EAAAA,IAASrC,EAhQH,KAgQwC,GACjEymE,GAAmBpkE,EAAAA,EAAAA,IAASrC,EAlQH,KAkQwC,GAEvE,SAAS0mE,EAAeznE,GAClB2kE,IACJ7jE,EAAUd,GACV2kE,GAAW,EACXQ,EAAqB,CAAE5mE,EAAGyB,EAAEzB,EAAGC,EAAGwB,EAAExB,GACtC,CA0CA,SAASkpE,EAAQ1nE,GACf,IAAK4f,EAAQumD,SAAWvmD,EAAQ5e,OAAQ,OACxC,GAAI4e,EAAQ4lD,0BACTxlE,EAAE0V,OAAuBha,QAAQkkB,EAAQ4lD,0BACtCxlE,EAAE0V,OAAuB2M,QAAQzC,EAAQ4lD,0BAE7C,OAEFxlE,EAAEmV,iBACFnV,EAAEM,kBACF,MAAM,cAAEqnE,EAAgB,GAAM/nD,EAC9B,GAAIA,EAAQmmD,eAAiBv0E,OAAOo2E,GAAG5nE,EAAEqxD,QAAS,IAAM7/D,OAAOo2E,GAAG5nE,EAAEsxD,QAAS,IAAMtxD,EAAEwxB,QAKnF,OAJAi2C,EAAeznE,GACf+kE,EAAYA,EAAY,EAAI,EAAI4C,EAChC/nD,EAAQmmD,cAAc/lE,EAAG,CAAEgmE,QAAShmE,EAAE8iE,MAAOmD,QAASjmE,EAAE+iE,aACxD4B,GAAW,GAGb,MAAMkD,EAAiB7nE,EAAEuxB,SAAWvxB,EAAEwxB,SAAWxxB,EAAE2/B,SAInD,GAHIkoC,GA3DN,SAAqB7nE,GACnB,IAAK4f,EAAQumD,OAAQ,OACrBsB,EAAeznE,GACf,MAAMsmE,EAActmE,EAAEzB,EAAI4mE,EAAmB5mE,EACvCgoE,EAAcvmE,EAAExB,EAAI2mE,EAAmB3mE,EACvCk/D,GAAQwI,EAAAA,EAAAA,IAAMlmE,EAAEsxD,QAAS,GAAI,IACnCyT,GAAqB,IAARrH,EACbqH,GAAYmB,EAAAA,EAAAA,IAAMnB,EAAqB,GAAVO,EAAyB,EAAVC,GAC5C3lD,EAAQumD,OAAOnmE,EAAG,CAChB8nE,MAAMp1E,EAAAA,EAAAA,IAAMqyE,EAAW,GACvB0B,eAAgBtB,EAAmB5mE,EACnCmoE,eAAgBvB,EAAmB3mE,EACnC8nE,cACAC,cACAI,eAAgB3mE,EAAEzB,EAClBqoE,eAAgB5mE,EAAExB,IAEpBgpE,EAAiBxnE,EACnB,CA0CI+nE,CAAY/nE,IAET6nE,IAAmBhD,EAAW,CAEjC,MAAMmD,EAAc9E,EAASO,MAAMzjE,IACjB,IAAd+kE,GAEOiD,IA/Cf,SAAqBhoE,GACnB,IAAK4f,EAAQ5e,OAAQ,OACrBymE,EAAeznE,GAEVklE,EAAe3mE,GAAKlD,KAAK4sE,KAAKhD,EAAkB1mE,KAAOlD,KAAK4sE,KAAKjoE,EAAEqxD,UACtE4T,EAAkB1mE,GAAKyB,EAAEqxD,QAEtB6T,EAAe1mE,GAAKnD,KAAK4sE,KAAKhD,EAAkBzmE,KAAOnD,KAAK4sE,KAAKjoE,EAAEsxD,UACtE2T,EAAkBzmE,GAAKwB,EAAEsxD,QAE3B,MAAM,EAAE/yD,EAAC,EAAEC,GAAMymE,EACjBrlD,EAAQ5e,OAAOhB,EAAGykE,EAAe,CAC/B6B,YAAa/nE,EACbgoE,YAAa/nE,IACZ,CAAC0pE,EAAIC,KACNjD,EAAiB,CAAE3mE,EAAG2pE,EAAI1pE,EAAG2pE,EAAI,IAEnCZ,EAAiBvnE,EACnB,CA4BMooE,CAAYpoE,EAIhB,CACF,CAMA,OAJAsd,EAAQ6T,iBAAiB,QAASu2C,GAClCpqD,EAAQ6T,iBAAiB,YAAarwB,GACtCwc,EAAQ6T,iBAAiB,aAAcrwB,EAAW,CAAEgsD,SAAUltC,EAAQyoD,eAE/D,KACLtnE,IACAuc,EAAQ+T,oBAAoB,QAASq2C,GACrCpqD,EAAQ+T,oBAAoB,aAAcvwB,GAC1Cwc,EAAQ+T,oBAAoB,YAAavwB,EAAU,CAEvD,C,yGEvZO,SAASwnE,EAAQC,GACtB,MAAO,CACLta,SAASsa,EAAMrxB,UAAU,EAAG,GAAI,IAChC+W,SAASsa,EAAMrxB,UAAU,EAAG,GAAI,IAChC+W,SAASsa,EAAMrxB,UAAU,EAAG,GAAI,IAEpC,CAOO,SAASsxB,EAAQD,GACtB,MAAME,EAAKF,EAAM,GAAG19B,SAAS,IACvBitB,EAAKyQ,EAAM,GAAG19B,SAAS,IACvBktB,EAAKwQ,EAAM,GAAG19B,SAAS,IAC7B,OAAqB,GAAb49B,EAAGj1E,OAAc,IAAMi1E,EAAKA,IAAoB,GAAb3Q,EAAGtkE,OAAc,IAAMskE,EAAKA,IAAoB,GAAbC,EAAGvkE,OAAc,IAAMukE,EAAKA,EAC5G,CAaO,SAAS2Q,GAASpQ,EAAGC,EAAGrlB,IAC7BolB,GAAK,IACLC,GAAK,IACLrlB,GAAK,IAEL,IACIyuB,EAAY36D,EADZ1I,EAAMjD,KAAKiD,IAAIg6D,EAAGC,EAAGrlB,GAAI53C,EAAMD,KAAKC,IAAIg9D,EAAGC,EAAGrlB,GACvBmK,EAAY/+C,EAEnCqqE,EAAIrqE,EAAMhD,EAGd,GAFA0L,EAAW,GAAP1I,EAAW,EAAIqqE,EAAIrqE,EAEnBA,GAAOhD,EACTqmE,EAAI,MACC,CACL,OAAQrjE,GACN,KAAKg6D,EACHqJ,GAAKpJ,EAAIrlB,GAAKy1B,GAAKpQ,EAAIrlB,EAAI,EAAI,GAC/B,MACF,KAAKqlB,EACHoJ,GAAKzuB,EAAIolB,GAAKqQ,EAAI,EAClB,MACF,KAAKz1B,EACHyuB,GAAKrJ,EAAIC,GAAKoQ,EAAI,EAItBhH,GAAK,CACP,CAEA,MAAO,CAACA,EAAG36D,EAAGq2C,EAChB,CAaO,SAASurB,GAASjH,EAAG36D,EAAGq2C,IAC7B,IAAIib,EAAYC,EAAYrlB,EAExBthD,EAAIyJ,KAAKkB,MAAU,EAAJolE,GACfkH,EAAQ,EAAJlH,EAAQ/vE,EACZU,EAAI+qD,GAAK,EAAIr2C,GACb8hE,EAAIzrB,GAAK,EAAIwrB,EAAI7hE,GACjBk9D,EAAI7mB,GAAK,GAAK,EAAIwrB,GAAK7hE,GAE3B,OAAQpV,EAAI,GACV,KAAK,EACH0mE,EAAIjb,EACJkb,EAAI2L,EACJhxB,EAAI5gD,EACJ,MACF,KAAK,EACHgmE,EAAIwQ,EACJvQ,EAAIlb,EACJnK,EAAI5gD,EACJ,MACF,KAAK,EACHgmE,EAAIhmE,EACJimE,EAAIlb,EACJnK,EAAIgxB,EACJ,MACF,KAAK,EACH5L,EAAIhmE,EACJimE,EAAIuQ,EACJ51B,EAAImK,EACJ,MACF,KAAK,EACHib,EAAI4L,EACJ3L,EAAIjmE,EACJ4gD,EAAImK,EACJ,MACF,KAAK,EACHib,EAAIjb,EACJkb,EAAIjmE,EACJ4gD,EAAI41B,EAIR,MAAO,CACLztE,KAAK3I,MAAU,IAAJ4lE,GACXj9D,KAAK3I,MAAU,IAAJ6lE,GACXl9D,KAAK3I,MAAU,IAAJwgD,GAEf,CAEO7R,eAAe0nC,EAAgBxjD,GAEpC,MACMyjD,EAAuC,CAAC,EAAG,EAAG,GACpD,IAAIhuE,EACA6C,EACAC,EAEAtK,EADA5B,GAAK,EAELq3E,EAAgC,CAAC,EAAG,EAAG,GACvCpyB,EAAQ,EAEZ,MAAMp5C,EAASoN,SAAS+3B,cAAc,UAChCw0B,EAAU35D,EAAOO,YAAcP,EAAOO,WAAW,MACvD,IAAKo5D,EACH,OAAO4R,EAGT,MAAME,QAAcC,EAAAA,EAAAA,IAAa5jD,GACjCznB,EAASorE,EAAME,eAAiBF,EAAM9qB,cAAgB8qB,EAAMprE,OAC5DD,EAAQqrE,EAAMG,cAAgBH,EAAM9vC,aAAe8vC,EAAMrrE,MACzDJ,EAAOK,OAASA,EAChBL,EAAOI,MAAQA,EAEfu5D,EAAQvL,UAAUqd,EAAO,EAAG,GAE5B,IACEluE,EAAOo8D,EAAQK,aAAa,EAAG,EAAG55D,EAAOC,EAG3C,CAFE,MAAOkC,GACP,OAAOgpE,CACT,CAKA,IAHAx1E,EAASwH,EAAKA,KAAKxH,QAGX5B,GAAK03E,IAAiB91E,GACH,IAArBwH,EAAKA,KAAKpJ,EAAI,OAChBilD,EACFoyB,EAAI,IAAMjuE,EAAKA,KAAKpJ,GACpBq3E,EAAI,IAAMjuE,EAAKA,KAAKpJ,EAAI,GACxBq3E,EAAI,IAAMjuE,EAAKA,KAAKpJ,EAAI,IAO1B,OAJAq3E,EAAI,GAAK5tE,KAAKkB,MAAM0sE,EAAI,GAAKpyB,GAC7BoyB,EAAI,GAAK5tE,KAAKkB,MAAM0sE,EAAI,GAAKpyB,GAC7BoyB,EAAI,GAAK5tE,KAAKkB,MAAM0sE,EAAI,GAAKpyB,GAEtBoyB,CACT,CAEO,SAASM,EAAapoD,GAC3B,MAAOm3C,EAAGC,EAAGrlB,GAAK/xB,EAElB,MADa,MAASm3C,EAAI,MAASC,EAAI,MAASrlB,CAElD,CAGO,SAASs2B,EAAgBroD,GAC9B,IAAKsoD,EAAKC,EAAYxsE,GAASwrE,EAAQvnD,GAOvC,OALAuoD,EAAaruE,KAAKC,IAAI,EAAGouE,EAAa,IAAO,IAAO,EAAIA,IACxDxsE,EAAQA,EAAQ,GACZ7B,KAAKiD,IAAI,EAAW,IAARpB,GACZ7B,KAAKiD,IAAI,EAAGjD,KAAKC,IAAI,EAAG,EAAY,IAAR4B,IAExB,QAAa,IAANusE,MAA2B,IAAbC,OAA8B,IAARxsE,SACrD,C,iBC3Me,SAAS0/D,EAAcppE,EAAgB2uD,GACpD,OAAOA,EAAQ9mD,KAAKkB,MAAM4lD,EAAQ3uD,GAAUA,CAC9C,C,2ICYA,IAAI+mE,GAAc,EAEH,SAASoP,EACtBlnC,EACAnlB,EACAwU,EACA83C,EAAS,EACTC,EAAcC,EAAAA,IACdC,EACAC,EACAC,GAEA,MAAMC,EAkBR,SACEznC,EACAnlB,EACAusD,EAAcC,EAAAA,IACdC,GAEA,MAAQv+C,UAAW2+C,GAAe7sD,GAC5B,UAAE8sD,GAAc3nC,EAEtB,QAAuB7yC,IAAnBm6E,EAA8B,CAChC,MAAMM,EAASF,EAAa1nC,EAAU2nC,UAEtC,GAAIC,GAAUR,EACZ,OAAOO,GAAaC,EAASR,GACxB,GAAIQ,EAASR,EAClB,OAAOO,GAAaC,EAASR,EAEjC,KAAO,IAAIE,IAAmBO,EAAAA,GAAAA,GAC5B,OAAOH,EAAaN,EACf,GAAIE,IAAmBO,EAAAA,GAAAA,KAC5B,OAAOjvE,KAAKiD,IAAI,EAAG6rE,EAAaN,EAClC,CAEA,OAAOO,CACT,CA1CqBG,CAAoB9nC,EAAWnlB,EAASusD,EAAaE,GAEpEA,IAAmBO,EAAAA,GAAAA,SAKnBl3E,EAAAA,EAAAA,MAAY3C,SAASC,MAAMF,iBAAmBmtC,EAAAA,MAChDqsC,EAAgB,GAGlBQ,EAAa/nC,EAAWnlB,EAAS4sD,EAAYp4C,EAAU83C,EAAQI,EAAeC,IAR5EO,EAAa/nC,EAAWnlB,EAAS4sD,EAAYp4C,EAAU83C,EAAQ,EASnE,CAEO,SAASa,IACd,OAAOlQ,CACT,CA4BA,SAASiQ,EACP/nC,EACAnlB,EACA4sD,EACAp4C,EACA83C,EAAS,EACTI,EACAC,GAEA,MAAQz+C,UAAW2+C,EAAY/rB,aAAcssB,GAAkBptD,GACvD8sD,UAAWO,EAAkBvsB,aAAcwsB,EAAe,aAAEthC,GAAiB7G,EAC/EooC,EAAwBZ,GAA8BxnC,EAAUoE,QAAQikC,aAC1E/4C,OAAO0Q,EAAUoE,QAAQikC,cACzBF,EAMJ,IAAIG,EAEJ,OANIJ,IAAqBT,IACvBznC,EAAU2nC,UAAYF,GAKhBp4C,GACN,IAAK,QACHi5C,EAAQZ,EAAaP,EAAUM,GAAcz/B,EAAAA,GAAa,EAAI,GAC9D,MACF,IAAK,MACHsgC,EAAQZ,EAAaO,EAAgBd,GAAWM,EAAaW,GAC7D,MAEF,IAAK,UACL,IAAK,SACL,IAAK,cACHE,EAAOL,EAAgBG,EAClBV,EAAaO,EAAgB,GAAMR,EAAaW,EAAwB,GACxEV,EAAaP,EAAUM,EAIhC,GAAIa,EAAO,EAAG,CACZ,MAAMC,GAAiBd,EACvBa,EAAO1vE,KAAKiD,IAAIysE,EAAMC,EACxB,MAAO,GAAID,EAAO,EAAG,CACnB,MAAMC,EAAgB1hC,GAAgB4gC,EAAaW,GACnDE,EAAO1vE,KAAKC,IAAIyvE,EAAMC,EACxB,CAEA,GAAa,IAATD,EACF,OAGF,MAAMr1D,EAASw0D,EAAaa,EAE5B,GAAsB,IAAlBf,EAEF,YADAvnC,EAAU2nC,UAAY10D,GAIxB6kD,GAAc,EAEd,MAAM0Q,EAAU5vE,KAAKi+B,IAAIyxC,GACnBG,EAAaD,EAAUE,EAAAA,IAA4CC,EAAkBC,EACrF/wE,EAAW0vE,GACfsB,EAAAA,IACGL,EAAUnB,EAAAA,KAA6ByB,EAAAA,IAA2BD,EAAAA,KAEjEE,EAAUhoD,KAAKC,MACfgoD,GAAuB50C,EAAAA,EAAAA,OAE7B6D,EAAAA,EAAAA,KAAQ,MACNgxC,EAAAA,EAAAA,KAAc,KACZ,MAAMxH,EAAI7oE,KAAKC,KAAKkoB,KAAKC,MAAQ+nD,GAAWlxE,EAAU,GAChDqxE,EAAcZ,GAAQ,EAAIG,EAAWhH,IAU3C,OARAzhC,EAAU2nC,UAAY/uE,KAAK3I,MAAMgjB,EAASi2D,GAE1CpR,EAAc2J,EAAI,EAEb3J,GACHkR,IAGKlR,CAAW,GAClB,GAEN,CAEA,SAAS8Q,EAAenH,GACtB,OAAO,GAAM,EAAIA,IAAM,CACzB,CAEA,SAASkH,EAAgBlH,GACvB,OAAO,GAAM,EAAIA,IAAM,GACzB,C,uEC7JA,MAEM0H,EAAsC,IAAIzlC,IAEjC,SAASyf,EAA2BnjB,EAAwBxiC,EAAc3F,EAJhE,KASvB,OAJIlH,EAAAA,EAAAA,MAAY3C,SAASC,MAAMF,iBAAmBmtC,EAAAA,MAChDrjC,EAAW,GAMf,SAAsBmoC,EAAwBxiC,EAAc3F,GAC1D,MAAMzG,EAA0C,QAAlC4uC,EAAU+O,aAAa,QAC/B,WACJI,EAAYxY,YAAayyC,EAAc,YAAEl6B,EAAa9K,SAAS,SAAEilC,IAC/DrpC,EAEJ,IAAIsoC,EAAO9qE,EAAO2xC,EAElB,GAAIm5B,EAAO,EAAG,CACZ,MAAMC,GAAiBp5B,GAAc/9C,GAAS,EAAI,GAClDk3E,EAAO1vE,KAAKiD,IAAIysE,EAAMC,EACxB,MAAO,GAAID,EAAO,EAAG,CACnB,MAAMC,EAAgBr5B,GAAeC,EAAai6B,GAClDd,EAAO1vE,KAAKC,IAAIyvE,EAAMC,EACxB,CAEA,GAAa,IAATD,EACF,OAAOp3B,QAAQC,UAGbk4B,GAAYF,EAASv2E,IAAIy2E,IAC3BF,EAASrlC,IAAIulC,EAAbF,GAGF,MAAMl2D,EAASk8B,EAAam5B,EAE5B,GAAiB,IAAbzwE,EAEF,OADAmoC,EAAUmP,WAAal8B,EAChBi+B,QAAQC,UAGjB,IAAIm4B,GAAY,EAChB,MAAMx7E,EAAK8K,KAAK2wE,SAASnhC,WAQzB,IAAI+I,EAPJnR,EAAUoE,QAAQilC,SAAWv7E,EAC7Bq7E,EAAS1jC,IAAI33C,GAAI,KACfw7E,GAAY,CAAI,IAGlBtpC,EAAU5sC,MAAMo2E,eAAiB,OAGjC,MAAMxN,EAAU,IAAI9qB,SAAe2kB,IACjC1kB,EAAU0kB,CAAC,IAEPkT,EAAUhoD,KAAKC,MAmBrB,OAjBA25C,EAAAA,EAAAA,KAAQ,KACN,GAAI2O,EAAW,OAAO,EAEtB,MAAM7H,EAAI7oE,KAAKC,KAAKkoB,KAAKC,MAAQ+nD,GAAWlxE,EAAU,GAEhDqxE,EAAcZ,GAAQ,EAehC,SAAoB7G,GAClB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAjBoCgH,CAAWhH,IAS3C,OARAzhC,EAAUmP,WAAav2C,KAAK3I,MAAMgjB,EAASi2D,GAEvCzH,GAAK,IACPzhC,EAAU5sC,MAAMo2E,eAAiB,UAC1BxpC,EAAUoE,QAAQilC,SACzBF,EAASplC,OAAOj2C,GAChBqjD,KAEKswB,EAAI,CAAC,IAGPzF,CACT,CAnES+L,CAAa/nC,EAAWxiC,EAAM3F,EACvC,C,kDCbe,SAASyvC,EAAqBzsB,EAAsB4uD,EAAiBC,GAClF,IAAKD,GAAS5uD,IAAYzS,SAASokC,cACjC,OAGF,MAAMhF,EAAY5zC,OAAO6zC,eACnB+mB,EAAQpmD,SAASuhE,cACjBC,EAAY/uD,EAAQ+uD,WAAa/uD,EAElCzI,EAAAA,IAAiBs3D,GAA0BE,GAAcA,EAAUC,WAKxErb,EAAMsb,mBAAmBJ,EAAuB7uD,EAAU+uD,GAE1Dpb,EAAMub,UAAS,GACfviC,EAAUE,kBACVF,EAAU8G,SAASkgB,IARjB3zC,EAAQxI,OASZ,C,kDCjBe,SAAS23D,IACtB,MAAMxiC,EAAY5zC,OAAO6zC,eACzB,IAAIwiC,EAAoBziC,GAAWO,WAAaP,EAAUU,WAAW,GAAGyG,qBAAkBxhD,EAE1F,MAAM+8E,EAA2B1iC,GAAW2iC,WAAa3iC,EAAU4iC,YAAc,GAC5EC,EAAuB7iC,EAAU2iC,UAAWG,EAAAA,KACjD,IAAKL,GAA6D,IAAxCA,EAAkBM,kBAC1C,OAGF,MAAMnuD,EAAazjB,MAAMwmC,KAAK8qC,EAAkBttB,UAC7CrkB,QAAO,CAACl+B,EAAQowE,IAbA,IAcXA,EAAKC,UAA6BD,EAAKtyC,UAAU6pB,SAAS,sBACrDppD,MAAMwmC,KAAKqrC,EAAKrmC,iBAAiB,aACrC7L,QAAO,CAAC3S,EAAK+kD,IAAc/kD,EAAIuZ,OAAO5P,OAAQo7C,EAA0BtmC,QAAQjmC,aAAa/D,GAhBnF,IAiBJowE,EAAKC,UAA6BD,EAAKtyC,UAAU6pB,SAAS,WAC5D3nD,EAAO8kC,OAAO5P,OAAQk7C,EAAqBpmC,QAAQjmC,YAGrD/D,GACN,IAGL,KAAO6vE,EAAkBU,YACvBV,EAAkBW,YAAYX,EAAkBU,YAQlD,OANAV,OAAoB98E,EAEf+8E,GACH9tD,EAAWggD,MAGNhgD,CACT,CAEA,SAASiuD,EAAuBxvD,EAAe1sB,GAC7C,QAtCmB,IAsCf0sB,EAAQ4vD,WAA8B5vD,EAAwBqd,UAAU6pB,SAAS5zD,OAI9E0sB,EAAQ03B,YAAa83B,EAAuBxvD,EAAQ03B,WAAYpkD,EACzE,C,kDC3CO,SAAS08E,EAAoBh8B,GAClC,GAAyB,SAArBA,EAAGz7C,MAAM03E,QACX,OAAO,EAGT,MAAM36D,EAAO0+B,EAAGpxC,yBACRpC,OAAQ0vE,GAAiBC,EAAAA,EAAAA,MAEjC,OAAQ76D,EAAKG,KAAOy6D,GAAmB56D,EAAKG,IAAMH,EAAK9U,QAAW,CACpE,C,gFCaA,MAAM4vE,EAAmB,CACvBzqC,UAAMrzC,EACNwzC,WAAOxzC,EACPi6D,kBAAcj6D,EACdo6D,iBAAap6D,EACbw6D,mBAAex6D,EACfu6D,eAAWv6D,EACX+5D,UAAM/5D,EACNq6D,YAAQr6D,GAGH,SAAS25D,EAAqBhB,EAA0BD,GAC7D,MAAM,aAAEqlB,GAAiBt3E,OAAOu3E,UAC5BD,GACEplB,GAAUsC,EAAetC,GACzBD,GAAUulB,EAAwBvlB,IAGtC1J,QAAQkvB,KAAK,iDAEjB,CAEO,SAASjjB,EAAetC,GAC7B,MAAM,aAAEolB,GAAiBt3E,OAAOu3E,UAC5BD,IAEFA,EAAaplB,SAAWA,QAAAA,EAAY,KAExC,CAEO,SAASslB,EAAwBvlB,GACtC,MAAM,aAAEqlB,GAAiBt3E,OAAOu3E,UAC5BD,GACFn8E,OAAO4iD,QAAQ,IAAKs5B,KAAqBplB,IAAYpqD,SAAQ,EAAE1L,EAAK+8B,MAClE,IAEEo+C,EAAaI,iBAAiBv7E,EAAK+8B,EAEnC,CADA,MAAOmvB,GACP,IAIR,CAEO,SAASsvB,IACd,MAAM,aAAEL,GAAiBt3E,OAAOu3E,UAC5BD,IAEFA,EAAaplB,SAAW,KACxBslB,EAAwBH,GACpBC,EAAaM,gBAAeN,EAAaM,cAAgB,QAC7DN,EAAa/iB,qBAEjB,CAEO,SAASN,EAAiBlE,EAAuC,QACtE,MAAM,aAAEunB,GAAiBt3E,OAAOu3E,UAC5BD,GAAgBA,EAAaM,gBAC/BN,EAAaM,cAAgB7nB,EAEjC,CAEO,SAASwE,EAAiBxE,GAC/B,IAAKA,QAA4Bx2D,IAAnBw2D,EAAMt0B,eAA6CliC,IAAnBw2D,EAAM9rD,SAAwB,OAC5E8rD,EAAMt0B,SAAWz2B,KAAKC,IAAI8qD,EAAMt0B,SAAUs0B,EAAM9rD,UAEhD,MAAM,aAAEqzE,GAAiBt3E,OAAOu3E,UAChCD,GAAc/iB,mBAAmBxE,EACnC,CAEO,SAAS8nB,GAAmB,MACjC7sE,EAAK,OAAE8sE,EAAM,MAAEC,EAAK,QAAEC,IAEtB,GAAI,kBAAmBh4E,OACrB,OAAO,IAAIA,OAAOi4E,cAAc,CAC9BjtE,QACA8sE,SACAC,QACAC,WAIN,C,kDCxGA,MAAME,EAAQ,IAAIC,QAKH,SAAS72B,EAAgC82B,GACtD,MAAO,IAAI9U,KACT,MAAM+U,EAASH,EAAMhoC,IAAIkoC,GACzB,GAAIC,IAAUC,EAAAA,EAAAA,IAAqBD,EAAOE,SAAUjV,GAClD,OAAO+U,EAAOG,WAGhB,MAAMhyE,EAAS4xE,KAAM9U,GAErB,OADA4U,EAAMrmC,IAAIumC,EAAI,CAAEG,SAAUjV,EAAMkV,WAAYhyE,IACrCA,CAAM,CAEjB,C,kDChBA,MAEMiyE,EAAgB,IAAI35B,OAAQ,OAAMC,EAAAA,EAAAA,YAA0B,IAwClE,EAtC8BxiD,IAC5B,MAAMm8E,EAAQn8E,EAAKmU,MAAM,MACnBioE,EAAsBD,EAAM3sE,KAAK,IACvC,GAAI4sE,EAAoBx7E,OANPy7E,IAOf,OAAO,EAIT,IADoBj9E,QAAQg9E,EAAoBr9C,MAAMm9C,IAEpD,OAAO,EAET,MAAMI,EAAeH,EAAMl9E,KAAKs9E,IAC9B,IAAIC,EAAa,EACjB,KAAOh6B,EAAAA,EAAAA,KAAkB+5B,IAGvB,GAFAC,IAEIA,EApBW,IAsBb,OADAh6B,EAAAA,EAAAA,UAAyB,GACjB,EAIZ,OAAOg6B,CAAU,IAGnB,IAAI9wE,EAAMywE,EAAMv7E,OAChB,IAAK,IAAI5B,EAAI,EAAGA,EAAIs9E,EAAa17E,OAAQ5B,IAAK,CAC5C,IAAyB,IAArBs9E,EAAat9E,GACf,OAAO,EAELs9E,EAAat9E,GAAK0M,IACpBA,EAAM4wE,EAAat9E,GAEvB,CAEA,OAAO0M,CAAG,C,2CCzCZ,MAAM+wE,EAAcxkE,SAAS+3B,cAAc,OAEpC,SAAS0sC,EAAsB/2D,GACpC,MAAM0xB,EAAY5zC,OAAO6zC,eAEzB,GAAID,GAAWU,YAAcV,EAAUO,WAAY,CACjD,MAAMymB,EAAQhnB,EAAUU,WAAW,GACnCsmB,EAAMse,iBAEN,MAAMC,EAAWve,EAAMwe,yBAAyBl3D,GAC1Cm3D,EAAmBF,EAASnD,UAClCpb,EAAM0e,WAAWH,GACbE,GACFze,EAAM2e,cAAcF,GACpBze,EAAM4e,YAAYH,IAElBze,EAAMub,UAAS,GAEjBviC,EAAUE,kBACVF,EAAU8G,SAASkgB,EACrB,CACF,CAEO,SAAS9a,EAAuB1T,EAAyBqtC,GAC9D,IAAKrtC,EACH,MAAO,GAGT,MAAMstC,EAAM15E,OAAO6zC,eACnB,IAAK6lC,IAAQA,EAAIvlC,WACf,OAAO/H,EAAUmH,UAGnB,MAAMqnB,EAAQ8e,EAAIplC,WAAW,GAAGqlC,aAChC,OAAK/e,EAAMgf,eAAextC,GAIrBqtC,GAAsBrtC,EAAU+hB,SAASyM,EAAMrgB,0BAIpDqgB,EAAMub,UAAS,GACfvb,EAAMif,SAASztC,EAAW,GAE1B4sC,EAAYzlC,UAAY,GACxBylC,EAAYtsC,YAAYkuB,EAAM7f,iBAEvBi+B,EAAYzlC,WATV,GAJAnH,EAAUmH,SAcrB,C,kCC/CA,MAKA,EALmB5pC,IACjBA,EAAEM,kBACFN,EAAEmV,gBAAgB,C,kBCJpB,IAAIg7D,EAEG,SAASC,EAAsBC,EAAS,IAAKtZ,EAA8BuZ,GAAa,GACxFH,IACHA,EAAetlE,SAAS+3B,cAAc,SACtCutC,EAAaj9D,aAAa,OAAQ,SAGpCi9D,EAAaj9D,aAAa,SAAUm9D,GAEhCC,EACFH,EAAaI,gBAAgB,YAE7BJ,EAAaj9D,aAAa,WAAY,YAIxCi9D,EAAaK,SAAW,KACxBL,EAAajzE,MAAQ,GACrBizE,EAAaK,SAAWzZ,EAExBoZ,EAAaM,OACf,C","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/FakeIcon.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/FullNameTitle.module.scss?6448","webpack://telegram-t/./src/components/common/FullNameTitle.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumIcon.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/AvatarBadge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatOrderDiff.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Skeleton.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useStateRef.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/lib/rlottie/RLottie.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/stopEvent.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiGroupCall, ApiUser } from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  animationLevel: AnimationLevel;\n};\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n  usersById,\n  chatsById,\n  animationLevel,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (participants) {\n      return Object.values(participants).filter((_, i) => i < 3).map(({ id, isUser }) => {\n        if (isUser) {\n          if (!usersById[id]) {\n            return undefined;\n          }\n          return { user: usersById[id] };\n        } else {\n          if (!chatsById[id]) {\n            return undefined;\n          }\n          return { chat: chatsById[id] };\n        }\n      }).filter(Boolean);\n    } else return [];\n  }, [chatsById, participants, usersById]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  if (!groupCall) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        !isActive && 'is-hidden',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', groupCall.participantsCount || 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {fetchedParticipants.map((p) => {\n          if (!p) return undefined;\n          if (p.user) {\n            return <Avatar key={p.user.id} user={p.user} animationLevel={animationLevel} />;\n          } else {\n            return <Avatar key={p.chat.id} chat={p.chat} animationLevel={animationLevel} />;\n          }\n        })}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }) => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n    return {\n      groupCall,\n      usersById: global.users.byId,\n      chatsById: global.chats.byId,\n      activeGroupCallId: global.groupCalls.activeGroupCallId,\n      isActive: ((!groupCall ? (chat && chat.isCallNotEmpty && chat.isCallActive)\n        : (groupCall.participantsCount > 0 && groupCall.isLoaded)))\n        && (activeGroupCallId !== groupCall?.id),\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { ANIMATION_LEVEL_MAX } from '../../config';\nimport usePrevious from '../../hooks/usePrevious';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useTimeout from '../../hooks/useTimeout';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n};\n\nconst ANIMATION_TIME = 200;\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n}) => {\n  const lang = useLang();\n\n  const prevText = usePrevious(text);\n  const forceUpdate = useForceUpdate();\n\n  const isAnimatingRef = useRef(false);\n\n  const shouldAnimate = getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MAX;\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) return text;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld}>{prevText[i]}</div>\n            <div className={styles.characterNew}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    isAnimatingRef.current = true;\n\n    return elements;\n  }, [prevText, shouldAnimate, text]);\n\n  useTimeout(() => {\n    isAnimatingRef.current = false;\n    forceUpdate();\n  }, isAnimatingRef.current ? ANIMATION_TIME : undefined);\n\n  return (\n    <span className={styles.root} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean; lastSyncTime?: number };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, lastSyncTime, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad, undefined, lastSyncTime);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  }, [markPreviewLoaded, previewUrl]);\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n// eslint-disable-next-line max-len\nconst TRANSCRIBE_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 24\" class=\"loading-svg\"><rect class=\"loading-rect\" fill=\"transparent\" width=\"32\" height=\"24\" stroke-width=\"3\" stroke-linejoin=\"round\" rx=\"6\" ry=\"6\" stroke=\"var(--accent-color)\" stroke-dashoffset=\"1\" stroke-dasharray=\"32,68\"></rect></svg>';\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isUploading, isPlaying, isActivated, playPause, onCancelUpload, onPlay, message.id, message.chatId, origin]);\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  }, [cancelMessageMediaDownload, downloadMessageMedia, isDownloading, message]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  }, [handleSeek]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n  }, []);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  const handleTranscribe = useCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  }, [message.chatId, message.id, transcribeAudio]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  const transcribeSvgMemo = useMemo(() => (\n    <div dangerouslySetInnerHTML={{ __html: TRANSCRIBE_SVG }} />\n  ), []);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloading ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          transcribeSvgMemo,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  svgMemo?: React.ReactNode,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && svgMemo}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat, selectCurrentMessageList, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../global/selectors';\nimport {\n  getChatDescription,\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    fullInfo,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat);\n  }, [chat, isTopicInfo, activeChatUsernames, topicId]);\n\n  const handleNotificationChange = useCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  }, [chatId, isTopicInfo, topicId, updateChatMutedState, updateTopicMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {/* {!forceShowSelf && ( */}\n      {/*   <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}> */}\n      {/*     <span>{lang('Notifications')}</span> */}\n      {/*     <Switcher */}\n      {/*       id=\"group-notifications\" */}\n      {/*       label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'} */}\n      {/*       checked={areNotificationsEnabled} */}\n      {/*       inactive */}\n      {/*     /> */}\n      {/*   </ListItem> */}\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime,\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { AnimationLevel } from '../../types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  animationLevel: AnimationLevel;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  animationLevel,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash! });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n          animationLevel={animationLevel}\n          withVideo\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [\n    isUploading, isDownloading, isTransferring, withMediaViewer, onCancelUpload, dispatch, message, onMediaClick,\n  ]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiFakeType } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport './FakeIcon.scss';\n\ntype OwnProps = {\n  fakeType: ApiFakeType;\n};\n\nconst FakeIcon: FC<OwnProps> = ({\n  fakeType,\n}) => {\n  const lang = useLang();\n\n  return (\n    <span className=\"FakeIcon\">\n      {lang(fakeType === 'fake' ? 'FakeMessage' : 'ScamMessage')}\n    </span>\n  );\n};\n\nexport default memo(FakeIcon);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\n// eslint-disable-next-line max-len\nconst VERIFIED_ICON = { __html: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.3 2.9c.1.1.2.1.3.2.7.6 1.3 1.1 2 1.7.3.2.6.4.9.4.9.1 1.7.2 2.6.2.5 0 .6.1.7.7.1.9.1 1.8.2 2.6 0 .4.2.7.4 1 .6.7 1.1 1.3 1.7 2 .3.4.3.5 0 .8-.5.6-1.1 1.3-1.6 1.9-.3.3-.5.7-.5 1.2-.1.8-.2 1.7-.2 2.5 0 .4-.2.5-.6.6-.8 0-1.6.1-2.5.2-.5 0-1 .2-1.4.5-.6.5-1.3 1.1-1.9 1.6-.3.3-.5.3-.8 0-.7-.6-1.4-1.2-2-1.8-.3-.2-.6-.4-.9-.4-.9-.1-1.8-.2-2.7-.2-.4 0-.5-.2-.6-.5 0-.9-.1-1.7-.2-2.6 0-.4-.2-.8-.4-1.1-.6-.6-1.1-1.3-1.6-2-.4-.4-.3-.5 0-1 .6-.6 1.1-1.3 1.7-1.9.3-.3.4-.6.4-1 0-.8.1-1.6.2-2.5 0-.5.1-.6.6-.6.9-.1 1.7-.1 2.6-.2.4 0 .7-.2 1-.4.7-.6 1.4-1.2 2.1-1.7.1-.2.3-.3.5-.2z\" style=\"fill: var(--color-fill)\"/><path class=\"lol\" d=\"M16.4 10.1l-.2.2-5.4 5.4c-.1.1-.2.2-.4 0l-2.6-2.6c-.2-.2-.1-.3 0-.4.2-.2.5-.6.7-.6.3 0 .5.4.7.6l1.1 1.1c.2.2.3.2.5 0l4.3-4.3c.2-.2.4-.3.6 0 .1.2.3.3.4.5.2 0 .3.1.3.1z\" style=\"fill: var(--color-checkmark)\"/></svg>' };\n\nconst VerifiedIcon: FC = () => {\n  return (\n    // eslint-disable-next-line react/no-danger\n    <span className=\"VerifiedIcon\" dangerouslySetInnerHTML={VERIFIED_ICON} />\n  );\n};\n\nexport default VerifiedIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ysHMmXALnn0fgFRc7Bn7\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_STATUS_LOOP_LIMIT } from '../../config';\nimport renderText from './helpers/renderText';\nimport { getChatTitle, getUserFullName, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport FakeIcon from './FakeIcon';\nimport CustomEmoji from './CustomEmoji';\nimport PremiumIcon from './PremiumIcon';\n\nimport styles from './FullNameTitle.module.scss';\n\ntype OwnProps = {\n  peer: ApiChat | ApiUser;\n  className?: string;\n  noVerified?: boolean;\n  noFake?: boolean;\n  withEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  isSavedMessages?: boolean;\n  noLoopLimit?: boolean;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  observeIntersection?: ObserveFn;\n};\n\nconst FullNameTitle: FC<OwnProps> = ({\n  className,\n  peer,\n  noVerified,\n  noFake,\n  withEmojiStatus,\n  emojiStatusSize,\n  isSavedMessages,\n  noLoopLimit,\n  onEmojiStatusClick,\n  observeIntersection,\n}) => {\n  const lang = useLang();\n  const isUser = isUserId(peer.id);\n  const title = isUser ? getUserFullName(peer as ApiUser) : getChatTitle(lang, peer as ApiChat);\n  const emojiStatus = isUser && (peer as ApiUser).emojiStatus;\n  const isPremium = isUser && (peer as ApiUser).isPremium;\n\n  if (isSavedMessages) {\n    return (\n      <div className={buildClassName('title', styles.root, className)}>\n        <h3>{lang('SavedMessages')}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div className={buildClassName('title', styles.root, className)}>\n      <h3 dir=\"auto\" className=\"fullName\">{renderText(title || '')}</h3>\n      {!noVerified && peer.isVerified && <VerifiedIcon />}\n      {!noFake && peer.fakeType && <FakeIcon fakeType={peer.fakeType} />}\n      {withEmojiStatus && emojiStatus && (\n        <CustomEmoji\n          documentId={emojiStatus.documentId}\n          size={emojiStatusSize}\n          loopLimit={!noLoopLimit ? EMOJI_STATUS_LOOP_LIMIT : undefined}\n          observeIntersectionForLoading={observeIntersection}\n          onClick={onEmojiStatusClick}\n        />\n      )}\n      {withEmojiStatus && !emojiStatus && isPremium && <PremiumIcon />}\n    </div>\n  );\n};\n\nexport default memo(FullNameTitle);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat, selectChatMessages, selectChatOnlineCount, selectThreadInfo, selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  withVideoAvatar?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    animationLevel: AnimationLevel;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  withVideoAvatar,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  topic,\n  messagesCount,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && lastSyncTime) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (chat && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          chat={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          withVideo={withVideoAvatar}\n          animationLevel={animationLevel}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon topic={topic!} className=\"topic-header-icon\" size={TOPIC_ICON_SIZE} />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      lastSyncTime,\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      animationLevel: global.settings.byKey.animationLevel,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  }, [hideSpoiler, message, onClick]);\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\"};","import React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  }, []);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon-message-failed\" />\n          </div>\n        ) : <i className={`icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport {MIN_PASSWORD_LENGTH, TEST_PWD} from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState(TEST_PWD);\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          onKeyDown={(e)=>{\n            if(e.code == \"Enter\" && !onSubmit){\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n          }}\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={isPasswordVisible ? 'icon-eye' : 'icon-eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isUserId(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport generateIdFor from '../../util/generateIdFor';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './PremiumIcon.scss';\n\n// eslint-disable-next-line max-len\nconst PREMIUM_ICON = { __html: '<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"var(--color-fill)\"/></svg>' };\nconst store: Record<string, boolean> = {};\n\ntype OwnProps = {\n  withGradient?: boolean;\n  big?: boolean;\n  className?: string;\n  onClick?: VoidFunction;\n};\n\nconst PremiumIcon: FC<OwnProps> = ({\n  withGradient,\n  big,\n  className,\n  onClick,\n}) => {\n  const html = useMemo(() => {\n    return withGradient ? getPremiumIconGradient() : PREMIUM_ICON;\n  }, [withGradient]);\n\n  return (\n    <i\n      onClick={onClick}\n      className={buildClassName(\n        'PremiumIcon', className, withGradient && 'gradient', onClick && 'clickable', big && 'big',\n      )}\n      dangerouslySetInnerHTML={html}\n      title=\"Premium\"\n    />\n  );\n};\n\nfunction getPremiumIconGradient() {\n  const id = generateIdFor(store);\n  return {\n    // eslint-disable-next-line max-len\n    __html: `<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><defs><linearGradient id=\"${id}\" x1=\"3\" y1=\"63.5001\" x2=\"84.1475\" y2=\"-1.32262\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#6B93FF\"/><stop offset=\"0.439058\" stop-color=\"#976FFF\"/><stop offset=\"1\" stop-color=\"#E46ACE\"/></linearGradient></defs><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"url(#${id})\"/></svg>`,\n  };\n}\n\nexport default memo(PremiumIcon);\n","import React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withVideoAvatar?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    areMessagesLoaded: boolean;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withVideoAvatar,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  animationLevel,\n  lastSyncTime,\n  adminMember,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId && lastSyncTime) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, loadFullUser, loadProfilePhotos, lastSyncTime, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (user && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{renderText(status)}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        withVideo={withVideoAvatar}\n        animationLevel={animationLevel}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime,\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      animationLevel: global.settings.byKey.animationLevel,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/environment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  lastSyncTime,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const currentPhoto = photo\n    || user?.fullInfo?.personalPhoto\n    || userOrChat?.fullInfo?.profilePhoto\n    || user?.fullInfo?.fallbackPhoto;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = currentPhoto || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal', 'photo');\n  const avatarBlobUrl = useMedia(avatarHash, undefined, undefined, lastSyncTime);\n\n  const photoHash = canHaveMedia && currentPhoto && !isVideo && `photo${currentPhoto.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash, undefined, undefined, lastSyncTime);\n\n  const videoHash = canHaveMedia && currentPhoto && isVideo && getVideoAvatarMediaHash(currentPhoto);\n  const videoBlobUrl = useMedia(videoHash, undefined, undefined, lastSyncTime);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && currentPhoto?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    currentPhoto?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = currentPhoto || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {currentPhoto && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectTabState,\n  selectChat, selectCurrentMessageList, selectThreadMessagesCount, selectUser, selectUserStatus,\n} from '../../global/selectors';\nimport { getUserStatus, isChatChannel, isUserOnline } from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\nimport Avatar from './Avatar';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    animationLevel: AnimationLevel;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? animationLevel >= 1 ? (lang.isRtl ? 'slide-optimized-rtl' : 'slide-optimized') : 'none'\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const handleClickPremium = useCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  }, [openPremiumModal, user]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && user?.fullInfo?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(user.fullInfo.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && user?.fullInfo?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={user.fullInfo.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(user.fullInfo.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      isSavedMessages,\n      animationLevel,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  }, [\n    description,\n    exitMessageSelectMode,\n    messageIds,\n    photo,\n    onClose,\n    reportMessages,\n    selectedReason,\n    chatId,\n    reportProfilePhoto,\n    reportPeer,\n    subject,\n  ]);\n\n  const handleSelectReason = useCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  }, []);\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { getServerTimeOffset } from '../../util/serverTime';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useDynamicColorListener from '../../hooks/useDynamicColorListener';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  observeIntersection: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noAnimate,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const { rgbColor: customColor } = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noAnimate;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => {\n      return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n    },\n    [isStatusPicker],\n  );\n\n  const getLayout = () => ({ withPortal: isStatusPicker });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextRemoveRecent = useCallback(() => {\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextUnfave = useCallback(() => {\n    onUnfaveClick!(sticker);\n  }, [onUnfaveClick, sticker]);\n\n  const handleContextFave = useCallback(() => {\n    onFaveClick!(sticker);\n  }, [onFaveClick, sticker]);\n\n  const handleSendQuiet = useCallback(() => {\n    onClick?.(clickArg, true);\n  }, [clickArg, onClick]);\n\n  const handleSendScheduled = useCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  }, [clickArg, onClick]);\n\n  const handleOpenSet = useCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  }, [openStickerSet, stickerSetInfo]);\n\n  const handleEmojiStatusExpiresClick = useCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  }, [setEmojiStatus, sticker, handleContextMenuClose, onContextMenuClick]);\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isCustomEmoji && 'custom-emoji',\n    `sticker-button-${id}`,\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        isSmall\n        size={size}\n        shouldLoop\n        shouldPreloadPreview\n        noLoad={!shouldLoad}\n        noPlay={!shouldPlay}\n        withSharedAnimation\n        sharedCanvasRef={sharedCanvasRef}\n        customColor={customColor}\n      />\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities(\n    trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    message.id,\n    isSimple,\n    isProtected,\n  );\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const isShown = !forceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'Badge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('Badge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"Badge mention\">\n        <i className=\"icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('Badge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"Badge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './ChatCallStatus.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      'ChatCallStatus',\n      isActive && 'active',\n      isSelected && !isMobile && 'selected',\n    )}\n    >\n      <div className=\"indicator\">\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectIsForumPanelOpen,\n} from '../../../global/selectors';\n\nimport Badge from './Badge';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  isForumPanelActive?: boolean;\n};\n\nconst AvatarBadge: FC<OwnProps & StateProps> = ({\n  chat,\n  isMuted,\n  isForumPanelActive,\n}) => {\n  return chat && (\n    <div className=\"avatar-badge-wrapper\">\n      <Badge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={!isForumPanelActive} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isForumPanelActive: selectIsForumPanelOpen(global),\n    };\n  },\n)(AvatarBadge));\n","import React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiUser,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiFormattedText,\n  ApiUserStatus,\n  ApiTopic,\n  ApiTypingStatus,\n} from '../../../api/types';\nimport type { AnimationLevel } from '../../../types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { IS_MULTITAB_SUPPORTED } from '../../../util/environment';\nimport {\n  isUserId,\n  getPrivateChatUserId,\n  getMessageAction,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectUser,\n  selectChatMessage,\n  selectOutgoingStatus,\n  selectDraft,\n  selectCurrentMessageList,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectUserStatus,\n  selectTopicFromMessage,\n  selectThreadParam, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport Badge from './Badge';\nimport AvatarBadge from './AvatarBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: AnimationLevel;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  animationLevel,\n  isSelected,\n  isSelectedForum,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleClick = useCallback(() => {\n    if (isForum) {\n      openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [isForum, openChat, chatId, isSelected, canScrollDown, openForumPanel, focusLastMessage]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  }, [chatId, onDragEnter]);\n\n  const handleDelete = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleReport = useCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  }, [markRenderReportModal, openReportModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && lastSyncTime && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting, lastSyncTime, loadTopics]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_MULTITAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n          animationLevel={animationLevel}\n          withVideo\n          observeIntersection={observeIntersection}\n        />\n        <AvatarBadge chatId={chatId} />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={animationLevel !== 0} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={user || chat}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      isSelectedForum,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\n\nimport ListItem from '../../ui/ListItem';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(chat.title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    };\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    };\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    };\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          {Boolean(archiveUnreadCount) && (\n            <div className={styles.unreadCount}>\n              <AnimatedCounter text={formatIntegerCompact(archiveUnreadCount)} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            {Boolean(archiveUnreadCount) && (\n              <div className=\"Badge\">\n                <AnimatedCounter text={formatIntegerCompact(archiveUnreadCount)} />\n              </div>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import React, {\n  memo, useEffect, useRef, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\nimport type { SettingsScreens } from '../../../types';\nimport type { GlobalState } from '../../../global/types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useChatOrderDiff from './hooks/useChatOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport Archive from './Archive';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  lastSyncTime?: number;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const { openChat, openNextChat, closeForumPanel } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = folderType === 'all' && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useChatOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n\n    if (!isActive || !orderedIds || !IS_PWA) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  }, [closeForumPanel, onLeftColumnContentChange]);\n\n  const handleArchivedDragEnter = useCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  }, [handleArchivedClick]);\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  }, []);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport type { AnimationLevel } from '../../../types';\n\nimport { IS_MULTITAB_SUPPORTED } from '../../../util/environment';\nimport {\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage, selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus, selectThreadInfo, selectThreadParam, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\n\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport Badge from './Badge';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  animationLevel?: AnimationLevel;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  animationLevel,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleDelete = useCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  }, [chat.id, deleteTopic, topic.id]);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    animationLevel,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  }, [openChat, chatId, topic.id, canScrollDown, focusLastMessage]);\n\n  const contextActions = useTopicContextActions(topic, chat, wasTopicOpened, canDelete, handleOpenDeleteModal);\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_MULTITAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <Badge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      animationLevel: global.settings.byKey.animationLevel,\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_MULTITAB_SUPPORTED } from '../../../../util/environment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions(\n  topic: ApiTopic,\n  chat: ApiChat,\n  wasOpened?: boolean,\n  canDelete?: boolean,\n  handleDelete?: NoneToVoidFunction,\n) {\n  const lang = useLang();\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_MULTITAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const newTabActionSeparator = actionOpenInNewTab && { isSeparator: true, key: 'newTabSeparator' };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: true }),\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      newTabActionSeparator,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID,\n  TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/environment';\nimport {\n  selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useChatOrderDiff from './hooks/useChatOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  lastSyncTime?: number;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  lastSyncTime,\n  onTopicSearch,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (lastSyncTime && chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, lastSyncTime, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useCallback(() => {\n    closeForumPanel();\n  }, [closeForumPanel]);\n\n  const handleToggleChatInfo = useCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  }, [chat, openChatWithInfo]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useChatOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat || !lastSyncTime) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n      waitForTransitionEnd(ref.current!, () => {\n        dispatchHeavyAnimationStop();\n      });\n\n      if (isVisible) {\n        shouldRenderRef.current = true;\n        ref.current!.style.transform = 'none';\n      } else {\n        shouldRenderRef.current = false;\n        ref.current!.style.transform = '';\n      }\n    }\n  }, [isVisible, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              withForumActions\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as T[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const lastMessage = renderLastMessage();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  function handleOpenTopic(e: React.MouseEvent<HTMLDivElement>) {\n    if (lastActiveTopic.unreadCount === 0) return;\n    e.stopPropagation();\n    e.preventDefault();\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  }\n\n  useLayoutEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, lastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onMouseDown={IS_TOUCH_ENV ? undefined : handleOpenTopic}\n            onClick={IS_TOUCH_ENV ? handleOpenTopic : undefined}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onMouseDown={IS_TOUCH_ENV ? undefined : handleOpenTopic}\n        onClick={IS_TOUCH_ENV ? handleOpenTopic : undefined}\n      >\n        {lastMessage}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, { useLayoutEffect, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { AnimationLevel } from '../../../../types';\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiTopic, ApiMessage, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri, getMessageRoundVideo,\n  getMessageSenderName, getMessageSticker, getMessageVideo, isActionMessage, isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\nimport { fastRaf } from '../../../../util/schedulers';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  animationLevel,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  animationLevel?: AnimationLevel;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities(draft.text, draft.entities, undefined, undefined, undefined, undefined, true)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useChatOrderDiff(orderedIds: (string | number)[] | undefined) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [orderById, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default memo(HeaderMenuContainerAsync);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useRef,\n  useCallback,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { ManagementScreens } from '../../types';\n\nimport { ANIMATION_LEVEL_MIN } from '../../config';\nimport { ARE_CALLS_SUPPORTED, IS_PWA } from '../../util/environment';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatBot,\n  selectIsUserBlocked,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n} from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport { useHotkeys } from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\nimport Account from \"../../worker/share/Account\";\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  withForumActions?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  withForumActions,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  }, []);\n\n  const handleHeaderMenuClose = useCallback(() => {\n    setIsMenuOpen(false);\n  }, []);\n\n  const handleHeaderMenuHide = useCallback(() => {\n    setMenuPosition(undefined);\n  }, []);\n\n  const handleSubscribeClick = useCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  }, [joinChannel, chatId, shouldSendJoinRequest, showNotification, isChannel, lang]);\n\n  const handleStartBot = useCallback(() => {\n\n    if(!Account.getCurrentAccount()?.getSession()){\n      getActions().updateGlobal({\n        authState:\"authorizationStateWaitSignPassword\"\n      })\n    }else{\n      if(Account.getCurrentAccount()?.getUid()){\n        sendBotCommand({ command: '/start' });\n      }else{\n        getActions().showNotification({\n          message:\"正在登录请稍后再试\"\n        })\n      }\n    }\n  }, [sendBotCommand]);\n\n  const handleRestartBot = useCallback(() => {\n    restartBot({ chatId });\n  }, [chatId, restartBot]);\n\n  const handleJoinRequestsClick = useCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  }, [requestNextManagementScreen]);\n\n  const handleSearchClick = useCallback(() => {\n    if (withForumActions) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because teact must update the state and render the async component\n      requestAnimationFrame(() => {\n        requestAnimationFrame(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  }, [isMobile, noAnimation, onTopicSearch, openLocalTextSearch, withForumActions]);\n\n  const handleAsMessagesClick = useCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  }, [chatId, openChat]);\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_PWA || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  }, [canSearch, handleSearchClick]);\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {/* {canSearch && ( */}\n          {/*   <Button */}\n          {/*     round */}\n          {/*     ripple={isRightColumnShown} */}\n          {/*     color=\"translucent\" */}\n          {/*     size=\"smaller\" */}\n          {/*     onClick={handleSearchClick} */}\n          {/*     ariaLabel=\"Search in this chat\" */}\n          {/*   > */}\n          {/*     <i className=\"icon-search\" /> */}\n          {/*   </Button> */}\n          {/* )} */}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon-phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!withForumActions && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon-user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      {/* <Button */}\n      {/*   ref={menuButtonRef} */}\n      {/*   className={isMenuOpen ? 'active' : ''} */}\n      {/*   round */}\n      {/*   ripple={!isMobile} */}\n      {/*   size=\"smaller\" */}\n      {/*   color=\"translucent\" */}\n      {/*   disabled={noMenu} */}\n      {/*   ariaLabel=\"More actions\" */}\n      {/*   onClick={handleHeaderMenuOpen} */}\n      {/* > */}\n      {/*   <i className=\"icon-more\" /> */}\n      {/* </Button> */}\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={withForumActions}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n      };\n    }\n\n    const bot = selectChatBot(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chat.fullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chat.fullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = global.settings.byKey.animationLevel === ANIMATION_LEVEL_MIN;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(CustomEmojiTooltipAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default memo(CustomSendMenuAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  }, [onFileSelect, onHide, withQuick]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    this.container.appendChild(this.video);\n    this.recalculatePositionAndSize();\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    if (!this.video) return;\n    const { size, position: { x, y } } = this.options;\n    const { width, height } = this.container.getBoundingClientRect();\n    this.video.style.left = `${Math.round(x * width)}px`;\n    this.video.style.top = `${Math.round(y * height)}px`;\n    this.video.style.width = `${size}px`;\n    this.video.style.height = `${size}px`;\n  }\n}\n","import {\n  useCallback, useEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport RLottie from '../../../../lib/rlottie/RLottie';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n  removeCustomEmojiInputRenderCallback,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { fastRaf } from '../../../../util/schedulers';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useDynamicColorListener from '../../../../hooks/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId?: string,\n  isActive?: boolean,\n) {\n  const { rgbColor: textColor } = useDynamicColorListener(inputRef);\n  const mapRef = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const removeContainers = useCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = mapRef.current.get(id);\n      if (player) {\n        player.destroy();\n        mapRef.current.delete(id);\n      }\n    });\n  }, []);\n\n  const synchronizeElements = useCallback(() => {\n    if (!inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n    const global = getGlobal();\n    const removedContainers = new Set(mapRef.current.keys());\n    const customEmojies = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojies.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const id = `${prefixId || ''}${element.dataset.uniqueId}${textColor?.join(',') || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      removedContainers.delete(id);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (mapRef.current.has(id)) {\n        const player = mapRef.current.get(id)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n\n      const animation = createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        uniqueId: id,\n        containerId: prefixId || id,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor,\n      });\n      animation.play();\n\n      mapRef.current.set(id, animation);\n    });\n\n    removeContainers(Array.from(removedContainers));\n  }, [absoluteContainerRef, textColor, inputRef, prefixId, removeContainers, sharedCanvasHqRef, sharedCanvasRef]);\n\n  useEffect(() => {\n    addCustomEmojiInputRenderCallback(synchronizeElements);\n\n    return () => {\n      removeCustomEmojiInputRenderCallback(synchronizeElements);\n    };\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive) {\n      removeContainers(Array.from(mapRef.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    fastRaf(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, removeContainers, sharedCanvasRef, isActive]);\n\n  useEffectWithPrevDeps(([prevTextColor]) => {\n    if (textColor !== prevTextColor) {\n      synchronizeElements();\n    }\n  }, [textColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useCallback(() => {\n    mapRef.current.forEach((player) => {\n      player.pause();\n    });\n  }, []);\n\n  const unfreezeAnimation = useCallback(() => {\n    mapRef.current.forEach((player) => {\n      player.play();\n    });\n  }, []);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    fastRaf(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nfunction createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  uniqueId,\n  containerId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  uniqueId: string;\n  containerId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: [number, number, number];\n}): CustomEmojiPlayer {\n  if (customEmoji.isLottie) {\n    const lottie = RLottie.init(\n      containerId,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      undefined,\n      uniqueId,\n      mediaUrl,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      customEmoji.shouldUseTextColor ? textColor : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeContainer(uniqueId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(uniqueId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const absoluteVideo = new AbsoluteVideo(mediaUrl, absoluteContainerRef.current!, { size: SIZE, position });\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { RefObject, ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useCallback, useLayoutEffect,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport { selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  editableInputId,\n  isActive,\n  getHtml,\n  placeholder,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    isAttachmentModalInput ? 'attachment' : undefined,\n    isActive,\n  );\n\n  const maxInputHeight = isMobile ? 256 : 416;\n  const updateInputHeight = useCallback((willSend = false) => {\n    const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n    const clone = scrollerCloneRef.current!;\n    const currentHeight = Number(scroller.style.height.replace('px', ''));\n    const maxHeight = isAttachmentModalInput ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT : maxInputHeight;\n    const newHeight = Math.min(clone.scrollHeight, maxHeight);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      scroller.style.height = `${newHeight}px`;\n      scroller.style.transitionDuration = `${transitionDuration}ms`;\n      scroller.classList.toggle('overflown', clone.scrollHeight > maxHeight);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }, [isAttachmentModalInput, maxInputHeight]);\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || (IS_TOUCH_ENV && isMobile)\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobile, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText && <i className=\"icon-lock-badge placeholder-icon\" />}\n              {placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './SymbolMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default memo(SymbolMenuAsync);\n","import React, {\n  memo, useCallback, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { IAnchorPosition } from '../../../types';\nimport type { ApiVideo, ApiSticker } from '../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport useFlag from '../../../hooks/useFlag';\nimport useContextMenuPosition from '../../../hooks/useContextMenuPosition';\n\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    shouldUpdateStickerSetsOrder?: boolean\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isReady,\n  isSymbolMenuOpen,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  isAttachmentModal,\n  canSendPlainText,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n  isSymbolMenuForced,\n  className,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  }, [closeBotCommandMenu, closeSendAsMenu, openSymbolMenu]);\n\n  const handleSearchOpen = useCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  }, [setStickerSearchQuery, setGifSearchQuery]);\n\n  const handleSymbolMenuOpen = useCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : EDITABLE_INPUT_CSS_SELECTOR,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  }, [isAttachmentModal, isMobile, openSymbolMenu, closeBotCommandMenu]);\n\n  const getTriggerElement = useCallback(() => triggerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => document.querySelector('#portals .SymbolMenu .bubble'),\n    [],\n  );\n\n  const getLayout = useCallback(() => ({\n    withPortal: true,\n  }), []);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      <div style={{width:10}}></div>\n      {/* {isMobile ? ( */}\n      {/*   <Button */}\n      {/*     className={symbolMenuButtonClassName} */}\n      {/*     round */}\n      {/*     color=\"translucent\" */}\n      {/*     onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen} */}\n      {/*     ariaLabel=\"Choose emoji, sticker or GIF\" */}\n      {/*   > */}\n      {/*     <i className=\"icon-smile\" /> */}\n      {/*     <i className=\"icon-keyboard\" /> */}\n      {/*     {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />} */}\n      {/*   </Button> */}\n      {/* ) : ( */}\n      {/*   <ResponsiveHoverButton */}\n      {/*     className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')} */}\n      {/*     round */}\n      {/*     color=\"translucent\" */}\n      {/*     onActivate={handleActivateSymbolMenu} */}\n      {/*     ariaLabel=\"Choose emoji, sticker or GIF\" */}\n      {/*   > */}\n      {/*     <div ref={triggerRef} className=\"symbol-menu-trigger\" /> */}\n      {/*     <i className=\"icon-smile\" /> */}\n      {/*   </ResponsiveHoverButton> */}\n      {/* )} */}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={className}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }, [selectedRange]);\n\n  const updateSelectedRange = useCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  }, [setSelectedRange]);\n\n  const getSelectedText = useCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.spoiler]);\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, [updateSelectedRange]);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  const handleLinkUrlConfirm = useCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, isEditingLink, linkUrl, onClose, restoreSelection]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    openLinkControl, handleBoldText, handleUnderlineText, handleItalicText, handleMonospaceText,\n    handleStrikethroughText, handleSpoilerText,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useCallback, useEffect } from '../../../../lib/teact/teact';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/environment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestAnimationFrame(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  }, [getLastEmoji, isEnabled, inputRef, setHtml]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useCallback, useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  }, []);\n\n  const insertEmoji = useCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  }, [getHtml, setHtml, inputId, updateFiltered]);\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestAnimationFrame(() => {\n        focusEditableElement(inputEl, forceFocus);\n      });\n    }\n\n    setFilteredUsers(undefined);\n  }, [inputRef, setHtml]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction = MenuItemContextActionItem | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  leftElement,\n  buttonClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble'),\n    [withPortalForMenu],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: withPortalForMenu }),\n    [withPortalForMenu],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  }, []);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [allowDisabledClick, clickArg, disabled, markIsTouched, onClick, ripple, unmarkIsTouched, href]);\n\n  const handleSecondaryIconClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n    e.stopPropagation();\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  };\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={(!inactive && contextActions) ? handleContextMenu : undefined}\n      >\n        {leftElement}\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n            onMouseDown={!IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n          >\n            <i className={`icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GC8g9Q16IaK76g6rcU78\"};","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className }) => {\n  return (\n    <div className={buildClassName(styles.root, className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TextPart } from '../../types';\nimport type { CallbackAction } from '../../global/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\nimport Button from './Button';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction;\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      // @ts-ignore\n      actions[action.action](action.payload);\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useRef, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  children: React.ReactNode;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = forceAspectRatio ? aspectRatio\n    : buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`);\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, memo, useEffect } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current.classList.add(classNames.active);\n    }\n\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        tabEl.classList.add(classNames.active);\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    prevPlatformEl.classList.remove('animate');\n    platformEl.classList.remove('animate');\n    platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n    forceReflow(platformEl);\n    platformEl.classList.add('animate');\n    platformEl.style.transform = 'none';\n\n    prevTabEl.classList.remove(classNames.active);\n    tabEl.classList.add(classNames.active);\n  }, [isActive, previousActiveTab]);\n\n  return (\n    <div\n      className={buildClassName('Tab', className)}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useEffect } from '../../lib/teact/teact';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport { IS_ANDROID, IS_IOS } from '../../util/environment';\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    fastSmoothScrollHorizontal(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { pick, omit } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useThrottledCallback from './useThrottledCallback';\nimport useDebouncedCallback from './useDebouncedCallback';\n\nexport function useThrottledResolver<T>(resolver: () => T, deps: any[], ms: number, noFirst = false) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst);\n}\n\nexport function useDebouncedResolver<T>(resolver: () => T, deps: any[], ms: number, noFirst = false, noLast = false) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { selectTabState } from '../global/selectors';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      play(src);\n    }\n  }, [src, play]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = preferredWidth || img.width;\n      canvas.height = preferredHeight || img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${radius}px)`;\n      }\n\n      ctx.drawImage(img, -radius * 2, -radius * 2, canvas.width + radius * 4, canvas.height + radius * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, radius, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { IS_MULTITAB_SUPPORTED } from '../util/environment';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  handleReport?: () => void;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n  return null\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_MULTITAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const newTabActionSeparator = actionOpenInNewTab && { isSeparator: true, key: 'newTabSeparator' };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder]);\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      newTabActionSeparator,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_PWA, IS_IOS,\n} from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\nconst IOS_PWA_CONTEXT_MENU_DELAY_MS = 100;\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nconst useContextMenuHandlers = (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      (e.target as HTMLElement).classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    (e.target as HTMLElement).classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n  }, []);\n\n  // Support context menu on touch devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', (e) => {\n        // On iOS in PWA mode, the context menu may cause click-through to the element in the menu upon opening\n        if (IS_IOS && IS_PWA) {\n          setTimeout(() => {\n            element.removeEventListener('mousedown', stopEvent, {\n              capture: true,\n            });\n            element.removeEventListener('click', stopEvent, {\n              capture: true,\n            });\n          }, IOS_PWA_CONTEXT_MENU_DELAY_MS);\n        }\n        stopEvent(e);\n      }, {\n        once: true,\n        capture: true,\n      });\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', stopEvent, {\n          once: true,\n          capture: true,\n        });\n        element.addEventListener('click', stopEvent, {\n          once: true,\n          capture: true,\n        });\n      }\n\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n\nexport default useContextMenuHandlers;\n","import { useState, useEffect } from '../lib/teact/teact';\nimport type { IAnchorPosition } from '../types';\n\ninterface Layout {\n  extraPaddingX?: number;\n  extraTopPadding?: number;\n  marginSides?: number;\n  extraMarginTop?: number;\n  withPortal?: boolean;\n}\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\nconst EMPTY_RECT = {\n  width: 0, left: 0, height: 0, top: 0,\n};\n\nexport default function useContextMenuPosition(\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  getLayout?: () => Layout,\n) {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [transformOriginX, setTransformOriginX] = useState<number>();\n  const [transformOriginY, setTransformOriginY] = useState<number>();\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('opacity: 0;');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const anchorX = x;\n    const anchorY = y;\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const {\n      extraPaddingX = 0,\n      extraTopPadding = 0,\n      marginSides = 0,\n      extraMarginTop = 0,\n      withPortal = false,\n    } = getLayout?.() || {};\n\n    const marginTop = menuEl ? parseInt(getComputedStyle(menuEl).marginTop, 10) + extraMarginTop : undefined;\n\n    const menuRect = menuEl ? {\n      width: menuEl.offsetWidth,\n      height: menuEl.offsetHeight + marginTop!,\n    } : EMPTY_RECT;\n\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : EMPTY_RECT;\n\n    let horizontalPosition: 'left' | 'right';\n    let verticalPosition: 'top' | 'bottom';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPosition = 'left';\n    } else if (x - menuRect.width - rootRect.left > 0) {\n      horizontalPosition = 'right';\n      x -= 3;\n    } else {\n      horizontalPosition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPosition);\n\n    if (marginSides\n      && horizontalPosition === 'right' && (x + extraPaddingX + marginSides >= rootRect.width + rootRect.left)) {\n      x -= marginSides;\n    }\n\n    if (marginSides && horizontalPosition === 'left') {\n      if (x + extraPaddingX + marginSides + menuRect.width >= rootRect.width + rootRect.left) {\n        x -= marginSides;\n      } else if (x - marginSides <= 0) {\n        x += marginSides;\n      }\n    }\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      verticalPosition = 'top';\n    } else {\n      verticalPosition = 'bottom';\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n    setPositionY(verticalPosition);\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n\n    const addedYForPortalPositioning = (withPortal ? triggerRect.top : 0);\n    const addedXForPortalPositioning = (withPortal ? triggerRect.left : 0);\n\n    const leftWithPossibleNegative = Math.min(\n      x - triggerRect.left,\n      rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX,\n    );\n    const left = (horizontalPosition === 'left'\n      ? (withPortal\n        ? Math.max(MENU_POSITION_VISUAL_COMFORT_SPACE_PX, leftWithPossibleNegative)\n        : leftWithPossibleNegative)\n      : (x - triggerRect.left)) + addedXForPortalPositioning;\n    const top = y - triggerRect.top + addedYForPortalPositioning;\n\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN - (marginTop || 0);\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n    const offsetX = (anchorX + addedXForPortalPositioning - triggerRect.left) - left;\n    const offsetY = (anchorY + addedYForPortalPositioning - triggerRect.top) - top - (marginTop || 0);\n    setTransformOriginX(horizontalPosition === 'left' ? offsetX : menuRect.width + offsetX);\n    setTransformOriginY(verticalPosition === 'bottom' ? menuRect.height + offsetY : offsetY);\n  }, [\n    anchor, getMenuElement, getRootElement, getTriggerElement, getLayout,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    transformOriginX,\n    transformOriginY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n}\n","import type { Signal } from '../util/signals';\n\nimport useSyncEffect from './useSyncEffect';\nimport useSignal from './useSignal';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst useEnsureMessage = (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getActions();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n\nexport default useEnsureMessage;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    forceUpdate();\n  }, [forceUpdate]);\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    handleForumPanelAnimationEnd,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nconst useUniqueId = () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n\nexport default useUniqueId;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default memo(CalendarModalAsync);\n","import React, { useCallback, useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\nimport { getServerTimeOffset } from '../util/serverTime';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  }, [onScheduled]);\n\n  const handleMessageScheduleUntilOnline = useCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  }, [handleMessageSchedule]);\n\n  const handleCloseCalendar = useCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  }, [onCancel]);\n\n  const requestCalendar = useCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  }, []);\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useSyncEffect from './useSyncEffect';\n\n// Allows to use state value as \"silent\" dependency in hooks (not causing updates).\n// Also useful for state values that update frequently (such as controlled input value).\nexport function useStateRef<T>(value: T) {\n  const ref = useRef<T>(value);\n\n  useSyncEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref;\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import type { RLottieApi } from './rlottie.worker';\n\nimport {\n  DPR, IS_SAFARI, IS_ANDROID, IS_IOS,\n} from '../../util/environment';\nimport { createConnector } from '../../util/PostMessageConnector';\nimport { animate } from '../../util/animation';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { fastRaf } from '../../util/schedulers';\n\ninterface Params {\n  noLoop?: boolean;\n  size?: number;\n  quality?: number;\n  isLowPriority?: boolean;\n  coords?: { x: number; y: number };\n}\n\nconst WAITING = Symbol('WAITING');\ntype Frame =\n  undefined\n  | typeof WAITING\n  | ImageBitmap;\n\nconst MAX_WORKERS = 4;\nconst HIGH_PRIORITY_QUALITY = (IS_ANDROID || IS_IOS) ? 0.75 : 1;\nconst LOW_PRIORITY_QUALITY = IS_ANDROID ? 0.5 : 0.75;\nconst LOW_PRIORITY_QUALITY_SIZE_THRESHOLD = 24;\nconst HIGH_PRIORITY_CACHE_MODULO = IS_SAFARI ? 2 : 4;\nconst LOW_PRIORITY_CACHE_MODULO = 0;\n\nconst instancesById = new Map<string, RLottie>();\n\nconst workers = new Array(MAX_WORKERS).fill(undefined).map(\n  () => createConnector<RLottieApi>(new Worker(new URL('./rlottie.worker.ts', import.meta.url))),\n);\nlet lastWorkerIndex = -1;\n\nclass RLottie {\n  // Config\n\n  private containers = new Map<string, {\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    isLoaded?: boolean;\n    isPaused?: boolean;\n    isSharedCanvas?: boolean;\n    coords?: Params['coords'];\n    onLoad?: NoneToVoidFunction;\n  }>();\n\n  private imgSize!: number;\n\n  private imageData!: ImageData;\n\n  private msPerFrame = 1000 / 60;\n\n  private reduceFactor = 1;\n\n  private cacheModulo!: number;\n\n  private workerIndex!: number;\n\n  private frames: Frame[] = [];\n\n  private framesCount?: number;\n\n  // State\n\n  private isAnimating = false;\n\n  private isWaiting = true;\n\n  private isEnded = false;\n\n  private isDestroyed = false;\n\n  private isRendererInited = false;\n\n  private approxFrameIndex = 0;\n\n  private prevFrameIndex = -1;\n\n  private stopFrameIndex? = 0;\n\n  private speed = 1;\n\n  private direction: 1 | -1 = 1;\n\n  private lastRenderAt?: number;\n\n  static init(...args: ConstructorParameters<typeof RLottie>) {\n    const [container, canvas, onLoad, id, , params] = args;\n    let instance = instancesById.get(id);\n\n    if (!instance) {\n      // eslint-disable-next-line prefer-rest-params\n      instance = new RLottie(...args);\n      instancesById.set(id, instance);\n    } else {\n      instance.addContainer(container, canvas, onLoad, params?.coords);\n    }\n\n    return instance;\n  }\n\n  constructor(\n    containerId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad: NoneToVoidFunction | undefined,\n    private id: string,\n    private tgsUrl: string,\n    private params: Params = { },\n    private customColor?: [number, number, number],\n    private onEnded?: (isDestroyed?: boolean) => void,\n    private onLoop?: () => void,\n  ) {\n    this.addContainer(containerId, container, onLoad, params.coords);\n    this.initConfig();\n    this.initRenderer();\n  }\n\n  public removeContainer(containerId: string) {\n    const {\n      canvas, ctx, isSharedCanvas, coords,\n    } = this.containers.get(containerId)!;\n\n    if (isSharedCanvas) {\n      ctx.clearRect(coords!.x, coords!.y, this.imgSize, this.imgSize);\n    } else {\n      canvas.remove();\n    }\n\n    this.containers.delete(containerId);\n\n    if (!this.containers.size) {\n      this.destroy();\n    }\n  }\n\n  isPlaying() {\n    return this.isAnimating || this.isWaiting;\n  }\n\n  play(forceRestart = false, containerId?: string) {\n    if (containerId) {\n      this.containers.get(containerId)!.isPaused = false;\n    }\n\n    if (this.isEnded && forceRestart) {\n      this.approxFrameIndex = Math.floor(0);\n    }\n\n    this.stopFrameIndex = undefined;\n    this.direction = 1;\n    this.doPlay();\n  }\n\n  pause(containerId?: string) {\n    if (containerId) {\n      this.containers.get(containerId)!.isPaused = true;\n\n      const areAllContainersPaused = Array.from(this.containers.values()).every(({ isPaused }) => isPaused);\n      if (!areAllContainersPaused) {\n        return;\n      }\n    }\n\n    if (this.isWaiting) {\n      this.stopFrameIndex = this.approxFrameIndex;\n    } else {\n      this.isAnimating = false;\n    }\n\n    if (!this.params.isLowPriority) {\n      this.frames = this.frames.map((frame, i) => {\n        if (i === this.prevFrameIndex) {\n          return frame;\n        } else {\n          if (frame && frame !== WAITING) {\n            frame.close();\n          }\n\n          return undefined;\n        }\n      });\n    }\n  }\n\n  playSegment([startFrameIndex, stopFrameIndex]: [number, number]) {\n    this.approxFrameIndex = Math.floor(startFrameIndex / this.reduceFactor);\n    this.stopFrameIndex = Math.floor(stopFrameIndex / this.reduceFactor);\n    this.direction = startFrameIndex < stopFrameIndex ? 1 : -1;\n    this.doPlay();\n  }\n\n  setSpeed(speed: number) {\n    this.speed = speed;\n  }\n\n  setNoLoop(noLoop?: boolean) {\n    this.params.noLoop = noLoop;\n  }\n\n  setSharedCanvasCoords(containerId: string, newCoords: Params['coords']) {\n    const containerInfo = this.containers.get(containerId)!;\n    const {\n      canvas, ctx,\n    } = containerInfo;\n\n    if (!canvas.dataset.isJustCleaned || canvas.dataset.isJustCleaned === 'false') {\n      const sizeFactor = this.calcSizeFactor();\n      ensureCanvasSize(canvas, sizeFactor);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.dataset.isJustCleaned = 'true';\n      fastRaf(() => {\n        canvas.dataset.isJustCleaned = 'false';\n      });\n    }\n\n    containerInfo.coords = {\n      x: Math.round((newCoords?.x || 0) * canvas.width),\n      y: Math.round((newCoords?.y || 0) * canvas.height),\n    };\n\n    const frame = this.getFrame(this.prevFrameIndex) || this.getFrame(Math.round(this.approxFrameIndex));\n\n    if (frame && frame !== WAITING) {\n      ctx.drawImage(frame, containerInfo.coords.x, containerInfo.coords.y);\n    }\n  }\n\n  private addContainer(\n    containerId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad?: NoneToVoidFunction,\n    coords?: Params['coords'],\n  ) {\n    const sizeFactor = this.calcSizeFactor();\n\n    let imgSize: number;\n\n    if (container instanceof HTMLDivElement) {\n      if (!(container.parentNode instanceof HTMLElement)) {\n        throw new Error('[RLottie] Container is not mounted');\n      }\n\n      let { size } = this.params;\n\n      if (!size) {\n        size = (\n          container.offsetWidth\n          || parseInt(container.style.width, 10)\n          || container.parentNode.offsetWidth\n        );\n\n        if (!size) {\n          throw new Error('[RLottie] Failed to detect width from container');\n        }\n      }\n\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d')!;\n\n      canvas.style.width = `${size}px`;\n      canvas.style.height = `${size}px`;\n\n      imgSize = Math.round(size * sizeFactor);\n\n      canvas.width = imgSize;\n      canvas.height = imgSize;\n\n      container.appendChild(canvas);\n\n      this.containers.set(containerId, {\n        canvas, ctx, onLoad,\n      });\n    } else {\n      if (!container.isConnected) {\n        throw new Error('[RLottie] Shared canvas is not mounted');\n      }\n\n      const canvas = container;\n      const ctx = canvas.getContext('2d')!;\n\n      ensureCanvasSize(canvas, sizeFactor);\n\n      imgSize = Math.round(this.params.size! * sizeFactor);\n\n      this.containers.set(containerId, {\n        canvas,\n        ctx,\n        isSharedCanvas: true,\n        coords: {\n          x: Math.round((coords?.x || 0) * canvas.width),\n          y: Math.round((coords?.y || 0) * canvas.height),\n        },\n        onLoad,\n      });\n    }\n\n    if (!this.imgSize) {\n      this.imgSize = imgSize;\n      this.imageData = new ImageData(imgSize, imgSize);\n    }\n\n    if (this.isRendererInited) {\n      this.doPlay();\n    }\n  }\n\n  private calcSizeFactor() {\n    const {\n      isLowPriority,\n      size,\n      // Reduced quality only looks acceptable on big enough images\n      quality = isLowPriority && (!size || size > LOW_PRIORITY_QUALITY_SIZE_THRESHOLD)\n        ? LOW_PRIORITY_QUALITY : HIGH_PRIORITY_QUALITY,\n    } = this.params;\n\n    // Reduced quality only looks acceptable on high DPR screens\n    return Math.max(DPR * quality, 1);\n  }\n\n  private destroy() {\n    this.isDestroyed = true;\n    this.pause();\n    this.clearCache();\n    this.destroyRenderer();\n\n    instancesById.delete(this.id);\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      if (frame && frame !== WAITING) {\n        frame.close();\n      }\n    });\n\n    // Help GC\n    this.imageData = undefined as any;\n    this.frames = [];\n  }\n\n  private initConfig() {\n    const { isLowPriority } = this.params;\n\n    this.cacheModulo = isLowPriority ? LOW_PRIORITY_CACHE_MODULO : HIGH_PRIORITY_CACHE_MODULO;\n  }\n\n  setColor(newColor: [number, number, number] | undefined) {\n    this.customColor = newColor;\n  }\n\n  private initRenderer() {\n    this.workerIndex = cycleRestrict(MAX_WORKERS, ++lastWorkerIndex);\n\n    workers[this.workerIndex].request({\n      name: 'init',\n      args: [\n        this.id,\n        this.tgsUrl,\n        this.imgSize,\n        this.params.isLowPriority || false,\n        this.customColor,\n        this.onRendererInit.bind(this),\n      ],\n    });\n  }\n\n  private destroyRenderer() {\n    workers[this.workerIndex].request({\n      name: 'destroy',\n      args: [this.id],\n    });\n  }\n\n  private onRendererInit(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.isRendererInited = true;\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n\n  changeData(tgsUrl: string) {\n    this.pause();\n    this.tgsUrl = tgsUrl;\n    this.initConfig();\n\n    workers[this.workerIndex].request({\n      name: 'changeData',\n      args: [\n        this.id,\n        this.tgsUrl,\n        this.params.isLowPriority || false,\n        this.onChangeData.bind(this),\n      ],\n    });\n  }\n\n  private onChangeData(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n    this.isWaiting = false;\n    this.isAnimating = false;\n\n    this.doPlay();\n  }\n\n  private doPlay() {\n    if (!this.framesCount) {\n      return;\n    }\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    if (this.isAnimating) {\n      return;\n    }\n\n    if (!this.isWaiting) {\n      this.lastRenderAt = undefined;\n    }\n\n    this.isEnded = false;\n    this.isAnimating = true;\n    this.isWaiting = false;\n\n    animate(() => {\n      if (this.isDestroyed) {\n        return false;\n      }\n\n      // Paused from outside\n      if (!this.isAnimating) {\n        const areAllLoaded = Array.from(this.containers.values()).every(({ isLoaded }) => isLoaded);\n        if (areAllLoaded) {\n          return false;\n        }\n      }\n\n      const frameIndex = Math.round(this.approxFrameIndex);\n      const frame = this.getFrame(frameIndex);\n      if (!frame || frame === WAITING) {\n        if (!frame) {\n          this.requestFrame(frameIndex);\n        }\n\n        this.isAnimating = false;\n        this.isWaiting = true;\n        return false;\n      }\n\n      if (this.cacheModulo && frameIndex % this.cacheModulo === 0) {\n        this.cleanupPrevFrame(frameIndex);\n      }\n\n      if (frameIndex !== this.prevFrameIndex) {\n        this.containers.forEach((containerData) => {\n          const {\n            ctx, isLoaded, isPaused, coords: { x, y } = {}, onLoad,\n          } = containerData;\n\n          if (!isLoaded || !isPaused) {\n            ctx.clearRect(x || 0, y || 0, this.imgSize, this.imgSize);\n            ctx.drawImage(frame, x || 0, y || 0);\n          }\n\n          if (!isLoaded) {\n            containerData.isLoaded = true;\n            onLoad?.();\n          }\n        });\n\n        this.prevFrameIndex = frameIndex;\n      }\n\n      const now = Date.now();\n      const currentSpeed = this.lastRenderAt ? this.msPerFrame / (now - this.lastRenderAt) : 1;\n      const delta = Math.min(1, (this.direction * this.speed) / currentSpeed);\n      const expectedNextFrameIndex = Math.round(this.approxFrameIndex + delta);\n\n      this.lastRenderAt = now;\n\n      // Forward animation finished\n      if (delta > 0 && (frameIndex === this.framesCount! - 1 || expectedNextFrameIndex > this.framesCount! - 1)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = 0;\n\n        // Backward animation finished\n      } else if (delta < 0 && (frameIndex === 0 || expectedNextFrameIndex < 0)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = this.framesCount! - 1;\n\n        // Stop frame reached\n      } else if (\n        this.stopFrameIndex !== undefined\n        && (frameIndex === this.stopFrameIndex\n          || (\n            (delta > 0 && expectedNextFrameIndex > this.stopFrameIndex)\n            || (delta < 0 && expectedNextFrameIndex < this.stopFrameIndex)\n          ))\n      ) {\n        this.stopFrameIndex = undefined;\n        this.isAnimating = false;\n        return false;\n\n        // Preparing next frame\n      } else {\n        this.approxFrameIndex += delta;\n      }\n\n      const nextFrameIndex = Math.round(this.approxFrameIndex);\n\n      if (!this.getFrame(nextFrameIndex)) {\n        this.requestFrame(nextFrameIndex);\n        this.isWaiting = true;\n        this.isAnimating = false;\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  private getFrame(frameIndex: number) {\n    return this.frames[frameIndex];\n  }\n\n  private requestFrame(frameIndex: number) {\n    this.frames[frameIndex] = WAITING;\n\n    workers[this.workerIndex].request({\n      name: 'renderFrames',\n      args: [this.id, frameIndex, this.onFrameLoad.bind(this)],\n    });\n  }\n\n  private cleanupPrevFrame(frameIndex: number) {\n    if (this.framesCount! < 3) {\n      return;\n    }\n\n    const prevFrameIndex = cycleRestrict(this.framesCount!, frameIndex - 1);\n    this.frames[prevFrameIndex] = undefined;\n  }\n\n  private onFrameLoad(frameIndex: number, imageBitmap: ImageBitmap) {\n    if (this.frames[frameIndex] !== WAITING) {\n      return;\n    }\n\n    this.frames[frameIndex] = imageBitmap;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n}\n\nfunction ensureCanvasSize(canvas: HTMLCanvasElement, sizeFactor: number) {\n  const expectedWidth = Math.round(canvas.offsetWidth * sizeFactor);\n  const expectedHeight = Math.round(canvas.offsetHeight * sizeFactor);\n  if (canvas.width !== expectedWidth || canvas.height !== expectedHeight) {\n    canvas.width = expectedWidth;\n    canvas.height = expectedHeight;\n  }\n}\n\nexport default RLottie;\n","import generateIdFor from './generateIdFor';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n  acceptsBuffer?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateIdFor(requestStates);\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { fastRaf } from './schedulers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  let initialTouchCenter = {\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    initialTouchCenter = {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1) {\n        onWheelDrag(e);\n      } else if (isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './environment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\nimport { fastRaf } from './schedulers';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  fastRaf(() => {\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n\n      container.scrollTop = Math.round(target - currentPath);\n\n      isAnimating = t < 1;\n\n      if (!isAnimating) {\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    });\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  return scrollWithJs(container, left, duration);\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return Promise.resolve();\n  }\n\n  let isStopped = false;\n  const id = Math.random().toString();\n  container.dataset.scrollId = id;\n  stopById.set(id, () => {\n    isStopped = true;\n  });\n\n  container.style.scrollSnapType = 'none';\n\n  let resolve: VoidFunction;\n  const promise = new Promise<void>((r) => {\n    resolve = r;\n  });\n  const startAt = Date.now();\n\n  animate(() => {\n    if (isStopped) return false;\n\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    if (t >= 1) {\n      container.style.scrollSnapType = '';\n      delete container.dataset.scrollId;\n      stopById.delete(id);\n      resolve();\n    }\n    return t < 1;\n  });\n\n  return promise;\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event | React.FormEvent) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","activeGroupCallId","selectTabState","isMasterTab","groupCalls","undefined","usersById","users","byId","chatsById","chats","isActive","participantsCount","isLoaded","isCallNotEmpty","isCallActive","id","animationLevel","settings","byKey","GroupCallTopPane","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","Object","values","filter","_","i","map","isUser","user","Boolean","useEffect","subscribed","React","buildClassName","onClick","p","Avatar","key","Button","round","AnimatedCounter","text","prevText","usePrevious","forceUpdate","useForceUpdate","isAnimatingRef","useRef","shouldAnimate","getGlobal","ANIMATION_LEVEL_MAX","textElement","elements","length","push","current","useTimeout","dir","isRtl","props","sticker","noLoad","forcePreview","lastSyncTime","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","useFlag","has","transitionClassNames","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","add","size","style","buildStyle","src","styles","onLoad","AnimatedIcon","noTransition","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","_data","_data$idx","_data2","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","captureEvents","onCapture","onRelease","onDrag","transcribeSvgMemo","dangerouslySetInnerHTML","__html","renderFirstLine","title","fileName","fullClassName","AudioOrigin","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","formatMediaDateTime","renderAudio","svgMemo","onClickTranscribe","draggable","renderVoice","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","ChatExtra","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","userId","fullInfo","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","description","bio","getChatDescription","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","DeleteChatModal","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isSavedMessages","withVideo","isText","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","SUPPORTED_VIDEO_CONTENT_TYPES","mimeType","SUPPORTED_IMAGE_CONTENT_TYPES","handleClick","File","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","DotAnimation","FakeIcon","fakeType","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldSpinnerRender","getColorFromExtension","sizeString","getDocumentThumbnailDimensions","alt","VERIFIED_ICON","VerifiedIcon","FullNameTitle","peer","noVerified","noFake","withEmojiStatus","emojiStatusSize","noLoopLimit","onEmojiStatusClick","getUserFullName","emojiStatus","isPremium","isVerified","CustomEmoji","documentId","loopLimit","EMOJI_STATUS_LOOP_LIMIT","observeIntersectionForLoading","PremiumIcon","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","avatarSize","noAvatar","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","withVideoAvatar","noRtl","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","getMainUsername","TopicIcon","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","MessageOutgoingStatus","Media","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","onContextMenu","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","top","shiftX","shiftY","setAttribute","Keys","Transition","activeKey","NothingFound","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","password","setPassword","TEST_PWD","canSubmit","setCanSubmit","focusDelayTimeoutMs","IS_TOUCH_ENV","focus","requestAnimationFrame","select","action","event","preventDefault","autoComplete","type","tabIndex","onKeyDown","code","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","disabled","Picker","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","shouldMinimize","setTimeout","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","canClose","clickArg","InputText","InfiniteScroll","items","Checkbox","label","checked","PrivateChatInfo","Loading","iconElement","titleText","PREMIUM_ICON","store","withGradient","big","html","generateIdFor","getPremiumIconGradient","userStatus","selectUserStatus","noStatusOrTyping","adminMember","customTitle","isOwner","isUserOnline","getUserStatus","ProfilePhoto","photo","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","currentPhoto","personalPhoto","profilePhoto","fallbackPhoto","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","mediaViewer","currentTopicId","ProfileInfo","openPremiumModal","photos","MEMO_EMPTY_ARRAY","prevMediaId","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","_membersCount","_membersCount2","element","querySelector","selectorToPreventScroll","onSwipe","direction","SwipeDirection","letterClassName","renderPhotoTabs","renderPhoto","ReactionStaticEmoji","reaction","availableReactions","isCustom","availableReaction","find","available","isSameReaction","staticIconId","staticIcon","observeIntersectionForPlaying","blankUrl","ReportModal","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","contentForStatusMenuContext","arg","StickerButton","noAnimate","noContextMenu","isStatusPicker","canViewSet","isCurrentUserPremium","noShowPremium","sharedCanvasRef","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","openStickerSet","setEmojiStatus","menuRef","hasCustomColor","shouldUseTextColor","rgbColor","customColor","useDynamicColorListener","isCustomEmoji","hasEffect","stickerSetInfo","isLocked","shouldPlay","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useContextMenuPosition","getLayout","withPortal","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","Date","now","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","MenuItem","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","StickerView","containerRef","isSmall","shouldLoop","shouldPreloadPreview","noPlay","withSharedAnimation","Menu","autoClose","iconEmojiId","TopicDefaultIcon","iconColor","typingUser","typingUserName","replace","trim","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","shouldRenderAsHtml","entities","contentNotSupportedText","renderTextWithEntities","noEmoji","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","some","ApiMessageEntityTypes","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","ChatFolderModal","useModuleLoader","Bundles","Badge","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","acc","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isShown","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","ChatCallStatus","isForumPanelActive","selectIsForumPanelOpen","AvatarBadge","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","messageListType","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","draft","selectDraft","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","Chat","folderId","orderDiff","animationType","offsetTop","onDragEnter","openChat","focusLastMessage","loadTopics","openForumPanel","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","forceOnHeavyAnimation","shouldReplaceHistory","handleDragEnter","handleDelete","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","IS_MULTITAB_SUPPORTED","createLocationHash","withPortalForMenu","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedIconFromSticker","fluid","pill","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","archiveUnreadCount","useFolderManagerForUnreadCounters","chatsCount","previewItems","arr","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","buttonClassName","RESERVED_HOTKEYS","ChatList","isForumPanelOpen","canDisplayArchive","onLeftColumnContentChange","openNextChat","closeForumPanel","shouldIgnoreDragRef","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useChatOrderDiff","CHAT_LIST_SLICE","useHotkeys","targetIndexDelta","IS_PWA","addEventListener","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","startsWith","digit","match","isArchiveInList","shift","position","Number","LeftColumnContent","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","Topic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","newTabActionSeparator","isSeparator","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","ownProps","detachWhenChanged","ForumPanel","onTopicSearch","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","captureEscKeyListener","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","withForumActions","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","renderTopics","GENERAL_TOPIC_ID","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","noForumTopicPanel","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","renderLastMessageOrTyping","renderActionMessageText","isEmbedded","senderName","getMessageSenderName","blobUrl","messageSummary","MessageSummary","isSpoiler","renderSummary","opacity","fastRaf","classList","remove","ANIMATION_END_DELAY","orderById","reduce","prevOrderById","mapValues","order","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","getSenderName","getSenderTitle","isChatGroup","HeaderMenuContainer","selectIsInSelectMode","noMenu","bot","selectChatBot","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","ANIMATION_LEVEL_MIN","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","menuButtonRef","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuClose","right","bottom","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","Account","getSession","getUid","command","updateGlobal","authState","handleRestartBot","handleJoinRequestsClick","screen","ManagementScreens","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","anchor","withExtraActions","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","CustomEmojiTooltip","CustomSend","DropTarget","isQuick","isGeneric","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","DropAreaState","DropArea","withQuick","onHide","hideTimeoutRef","prevWithQuick","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","from","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerId","onDragOver","handleDragOver","clearTimeout","EmojiTooltip","AbsoluteVideo","constructor","videoUrl","container","_defineProperty","this","createElement","load","noLoop","appendChild","recalculatePositionAndSize","play","paused","safePlay","pause","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","replyingToId","selectReplyingToId","isSelectModeActive","MessageInput","captionLimit","isAttachmentModalInput","editableInputId","getHtml","forcedPlaceholder","canSendPlainText","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","onScroll","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","prefixId","textColor","mapRef","Map","removeContainers","ids","player","get","delete","synchronizeElements","removedContainers","keys","querySelectorAll","dataset","uniqueId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","customEmojis","isHq","selectIsAlwaysHighPriorityEmoji","animation","isLottie","lottie","RLottie","coords","isLowPriority","removeContainer","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","set","addCustomEmojiInputRenderCallback","removeCustomEmojiInputRenderCallback","useEffectWithPrevDeps","prevTextColor","throttledSynchronizeElements","useThrottledCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","scroller","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","exec","toggle","htmlRef","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","IS_ANDROID","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","blur","isTouched","useDerivedState","contentEditable","textContent","IS_EMOJI_SUPPORTED","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextFormatter","anchorPosition","SymbolMenu","SymbolMenuButton","canSendGifs","canSendStickers","isReady","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","onCustomEmojiSelect","onStickerSelect","onGifSelect","isAttachmentModal","onRemoveSymbol","onEmojiSelect","closeBotCommandMenu","closeSendAsMenu","isSymbolMenuForced","setStickerSearchQuery","setGifSearchQuery","addRecentEmoji","addRecentCustomEmoji","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","handleSearchOpen","triggerEl","query","messageInput","EDITABLE_INPUT_MODAL_CSS_SELECTOR","EDITABLE_INPUT_CSS_SELECTOR","activeElement","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","el","replaceWith","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","b","m","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","setHtml","getSelectionRange","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","extractLastEmojiThrottled","useThrottledResolver","collapsed","getHtmlBeforeSelection","getLastEmoji","useDerivedSignal","hasCustomEmojis","lastEmoji","insertCustomEmoji","inputEl","htmlBeforeSelection","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","substring","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","pickTruthy","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","flat","matchedNames","unique","useEmojiTooltip","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","default","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","atIndex","lastIndexOf","emojiHtml","getElementById","emojiCode","newShouldAutoInsert","endsWith","test","isEmojiTooltipOpen","closeEmojiTooltip","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","filteredUsers","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","insertMention","forceFocus","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","substr","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","isDisabled","timeoutRef","useSyncEffect","CheckboxGroup","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","cropperResultOptions","quality","format","circle","Croppie","croppiePromise","cropper","CropModal","isCroppieReady","setIsCroppieReady","imgFile","cropContainer","offsetHeight","enableZoom","boundary","viewport","blobToDataUri","bind","err","DEBUG","console","initCropper","ensureCroppie","handleCropClick","croppedImg","blobToFile","hasCloseButton","FloatingActionButton","children","buttonRef","leftElement","secondaryIcon","rightElement","allowDisabledClick","inactive","onSecondaryIconClick","markIsTouched","unmarkIsTouched","handleClickEvent","MouseButton","handleSecondaryIconClick","handleMouseDown","ButtonElementTag","RippleEffect","MenuSeparator","Notification","onDismiss","actionText","actions","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","Radio","hidden","loadingOption","RangeSlider","step","renderValue","mainClassName","trackWidth","index","SearchInput","parentContainerClassName","focused","spinnerColor","spinnerBackgroundColor","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","backgroundColor","noCloseTransition","shouldAnimateFirstRender","prevIsOpen","prevChildren","fromChildrenRef","isFirstRender","Skeleton","variant","forceAspectRatio","inline","classNames","Switcher","onCheck","Tab","isBlocked","badgeCount","isBadgeActive","previousActiveTab","tabRef","tabEl","prevTabEl","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","SCROLL_DURATION","TabList","tabs","areFolders","activeTab","onSwitchTab","useHorizontalScroll","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","fastSmoothScrollHorizontal","tab","_tab$id","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","useFoldersReducer","useReducer","resolver","deps","ms","noFirst","setValue","useDebouncedResolver","noLast","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","volume","isFinite","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","withRaf","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","alpha","drawImage","fastBlur","onload","isInSearch","SERVICE_NOTIFICATIONS_USER_ID","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","timer","clearLongPressTimer","startLongPressTimer","originalEvent","touches","capture","emulateContextMenuEvent","passive","EMPTY_RECT","setPositionX","setPositionY","setTransformOriginX","setTransformOriginY","withScroll","setWithScroll","setStyle","setMenuStyle","anchorX","anchorY","menuEl","rootEl","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","marginTop","parseInt","getComputedStyle","menuRect","rootRect","horizontalPosition","verticalPosition","triggerRect","addedYForPortalPositioning","addedXForPortalPositioning","leftWithPossibleNegative","menuMaxHeight","offsetX","offsetY","resolverOrDependency","isAsync","_dependencies","getValue","useSignal","resolverRef","useStateRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","newValue","replyOriginForId","loadMessage","loadMessageThrottled","throttled","throttle","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","handleForumPanelAnimationEnd","shouldRenderForumPanel","useGetSelectionRange","inputSelector","getRange","setRange","onSelectionChange","range","Element","shouldPreventDefault","handleScroll","deltaX","deltaY","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","documentElement","runCallbacks","isConnected","mediaHash","mediaFormat","cacheBuster","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","idRef","setLoadProgress","startedAtRef","handleProgress","spentTime","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","markMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","useRunDebounced","CalendarModal","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","useSendMessageAction","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","initial","_signalRef$current","signalRef","createSignal","effect","isFirstRun","dependency","isSignal","subscribe","useEffectOnce","cleanupEffect","callback","savedCallback","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","mul_sum","shg_sum","vmin","vmax","putImageData","WAITING","Symbol","HIGH_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY_SIZE_THRESHOLD","HIGH_PRIORITY_CACHE_MODULO","IS_SAFARI","instancesById","workers","createConnector","Worker","URL","lastWorkerIndex","static","args","params","instance","addContainer","onEnded","onLoop","initConfig","initRenderer","isSharedCanvas","containers","clearRect","imgSize","isAnimating","isWaiting","forceRestart","isPaused","isEnded","approxFrameIndex","stopFrameIndex","doPlay","every","frames","frame","prevFrameIndex","close","playSegment","startFrameIndex","reduceFactor","setSpeed","speed","setNoLoop","newCoords","containerInfo","isJustCleaned","sizeFactor","calcSizeFactor","ensureCanvasSize","getFrame","HTMLDivElement","ImageData","isRendererInited","DPR","isDestroyed","clearCache","destroyRenderer","cacheModulo","setColor","newColor","workerIndex","cycleRestrict","request","onRendererInit","msPerFrame","framesCount","changeData","onChangeData","lastRenderAt","animate","frameIndex","requestFrame","cleanupPrevFrame","containerData","currentSpeed","delta","expectedNextFrameIndex","nextFrameIndex","onFrameLoad","imageBitmap","expectedWidth","expectedHeight","ConnectorClass","channel","init","postMessage","messageData","requestStates","requestStatesByCallback","requestState","promise","reject","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","update","response","callbackArgs","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","queue","getTrackQueue","chatAudio","getMessageKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","getDistance","a","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","t","newSum","oldAverage","newAverage","_options$initialZoom","_options$minZoom","_options$maxZoom","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","initialTouchCenter","innerWidth","innerHeight","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","withCursor","body","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","zoom","onWheelZoom","isUserEvent","sign","dx","dy","onWheelDrag","isNotPassive","hex2rgb","param","rgb2hex","p0","rgb2hsb","d","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","preloadImage","naturalHeight","naturalWidth","blockSize","getColorLuma","getPatternColor","hue","saturation","fastSmoothScroll","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","elementTop","scrollTop","offset","FocusDirection","calculateScrollFrom","scrollWithJs","isAnimatingScroll","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","transition","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","currentPath","stopById","containerWidth","scrollId","isStopped","random","scrollSnapType","force","forcePlaceCaretAtEnd","createRange","lastChild","nodeValue","selectNodeContents","collapse","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","nodeType","messageEl","firstChild","removeChild","isElementInViewport","display","windowHeight","windowSize","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","extractorEl","insertHtmlInSelection","deleteContents","fragment","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","fileSelector","openSystemFilesDialog","accept","noMultiple","removeAttribute","onchange","click"],"sourceRoot":""}