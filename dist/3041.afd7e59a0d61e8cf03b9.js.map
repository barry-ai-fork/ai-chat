{"version":3,"file":"3041.afd7e59a0d61e8cf03b9.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/TrackingMonkey.tsx","webpack://telegram-t/./src/components/auth/AuthCode.tsx","webpack://telegram-t/./src/components/auth/AuthPassword.tsx","webpack://telegram-t/./src/components/auth/AuthRegister.tsx","webpack://telegram-t/./src/worker/helpers/network.ts","webpack://telegram-t/./src/worker/helpers/env.ts","webpack://telegram-t/./src/worker/helpers/helpers.ts","webpack://telegram-t/./src/components/auth/AuthRegisterEmail.tsx","webpack://telegram-t/./src/components/auth/AuthSignPassword.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/lib/gramjs/Helpers.js","webpack://telegram-t/./src/util/directInputManager.ts","webpack://telegram-t/./src/util/stopEvent.ts"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { useState, useCallback, memo } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  code: string;\n  codeLength: number;\n  trackingDirection: number;\n  isTracking: boolean;\n  isBig?: boolean;\n};\n\nconst TRACKING_START_FRAME = 15;\nconst TRACKING_END_FRAME = 180;\n\nconst TrackingMonkey: FC<OwnProps> = ({\n  code,\n  codeLength,\n  trackingDirection,\n  isTracking,\n  isBig,\n}) => {\n  const [isFirstMonkeyLoaded, setIsFirstMonkeyLoaded] = useState(false);\n  const { isMobile } = useAppLayout();\n  const trackningFramesPerSymbol = (TRACKING_END_FRAME - TRACKING_START_FRAME) / codeLength;\n  const stickerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  const handleFirstMonkeyLoad = useCallback(() => setIsFirstMonkeyLoaded(true), []);\n\n  function getTrackingFrames(): [number, number] {\n    const startFrame = (code && code.length > 1) || trackingDirection < 0\n      ? TRACKING_START_FRAME + trackningFramesPerSymbol * (code.length - 1)\n      : 0;\n    const endFrame = code.length === codeLength\n      ? TRACKING_END_FRAME\n      : TRACKING_START_FRAME + trackningFramesPerSymbol * code.length;\n\n    if (trackingDirection < 1) {\n      return [\n        endFrame,\n        startFrame,\n      ];\n    }\n\n    return [\n      startFrame,\n      endFrame,\n    ];\n  }\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={isTracking ? 'hidden' : undefined}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyIdle}\n        play={!isTracking}\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={!isTracking ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyTracking}\n        playSegment={isTracking ? getTrackingFrames() : undefined}\n        speed={2}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(TrackingMonkey);\n","import type { FormEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, useCallback, memo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\nimport type { GlobalState } from '../../global/types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport TrackingMonkey from '../common/TrackingMonkey';\n\ntype StateProps = Pick<GlobalState, 'authPhoneNumber' | 'authIsCodeViaApp' | 'authIsLoading' | 'authError'>;\n\nconst CODE_LENGTH = 5;\n\nconst AuthCode: FC<StateProps> = ({\n  authPhoneNumber,\n  authIsCodeViaApp,\n  authIsLoading,\n  authError,\n}) => {\n  const {\n    setAuthCode,\n    returnToAuthPhoneNumber,\n    clearAuthError,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [code, setCode] = useState<string>('');\n  const [isTracking, setIsTracking] = useState(false);\n  const [trackingDirection, setTrackingDirection] = useState(1);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, []);\n\n  useHistoryBack({\n    isActive: true,\n    onBack: returnToAuthPhoneNumber,\n  });\n\n  const onCodeChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n    if (authError) {\n      clearAuthError();\n    }\n\n    const { currentTarget: target } = e;\n    target.value = target.value.replace(/[^\\d]+/, '').substr(0, CODE_LENGTH);\n\n    if (target.value === code) {\n      return;\n    }\n\n    setCode(target.value);\n\n    if (!isTracking) {\n      setIsTracking(true);\n    } else if (!target.value.length) {\n      setIsTracking(false);\n    }\n\n    if (code && code.length > target.value.length) {\n      setTrackingDirection(-1);\n    } else {\n      setTrackingDirection(1);\n    }\n\n    if (target.value.length === CODE_LENGTH) {\n      setAuthCode({ code: target.value });\n    }\n  }, [authError, clearAuthError, code, isTracking, setAuthCode]);\n\n  function handleReturnToAuthPhoneNumber() {\n    returnToAuthPhoneNumber();\n  }\n\n  return (\n    <div id=\"auth-code-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <TrackingMonkey\n          code={code}\n          codeLength={CODE_LENGTH}\n          isTracking={isTracking}\n          trackingDirection={trackingDirection}\n        />\n        <h1>\n          {authPhoneNumber}\n          <div\n            className=\"auth-number-edit\"\n            onClick={handleReturnToAuthPhoneNumber}\n            role=\"button\"\n            tabIndex={0}\n            title={lang('WrongNumber')}\n          >\n            <i className=\"icon-edit\" />\n          </div>\n        </h1>\n        <p className=\"note\">\n          {renderText(lang(authIsCodeViaApp ? 'SentAppCode' : 'Login.JustSentSms'), ['simple_markdown'])}\n        </p>\n        <InputText\n          ref={inputRef}\n          id=\"sign-in-code\"\n          label={lang('Code')}\n          onInput={onCodeChange}\n          value={code}\n          error={authError && lang(authError)}\n          autoComplete=\"off\"\n          inputMode=\"numeric\"\n        />\n        {authIsLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authPhoneNumber', 'authIsCodeViaApp', 'authIsLoading', 'authError']),\n)(AuthCode));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport MonkeyPassword from '../common/PasswordMonkey';\nimport PasswordForm from '../common/PasswordForm';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authError' | 'authHint'>;\n\nconst AuthPassword: FC<StateProps> = ({\n  authIsLoading, authError, authHint,\n}) => {\n  const { setAuthPassword, clearAuthError } = getActions();\n\n  const lang = useLang();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleSubmit = useCallback((password: string) => {\n    setAuthPassword({ password });\n  }, [setAuthPassword]);\n\n  return (\n    <div id=\"auth-password-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <MonkeyPassword isPasswordVisible={showPassword} />\n        <h1>{lang('Login.Header.Password')}</h1>\n        <p className=\"note\">{lang('Login.EnterPasswordDescription')}</p>\n        <PasswordForm\n          clearError={clearAuthError}\n          error={authError && lang(authError)}\n          hint={authHint}\n          isLoading={authIsLoading}\n          isPasswordVisible={showPassword}\n          onChangePasswordVisibility={handleChangePasswordVisibility}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authError', 'authHint']),\n)(AuthPassword));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useState, memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport AvatarEditable from '../ui/AvatarEditable';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authError'>;\n\nconst AuthRegister: FC<StateProps> = ({\n  authIsLoading, authError,\n}) => {\n  const { signUp, clearAuthError, uploadProfilePhoto } = getActions();\n\n  const lang = useLang();\n  const [isButtonShown, setIsButtonShown] = useState(false);\n  const [croppedFile, setCroppedFile] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const handleFirstNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (authError) {\n      clearAuthError();\n    }\n\n    const { target } = event;\n\n    setFirstName(target.value);\n    setIsButtonShown(target.value.length > 0);\n  }, [authError, clearAuthError]);\n\n  const handleLastNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    setLastName(target.value);\n  }, []);\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    signUp({ firstName, lastName });\n\n    if (croppedFile) {\n      uploadProfilePhoto({ file: croppedFile });\n    }\n  }\n\n  return (\n    <div id=\"auth-registration-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <form action=\"\" method=\"post\" onSubmit={handleSubmit}>\n          <AvatarEditable onChange={setCroppedFile} />\n          <h2>{lang('YourName')}</h2>\n          <p className=\"note\">{lang('Login.Register.Desc')}</p>\n          <InputText\n            id=\"registration-first-name\"\n            label={lang('Login.Register.FirstName.Placeholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={authError && lang(authError)}\n            autoComplete=\"given-name\"\n          />\n          <InputText\n            id=\"registration-last-name\"\n            label={lang('Login.Register.LastName.Placeholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n            autoComplete=\"family-name\"\n          />\n          {isButtonShown && (\n            <Button type=\"submit\" ripple isLoading={authIsLoading}>{lang('Next')}</Button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authError']),\n)(AuthRegister));\n","import {ENV} from \"./env\";\nexport function getCorsHeader(){\n  const {Access_Control_Allow_Origin} = ENV\n  // const host =\n  return {\n    'content-type': 'application/json;charset=UTF-8',\n    \"Access-Control-Allow-Origin\":Access_Control_Allow_Origin,\n    \"Access-Control-Allow-Methods\":\"GET, POST, OPTIONS\",\n    \"Access-Control-Allow-Headers\":\"Content-Type, Authorization, Accept\",\n    \"Access-Control-Allow-Credentials\":\"true\",\n  }\n}\nexport function ResponseJson(result:object,status = 200) {\n  return new Response(JSON.stringify(result), {\n    status,\n    headers: {\n      ...getCorsHeader()\n    },\n  });\n}\n\nexport function parseQueryFromUrl(urlStr: string): { url: URL; query: Record<string, string> } {\n  const replacedUrl = urlStr.replace(/#/g, '?');\n  const url = new URL(replacedUrl);\n  const query = Array.from(url.searchParams.entries()).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      [key]: value\n    }),\n    {}\n  );\n\n  return { url, query };\n}\n","import {HS256} from \"worktop/jwt\";\nimport CloudFlareKv from \"../share/db/CloudFlareKv\";\nimport Mnemonic from \"../../lib/ptp/wallet/Mnemonic\";\nimport Wallet from \"../../lib/ptp/wallet/Wallet\";\n\nexport const ENV:{\n  IS_PROD: boolean,\n  TEST_TOKEN:string,\n  USER_ID_START: string,\n  USER_ID_CHATGPT: string,\n  USER_ID_BOT_FATHER:string,\n  TOKEN_EXPIRE_TIME_SEC: number,\n  JWT_SECRET: string,\n  GITHUB_CLIENT_ID: string,\n  GITHUB_CLIENT_SECRET: string,\n  GOOGLE_REDIRECT_PROD_URL: string,\n  GOOGLE_CLIENT_ID : string,\n  GOOGLE_CLIENT_SECRET : string,\n  FRONTEND_URL : string,\n  Access_Control_Allow_Origin : string,\n  // OpenAI API Key\n  OPENAI_API_KEY: string,\n  // 为了避免4096字符限制，将消息删减\n  AUTO_TRIM_HISTORY: boolean,\n  // 最大历史记录长度\n  MAX_HISTORY_LENGTH: number,\n} = {\n  IS_PROD: true,\n  TEST_TOKEN:\"\",\n  USER_ID_START: \"623415\",\n  USER_ID_BOT_FATHER: \"10000\",\n  USER_ID_CHATGPT: \"10001\",\n  TOKEN_EXPIRE_TIME_SEC: 3600,\n  JWT_SECRET: \"\",\n  GITHUB_CLIENT_ID: \"\",\n  GITHUB_CLIENT_SECRET: \"\",\n  GOOGLE_REDIRECT_PROD_URL: \"http://localhost:1235/auth/google/callback\",\n  GOOGLE_CLIENT_ID : \"\",\n  GOOGLE_CLIENT_SECRET : \"\",\n  FRONTEND_URL : \"http://localhost:1234/\",\n  Access_Control_Allow_Origin : \"*\",\n  // OpenAI API Key\n  OPENAI_API_KEY: \"\",\n  // 为了避免4096字符限制，将消息删减\n  AUTO_TRIM_HISTORY: false,\n  // 最大历史记录长度\n  MAX_HISTORY_LENGTH: 20,\n};\n\nexport let kv:CloudFlareKv;\n//@ts-ignore\nexport let jwt =HS256({key:global.JWT_SECRET});\n\nexport function initEnv(env:Record<string, any>) {\n  for (const key in ENV) {\n    if (env[key] !== undefined) {\n      // @ts-ignore\n      ENV[key] = env[key];\n    }\n  }\n  kv = new CloudFlareKv();\n  kv.init(env.DATABASE)\n}\n","export const isEmailValid = (email:string)=>{\n  const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return re.test(email);\n}\n","import type {ChangeEvent} from 'react';\nimport {MouseEvent as ReactMouseEvent} from \"react\";\nimport type {FC} from '../../lib/teact/teact';\nimport React, {memo, useCallback, useEffect, useState} from '../../lib/teact/teact';\nimport {getActions, withGlobal} from '../../global';\nimport github from '../../assets/oauth/github.svg';\nimport google from '../../assets/oauth/google.svg';\nimport PasswordValidator from \"password-validator\";\nimport type {GlobalState} from '../../global/types';\n\nimport {pick} from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport PasswordForm from \"../common/PasswordForm\";\nimport {sha1} from '../../lib/gramjs/Helpers';\n\nimport {parseQueryFromUrl} from \"../../worker/helpers/network\";\nimport {BASE_API, SESSION_TOKEN, TEST_PWD, TEST_USERNAME} from \"../../config\";\nimport {isEmailValid} from \"../../worker/helpers/helpers\";\nimport MsgConn, {MsgClientState} from \"../../lib/ptp/client/MsgConn\";\nimport {getIsMobile} from \"../../hooks/useAppLayout\";\n\ntype StateProps = Pick<GlobalState, 'authError'>;\nlet handleTokenGoing = false;\nconst AuthRegisterEmail: FC<StateProps> = ({\n  authError,\n}) => {\n\n  const { clearAuthError, showAuthError,updateGlobal } = getActions();\n\n  const lang = useLang();\n  const [isOAuthLoginOk, setIsOAuthLoginOk] = useState(false);\n  const [isRegMode, setIsRegMode] = useState(false);\n  const [email, setEmail] = useState(TEST_USERNAME);\n  const [isButtonShown, setIsButtonShown] = useState(isEmailValid(email));\n  const [password, setPassword] = useState(TEST_PWD);\n  const [passwordRepeat, setPasswordRepeat] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [passwordRepeatError, setPasswordRepeatError] = useState('');\n  const [authIsLoading,setAuthIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showPasswordRepeat, setShowPasswordRepeat] = useState(false);\n\n  const toggleRegMode = useCallback((event: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setIsRegMode(!isRegMode);\n  }, [isRegMode]);\n\n  const handleEmailChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (authError) {\n      clearAuthError();\n    }\n    const { target } = event;\n    setEmail(target.value);\n    setIsButtonShown(isEmailValid(target.value));\n  }, [authError, clearAuthError]);\n\n  const handlePasswordChange = useCallback((password:string) => {\n    if (passwordError) {\n      setPasswordError(\"\");\n    }\n    if (authError) {\n      clearAuthError();\n    }\n\n    setPassword(password);\n  }, [passwordError, setPasswordError,clearAuthError]);\n\n  const handlePasswordRepeatChange = useCallback((password:string) => {\n    if (passwordRepeatError) {\n      setPasswordRepeatError(\"\");\n    }\n\n    if (authError) {\n      clearAuthError();\n    }\n    setPasswordRepeat(password);\n  }, [passwordRepeatError,setPasswordRepeatError, clearAuthError]);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleChangePasswordRepeatVisibility = useCallback((isVisible) => {\n    setShowPasswordRepeat(isVisible);\n  }, []);\n\n  async function handleSubmit(event: any) {\n    event.preventDefault();\n\n    if(!isEmailValid(email) ){\n      return showAuthError(\"Email不合法\")\n    }\n    const schema = new PasswordValidator();\n    schema\n      .is().min(8)                                    // Minimum length 8\n      .is().max(100)                                  // Maximum length 100\n      .has().uppercase()                              // Must have uppercase letters\n      .has().lowercase()                              // Must have lowercase letters\n      .has().not().spaces()                           // Should not have spaces\n      .is().not().oneOf(['Passw0rd', 'Password123']); // Blacklist these values\n\n    console.log(schema.validate('password', { list: true }));\n    if(!schema.validate(password)){\n      return setPasswordError(\"密码需要包含大小写字母至少8个字符\")\n    }\n    if(isOAuthLoginOk){\n      const pwd1 = await sha1(password.toString());\n      const params = {\n        password:pwd1.toString(\"hex\")\n      }\n      setAuthIsLoading(true)\n      try{\n        const response = await fetch(`${BASE_API}/auth/password`, {\n          method: 'POST',\n          headers: {\n            \"Accept\": 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(params),\n        });\n        const result = await response.json();\n        if (result.err_msg) {\n          return showAuthError(result.err_msg)\n        }else{\n          handleAuthOkJump()\n        }\n      }catch (e){\n        showAuthError(\"登录异常\")\n      }finally {\n        setAuthIsLoading(false)\n      }\n      return;\n    }\n    if(isRegMode){\n      if(password != passwordRepeat){\n        return setPasswordRepeatError(\"两次输入的密码不一致\")\n      }\n    }\n\n    const pwd = password === TEST_PWD ? \"da39a3ee5e6b4b0d3255bfef95601890afd80709\" : await sha1(password.toString());\n    const params = {\n      email,\n      password:pwd.toString(\"hex\")\n    }\n    setAuthIsLoading(true)\n    try{\n      const response = await fetch(`${BASE_API}/auth/${isRegMode?\"reg\":\"login\"}`, {\n        method: 'POST',\n        headers: {\n          \"Accept\": 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(params),\n      });\n      const result = await response.json();\n      if (result.err_msg) {\n        return showAuthError(result.err_msg)\n      }else{\n        handleAuthOk(result)\n        handleAuthOkJump()\n      }\n    }catch (e){\n      showAuthError(\"登录异常\")\n    }finally {\n      setAuthIsLoading(false)\n    }\n  }\n\n  const handleAuthOkJump = ()=>{\n    updateGlobal({\n      authState:\"authorizationStateReady\"\n    });\n  }\n  // @ts-ignore\n  const handleAuthOk = ({token,user})=>{\n    localStorage.setItem(SESSION_TOKEN,JSON.stringify({token,user}));\n    if(MsgConn.getMsgClient() && MsgConn.getMsgClient()?.getState() == MsgClientState.connected){\n      // @ts-ignore\n      MsgConn.getMsgClient()?.login(token);\n    }\n  }\n  useEffect(()=>{\n    const {query} = parseQueryFromUrl(window.location.href);\n    const {code,email} = query;\n    const handleToken = async ()=>{\n      try{\n        const response = await fetch(`${BASE_API}/auth/token`, {\n          method: 'POST',\n          headers: {\n            \"Accept\": 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            code\n          }),\n        });\n        const result = await response.json();\n        if(!result.err_msg){\n          // setEmail(result.user.email);\n          // setPasswordError(\"设置密码\");\n          // setIsOAuthLoginOk(true);\n          handleAuthOk(result)\n          handleAuthOkJump()\n        }else{\n          showAuthError(result.err_msg)\n        }\n      }catch (e){\n        showAuthError(\"network error\")\n      }\n    }\n    if(code && !handleTokenGoing){\n      handleTokenGoing = true;\n      setEmail(email);\n      setAuthIsLoading(true)\n      setIsButtonShown(true);\n      handleToken().then(()=>{\n        window.history.replaceState({}, '', window.location.href.split(\"?\")[0]);\n      }).finally(()=>{\n        handleTokenGoing = false;\n        setAuthIsLoading(false)\n      })\n    }\n  },[])\n\n  useEffect(()=>{\n    const {query} = parseQueryFromUrl(window.location.href);\n    const {err_msg} = query;\n    if(err_msg){\n      showAuthError(err_msg)\n      window.history.replaceState({}, '', window.location.href.split(\"?\")[0]);\n    }\n  },[])\n  const isMobile = getIsMobile();\n  return (\n    <div id=\"auth-registration-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <form action=\"\" method=\"post\" onSubmit={handleSubmit}>\n          <h2>AiChat</h2>\n          <p className=\"note\">An Ai Chat Application</p>\n          <InputText\n            onFocus={clearAuthError}\n            id=\"registration-email\"\n            type={\"email\"}\n            label={\"Email\"}\n            onChange={handleEmailChange}\n            value={email}\n            error={authError && lang(authError) || \"\"}\n            autoComplete=\"given-name\"\n          />\n          <PasswordForm\n            clearError={()=>setPasswordError(\"\")}\n            error={passwordError && lang(passwordError)}\n            isPasswordVisible={showPassword}\n            onChangePasswordVisibility={handleChangePasswordVisibility}\n            onInputChange={handlePasswordChange}\n          />\n          {\n            isRegMode &&\n            <PasswordForm\n              placeholder={\"Repeat Password\"}\n              clearError={()=>setPasswordRepeatError(\"\")}\n              error={passwordRepeatError && lang(passwordRepeatError)}\n              isPasswordVisible={showPasswordRepeat}\n              onChangePasswordVisibility={handleChangePasswordRepeatVisibility}\n              onInputChange={handlePasswordRepeatChange}\n            />\n          }\n          {isButtonShown && (\n            <Button type=\"submit\" ripple isLoading={authIsLoading}>{lang('Next')}</Button>\n          )}\n        </form>\n        {\n          !isRegMode ?\n            <div className={\"auth-tips\"}>\n                Don't have an account? <u className={\"auth-tips-action\"} onClick={toggleRegMode}>Sign up</u>\n            </div>:\n            <div className={\"auth-tips\"}>\n              Already have an account? <u className={\"auth-tips-action\"} onClick={toggleRegMode}>Log in</u>\n            </div>\n        }\n\n        <div className={\"auth-or-line\"}>\n          <div className={\"auth-line\"}></div>\n          <div className={\"auth-or\"}>OR</div>\n        </div>\n        <div className=\"oauth-btn\">\n          <Button type=\"button\" onClick={()=>{\n            window.location.href = `${BASE_API}/auth/github`;\n          }} className=\"Button translucent round\" aria-label=\"Github\" style=\"\">\n            <img src={github} alt=\"Github\"/>\n          </Button>\n          <Button type=\"button\" onClick={()=>{\n            window.location.href = `${BASE_API}/auth/google`;\n          }} className=\"Button translucent round\" aria-label=\"Google\" style=\"\">\n            <img src={google} alt=\"Google\"/>\n          </Button>\n        </div>\n      </div>\n      {\n        isMobile &&\n        <div style={\"height:500px\"}></div>\n      }\n\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authError']),\n)(AuthRegisterEmail));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport MonkeyPassword from '../common/PasswordMonkey';\nimport PasswordForm from '../common/PasswordForm';\nimport Button from \"../ui/Button\";\nimport PasswordValidator from \"password-validator\";\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authError' | 'authHint'>;\n\nconst AuthSignPassword: FC<StateProps> = ({\n  authIsLoading, authError, authHint,\n}) => {\n  const { setAuthPassword, clearAuthError,showAuthError } = getActions();\n\n  const lang = useLang();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleSubmit = useCallback(async (password: string) => {\n    const schema = new PasswordValidator();\n    schema\n      .is().min(8)                                    // Minimum length 8\n      .is().max(100)                                  // Maximum length 100\n      .has().uppercase()                              // Must have uppercase letters\n      .has().lowercase()                              // Must have lowercase letters\n      .has().not().spaces()                           // Should not have spaces\n      .is().not().oneOf(['Passw0rd', 'Password123']); // Blacklist these values\n\n    if(!schema.validate(password)){\n      return showAuthError(\"密码需要包含大小写字母至少8个字符\")\n    }\n\n    setAuthPassword({ password });\n  }, [setAuthPassword]);\n\n  const handleClose = useCallback(() => {\n    getActions().updateGlobal({\n      authState:\"authorizationStateReady\"\n    })\n  }, [setAuthPassword]);\n\n  return (\n    <div id=\"auth-password-form\" className=\"custom-scroll\">\n      <div className={'auth-close'}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang('Close')}\n          onClick={handleClose}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      </div>\n      <div className=\"auth-form\">\n        <MonkeyPassword isPasswordVisible={showPassword} />\n        <h1>{lang('Login.Header.Password')}</h1>\n        <p className=\"note\"></p>\n        <PasswordForm\n          clearError={clearAuthError}\n          error={authError && lang(authError)}\n          hint={authHint}\n          isLoading={authIsLoading}\n          isPasswordVisible={showPassword}\n          onChangePasswordVisibility={handleChangePasswordVisibility}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authError', 'authHint']),\n)(AuthSignPassword));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport {MIN_PASSWORD_LENGTH, TEST_PWD} from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState(TEST_PWD);\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          onKeyDown={(e)=>{\n            if(e.code == \"Enter\" && !onSubmit){\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n          }}\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={isPasswordVisible ? 'icon-eye' : 'icon-eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport useTimeout from '../../hooks/useTimeout';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { enableDirectTextInput, disableDirectTextInput } from '../../util/directInputManager';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  useEffect(() => (isOpen\n    ? captureKeyboardListeners({ onEsc: onClose, onEnter })\n    : undefined), [isOpen, onClose, onEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\" style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","const BigInt = require('big-integer');\nconst crypto = require('./crypto/crypto');\n\n/**\n * converts a buffer to big int\n * @param buffer\n * @param little\n * @param signed\n * @returns {bigInt.BigInteger}\n */\nfunction readBigIntFromBuffer(buffer, little = true, signed = false) {\n    let randBuffer = Buffer.from(buffer);\n    const bytesNumber = randBuffer.length;\n    if (little) {\n        randBuffer = randBuffer.reverse();\n    }\n    let bigInt = BigInt(randBuffer.toString('hex'), 16);\n    if (signed && Math.floor(bigInt.toString('2').length / 8) >= bytesNumber) {\n        bigInt = bigInt.subtract(BigInt(2)\n            .pow(BigInt(bytesNumber * 8)));\n    }\n    return bigInt;\n}\n\n/**\n * Special case signed little ints\n * @param big\n * @param number\n * @returns {Buffer}\n */\nfunction toSignedLittleBuffer(big, number = 8) {\n    const bigNumber = BigInt(big);\n    const byteArray = [];\n    for (let i = 0; i < number; i++) {\n        byteArray[i] = bigNumber.shiftRight(8 * i)\n            .and(255);\n    }\n    return Buffer.from(byteArray);\n}\n\n/**\n * converts a big int to a buffer\n * @param bigInt {bigInt.BigInteger}\n * @param bytesNumber\n * @param little\n * @param signed\n * @returns {Buffer}\n */\nfunction readBufferFromBigInt(bigInt, bytesNumber, little = true, signed = false) {\n    bigInt = BigInt(bigInt);\n    const bitLength = bigInt.bitLength();\n\n    const bytes = Math.ceil(bitLength / 8);\n    if (bytesNumber < bytes) {\n        throw new Error('OverflowError: int too big to convert');\n    }\n    if (!signed && bigInt.lesser(BigInt(0))) {\n        throw new Error('Cannot convert to unsigned');\n    }\n    let below = false;\n    if (bigInt.lesser(BigInt(0))) {\n        below = true;\n        bigInt = bigInt.abs();\n    }\n\n    const hex = bigInt.toString('16')\n        .padStart(bytesNumber * 2, '0');\n    let l = Buffer.from(hex, 'hex');\n    if (little) {\n        l = l.reverse();\n    }\n\n    if (signed && below) {\n        if (little) {\n            let reminder = false;\n            if (l[0] !== 0) {\n                l[0] -= 1;\n            }\n            for (let i = 0; i < l.length; i++) {\n                if (l[i] === 0) {\n                    reminder = true;\n                    continue;\n                }\n                if (reminder) {\n                    l[i] -= 1;\n                    reminder = false;\n                }\n                l[i] = 255 - l[i];\n            }\n        } else {\n            l[l.length - 1] = 256 - l[l.length - 1];\n            for (let i = 0; i < l.length - 1; i++) {\n                l[i] = 255 - l[i];\n            }\n        }\n    }\n    return l;\n}\n\n/**\n * Generates a random long integer (8 bytes), which is optionally signed\n * @returns {BigInteger}\n */\nfunction generateRandomLong(signed = true) {\n    return readBigIntFromBuffer(generateRandomBytes(8), true, signed);\n}\n\n/**\n * .... really javascript\n * @param n {number}\n * @param m {number}\n * @returns {number}\n */\nfunction mod(n, m) {\n    return ((n % m) + m) % m;\n}\n\n/**\n * returns a positive bigInt\n * @param n {BigInt}\n * @param m {BigInt}\n * @returns {BigInt}\n */\nfunction bigIntMod(n, m) {\n    return ((n.remainder(m)).add(m)).remainder(m);\n}\n\n/**\n * Generates a random bytes array\n * @param count\n * @returns {Buffer}\n */\nfunction generateRandomBytes(count) {\n    return Buffer.from(crypto.randomBytes(count));\n}\n\n/**\n * Calculate the key based on Telegram guidelines, specifying whether it's the client or not\n * @param sharedKey\n * @param msgKey\n * @param client\n * @returns {{iv: Buffer, key: Buffer}}\n */\n\n/* CONTEST\nthis is mtproto 1 (mostly used for secret chats)\nasync function calcKey(sharedKey, msgKey, client) {\n    const x = client === true ? 0 : 8\n    const [sha1a, sha1b, sha1c, sha1d] = await Promise.all([\n        sha1(Buffer.concat([msgKey, sharedKey.slice(x, x + 32)])),\n        sha1(Buffer.concat([sharedKey.slice(x + 32, x + 48), msgKey, sharedKey.slice(x + 48, x + 64)])),\n        sha1(Buffer.concat([sharedKey.slice(x + 64, x + 96), msgKey])),\n        sha1(Buffer.concat([msgKey, sharedKey.slice(x + 96, x + 128)]))\n    ])\n    const key = Buffer.concat([sha1a.slice(0, 8), sha1b.slice(8, 20), sha1c.slice(4, 16)])\n    const iv = Buffer.concat([sha1a.slice(8, 20), sha1b.slice(0, 8), sha1c.slice(16, 20), sha1d.slice(0, 8)])\n    return {\n        key,\n        iv\n    }\n}\n\n */\n\n/**\n * Generates the key data corresponding to the given nonces\n * @param serverNonce\n * @param newNonce\n * @returns {{key: Buffer, iv: Buffer}}\n */\nasync function generateKeyDataFromNonce(serverNonce, newNonce) {\n    serverNonce = toSignedLittleBuffer(serverNonce, 16);\n    newNonce = toSignedLittleBuffer(newNonce, 32);\n    const [hash1, hash2, hash3] = await Promise.all([\n        sha1(Buffer.concat([newNonce, serverNonce])),\n        sha1(Buffer.concat([serverNonce, newNonce])),\n        sha1(Buffer.concat([newNonce, newNonce])),\n    ]);\n    const keyBuffer = Buffer.concat([hash1, hash2.slice(0, 12)]);\n    const ivBuffer = Buffer.concat([hash2.slice(12, 20), hash3, newNonce.slice(0, 4)]);\n    return {\n        key: keyBuffer,\n        iv: ivBuffer,\n    };\n}\n\nfunction convertToLittle(buf) {\n    const correct = Buffer.alloc(buf.length * 4);\n\n    for (let i = 0; i < buf.length; i++) {\n        correct.writeUInt32BE(buf[i], i * 4);\n    }\n    return correct;\n}\n\n/**\n * Calculates the SHA1 digest for the given data\n * @param data\n * @returns {Promise}\n */\nfunction sha1(data) {\n    const shaSum = crypto.createHash('sha1');\n    shaSum.update(data);\n    return shaSum.digest();\n}\n\n/**\n * Calculates the SHA256 digest for the given data\n * @param data\n * @returns {Promise}\n */\nfunction sha256(data) {\n    const shaSum = crypto.createHash('sha256');\n    shaSum.update(data);\n    return shaSum.digest();\n}\n\n/**\n * Fast mod pow for RSA calculation. a^b % n\n * @param a\n * @param b\n * @param n\n * @returns {bigInt.BigInteger}\n */\nfunction modExp(a, b, n) {\n    a = a.remainder(n);\n    let result = BigInt.one;\n    let x = a;\n    while (b.greater(BigInt.zero)) {\n        const leastSignificantBit = b.remainder(BigInt(2));\n        b = b.divide(BigInt(2));\n        if (leastSignificantBit.eq(BigInt.one)) {\n            result = result.multiply(x);\n            result = result.remainder(n);\n        }\n        x = x.multiply(x);\n        x = x.remainder(n);\n    }\n    return result;\n}\n\n/**\n * Gets the arbitrary-length byte array corresponding to the given integer\n * @param integer {any}\n * @param signed {boolean}\n * @returns {Buffer}\n */\nfunction getByteArray(integer, signed = false) {\n    const bits = integer.toString(2).length;\n    const byteLength = Math.floor((bits + 8 - 1) / 8);\n    return readBufferFromBigInt(BigInt(integer), byteLength, false, signed);\n}\n\n/**\n * returns a random int from min (inclusive) and max (inclusive)\n * @param min\n * @param max\n * @returns {number}\n */\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Sleeps a specified amount of time\n * @param ms time in milliseconds\n * @returns {Promise}\n */\nconst sleep = (ms) => new Promise((resolve) => {\n    setTimeout(resolve, ms);\n});\n\n/**\n * Helper to export two buffers of same length\n * @returns {Buffer}\n */\n\nfunction bufferXor(a, b) {\n    const res = [];\n    for (let i = 0; i < a.length; i++) {\n        res.push(a[i] ^ b[i]);\n    }\n    return Buffer.from(res);\n}\n\n/**\n * Checks if the obj is an array\n * @param obj\n * @returns {boolean}\n */\n/*\nCONTEST\nwe do'nt support array requests anyway\nfunction isArrayLike(obj) {\n    if (!obj) return false\n    const l = obj.length\n    if (typeof l != 'number' || l < 0) return false\n    if (Math.floor(l) !== l) return false\n    // fast check\n    if (l > 0 && !(l - 1 in obj)) return false\n    // more complete check (optional)\n    for (let i = 0; i < l; ++i) {\n        if (!(i in obj)) return false\n    }\n    return true\n}\n*/\n\n// Taken from https://stackoverflow.com/questions/18638900/javascript-crc32/18639999#18639999\nfunction makeCRCTable() {\n    let c;\n    const crcTable = [];\n    for (let n = 0; n < 256; n++) {\n        c = n;\n        for (let k = 0; k < 8; k++) {\n            c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n        }\n        crcTable[n] = c;\n    }\n    return crcTable;\n}\n\nlet crcTable;\n\nfunction crc32(buf) {\n    if (!crcTable) {\n        crcTable = makeCRCTable();\n    }\n    if (!Buffer.isBuffer(buf)) {\n        buf = Buffer.from(buf);\n    }\n    let crc = -1;\n\n    for (let index = 0; index < buf.length; index++) {\n        const byte = buf[index];\n        crc = crcTable[(crc ^ byte) & 0xff] ^ (crc >>> 8);\n    }\n    return (crc ^ (-1)) >>> 0;\n}\n\nmodule.exports = {\n    readBigIntFromBuffer,\n    readBufferFromBigInt,\n    generateRandomLong,\n    mod,\n    crc32,\n    generateRandomBytes,\n    // calcKey,\n    generateKeyDataFromNonce,\n    sha1,\n    sha256,\n    bigIntMod,\n    modExp,\n    getRandomInt,\n    sleep,\n    getByteArray,\n    // isArrayLike,\n    toSignedLittleBuffer,\n    convertToLittle,\n    bufferXor,\n};\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event | React.FormEvent) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n"],"names":["memo","TrackingMonkey","code","codeLength","trackingDirection","isTracking","isBig","isFirstMonkeyLoaded","setIsFirstMonkeyLoaded","useState","isMobile","useAppLayout","trackningFramesPerSymbol","stickerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","useCallback","React","id","className","AnimatedSticker","size","STICKER_SIZE_TWO_FA","undefined","tgsUrl","LOCAL_TGS_URLS","play","onLoad","playSegment","startFrame","length","endFrame","getTrackingFrames","speed","noLoop","withGlobal","global","pick","AuthCode","authPhoneNumber","authIsCodeViaApp","authIsLoading","authError","setAuthCode","returnToAuthPhoneNumber","clearAuthError","getActions","lang","useLang","inputRef","useRef","setCode","setIsTracking","setTrackingDirection","useEffect","IS_TOUCH_ENV","current","focus","useHistoryBack","isActive","onBack","onCodeChange","e","currentTarget","target","value","replace","substr","onClick","role","tabIndex","title","renderText","InputText","ref","label","onInput","error","autoComplete","inputMode","Loading","AuthPassword","authHint","setAuthPassword","showPassword","setShowPassword","handleChangePasswordVisibility","isVisible","handleSubmit","password","MonkeyPassword","isPasswordVisible","PasswordForm","clearError","hint","isLoading","onChangePasswordVisibility","onSubmit","AuthRegister","signUp","uploadProfilePhoto","isButtonShown","setIsButtonShown","croppedFile","setCroppedFile","firstName","setFirstName","lastName","setLastName","handleFirstNameChange","event","handleLastNameChange","action","method","preventDefault","file","AvatarEditable","onChange","Button","type","ripple","parseQueryFromUrl","urlStr","replacedUrl","url","URL","query","Array","from","searchParams","entries","reduce","acc","key","HS256","JWT_SECRET","isEmailValid","email","test","handleTokenGoing","AuthRegisterEmail","showAuthError","updateGlobal","isOAuthLoginOk","setIsOAuthLoginOk","isRegMode","setIsRegMode","setEmail","TEST_USERNAME","setPassword","TEST_PWD","passwordRepeat","setPasswordRepeat","passwordError","setPasswordError","passwordRepeatError","setPasswordRepeatError","setAuthIsLoading","showPasswordRepeat","setShowPasswordRepeat","toggleRegMode","handleEmailChange","handlePasswordChange","handlePasswordRepeatChange","handleChangePasswordRepeatVisibility","handleAuthOkJump","authState","handleAuthOk","token","user","localStorage","setItem","SESSION_TOKEN","JSON","stringify","MsgConn","getState","MsgClientState","login","window","location","href","async","response","fetch","BASE_API","headers","body","result","json","err_msg","handleToken","then","history","replaceState","split","finally","getIsMobile","schema","PasswordValidator","is","min","max","has","uppercase","lowercase","not","spaces","oneOf","console","log","validate","list","params","sha1","toString","pwd","onFocus","onInputChange","placeholder","style","src","github","alt","google","AuthSignPassword","handleClose","round","color","ariaLabel","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","requestAnimationFrame","select","stopEvent","buildClassName","dir","isRtl","onKeyDown","stopPropagation","MIN_PASSWORD_LENGTH","maxLength","disabled","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","PasswordMonkey","markFirstMonkeyLoaded","useFlag","isPeekShown","markPeekShown","stikerSize","isForForum","currentAvatarBlobUrl","selectedFile","setSelectedFile","croppedBlobUrl","setCroppedBlobUrl","handleAvatarCrop","croppedImg","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","files","accept","CropModal","onClose","cropperResultOptions","quality","format","circle","width","height","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","imgFile","cropContainer","document","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","err","DEBUG","initCropper","default","ensureCroppie","handleCropClick","blobToFile","Modal","isOpen","Boolean","hasCloseButton","dialogRef","isSlim","header","noBackdrop","noBackdropClose","children","onCloseAnimationEnd","onEnter","shouldSkipHistoryAnimations","shouldRender","transitionClassNames","useShowTransition","modalRef","disableDirectTextInput","enableDirectTextInput","captureKeyboardListeners","onEsc","element","handleKeyDown","focusableElements","querySelectorAll","currentFocusedIndex","findIndex","em","isSameNode","activeElement","newFocusedIndex","shiftKey","addEventListener","removeEventListener","trapFocus","useEffectWithPrevDeps","prevIsOpen","classList","toggle","dispatchHeavyAnimationEvent","remove","fullClassName","Portal","callback","delay","savedCallback","useLayoutEffect","setTimeout","clearTimeout","BigInt","require","crypto","readBigIntFromBuffer","buffer","little","signed","randBuffer","Buffer","bytesNumber","reverse","bigInt","Math","floor","subtract","pow","toSignedLittleBuffer","big","number","bigNumber","byteArray","i","shiftRight","and","readBufferFromBigInt","bitLength","ceil","Error","lesser","below","abs","hex","padStart","l","reminder","generateRandomBytes","count","randomBytes","data","shaSum","createHash","update","digest","crcTable","module","exports","generateRandomLong","mod","n","m","crc32","buf","c","k","makeCRCTable","isBuffer","crc","index","byte","generateKeyDataFromNonce","serverNonce","newNonce","hash1","hash2","hash3","Promise","all","concat","slice","iv","sha256","bigIntMod","remainder","add","modExp","a","b","one","x","greater","zero","leastSignificantBit","divide","eq","multiply","getRandomInt","random","sleep","ms","resolve","getByteArray","integer","bits","byteLength","convertToLittle","correct","alloc","writeUInt32BE","bufferXor","res","push","counter","getIsDirectTextInputDisabled"],"sourceRoot":""}